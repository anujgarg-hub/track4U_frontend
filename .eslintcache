[{"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\index.js":"1","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\App.js":"3","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\Signin.js":"4","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\Login.js":"5","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaves\\Leaves.js":"6","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\feature packages\\FeaturesPackages.js":"7","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assigntask\\AssignTask.js":"8","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaveaproval\\DisplayAllLeaveApproval.js":"9","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaves\\DisplayAllLeaves.js":"10","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\packages\\PackageInterface.js":"11","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\packages\\DisplayAllPackages.js":"12","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\feature packages\\DisplayAllFeaturesPackages.js":"13","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendor\\Vendors.js":"14","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\attendence\\DisplayAllAttendence.js":"15","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\expenses\\DisplayAllExpenses.js":"16","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\client\\Client.js":"17","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assignshift\\AssignShift.js":"18","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assigntask\\DisplayAllAssignTask.js":"19","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendor\\DisplayAllVendors.js":"20","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\employees\\EmployeeInterface.js":"21","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\task\\DisplayAllTask.js":"22","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\task\\Task.js":"23","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\client\\DisplayAllClient.js":"24","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\Dashboard.js":"25","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\shift\\Shifts.js":"26","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assignshift\\DisplayAllAssignShift.js":"27","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\employees\\DisplayAllEmployees.js":"28","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\shift\\DisplayAllShifts.js":"29","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\CardView\\CardView.js":"30","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\VendorDashboard.js":"31","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\DashOne.js":"32","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\FetchNodeServices.js":"33","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Checks.js":"34","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Package customer\\PackageCustomer.js":"35","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\statecity\\StateCity.js":"36","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Package customer\\DisplayPackageCustomer.js":"37","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\VendorEmployeeId.js":"38","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\ListItems.js":"39","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\DashOneVend.js":"40","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\TrackAllEmployee.js":"41","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\TrackEmployee.js":"42","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\RoadMap.js":"43","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\ListItems.js":"44","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\orders\\DisplayAllOrder.js":"45","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\DisplayScreenshot.js":"46","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\Display.js":"47","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\profile\\AddProfile.js":"48","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\DisplayPhoneCall.js":"49","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\AutoCompleteTextField.js":"50"},{"size":500,"mtime":499162500000,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"52"},{"size":6927,"mtime":1619100484255,"results":"54","hashOfConfig":"52"},{"size":7622,"mtime":1610181244000,"results":"55","hashOfConfig":"52"},{"size":7822,"mtime":1619075396581,"results":"56","hashOfConfig":"52"},{"size":6685,"mtime":1608723920000,"results":"57","hashOfConfig":"52"},{"size":14364,"mtime":1618991418000,"results":"58","hashOfConfig":"52"},{"size":15265,"mtime":1619154635931,"results":"59","hashOfConfig":"52"},{"size":12983,"mtime":1619010284000,"results":"60","hashOfConfig":"52"},{"size":11897,"mtime":1618991508000,"results":"61","hashOfConfig":"52"},{"size":19129,"mtime":1619334214241,"results":"62","hashOfConfig":"52"},{"size":24081,"mtime":1618991580000,"results":"63","hashOfConfig":"52"},{"size":17659,"mtime":1618991392000,"results":"64","hashOfConfig":"52"},{"size":19873,"mtime":1618991788000,"results":"65","hashOfConfig":"52"},{"size":18354,"mtime":1619171955574,"results":"66","hashOfConfig":"52"},{"size":21147,"mtime":1619159612347,"results":"67","hashOfConfig":"52"},{"size":17208,"mtime":1619090947530,"results":"68","hashOfConfig":"52"},{"size":20938,"mtime":1618992204000,"results":"69","hashOfConfig":"52"},{"size":20028,"mtime":1619174070887,"results":"70","hashOfConfig":"52"},{"size":25775,"mtime":1618991762000,"results":"71","hashOfConfig":"52"},{"size":30442,"mtime":1619172527201,"results":"72","hashOfConfig":"52"},{"size":31619,"mtime":1619095401051,"results":"73","hashOfConfig":"52"},{"size":31609,"mtime":1619155430016,"results":"74","hashOfConfig":"52"},{"size":27583,"mtime":1619090830309,"results":"75","hashOfConfig":"52"},{"size":29022,"mtime":1618141738000,"results":"76","hashOfConfig":"52"},{"size":27408,"mtime":1618991952000,"results":"77","hashOfConfig":"52"},{"size":26851,"mtime":1618991192000,"results":"78","hashOfConfig":"52"},{"size":39894,"mtime":1619090314662,"results":"79","hashOfConfig":"52"},{"size":35863,"mtime":1618991646000,"results":"80","hashOfConfig":"52"},{"size":42190,"mtime":1618829496000,"results":"81","hashOfConfig":"52"},{"size":37433,"mtime":1619179918655,"results":"82","hashOfConfig":"52"},{"size":68421,"mtime":1619443265795,"results":"83","hashOfConfig":"52"},{"size":2395,"mtime":1619180124067,"results":"84","hashOfConfig":"52"},{"size":1700,"mtime":1608718008000,"results":"85","hashOfConfig":"52"},{"size":14398,"mtime":1619443362808,"results":"86","hashOfConfig":"52"},{"size":20403,"mtime":1608637166000,"results":"87","hashOfConfig":"52"},{"size":21752,"mtime":1618991550000,"results":"88","hashOfConfig":"52"},{"size":13799,"mtime":1619105520947,"results":"89","hashOfConfig":"52"},{"size":5188,"mtime":1619424332991,"results":"90","hashOfConfig":"52"},{"size":67128,"mtime":1619179891715,"results":"91","hashOfConfig":"52"},{"size":4028,"mtime":1619176492910,"results":"92","hashOfConfig":"52"},{"size":4579,"mtime":1619171024241,"results":"93","hashOfConfig":"52"},{"size":13244,"mtime":1619167507155,"results":"94","hashOfConfig":"52"},{"size":13573,"mtime":1619069514634,"results":"95","hashOfConfig":"52"},{"size":5140,"mtime":1619161077140,"results":"96","hashOfConfig":"52"},{"size":4768,"mtime":1618993342000,"results":"97","hashOfConfig":"52"},{"size":12149,"mtime":1619101404514,"results":"98","hashOfConfig":"52"},{"size":13595,"mtime":1618824776000,"results":"99","hashOfConfig":"52"},{"size":11364,"mtime":1619160412182,"results":"100","hashOfConfig":"52"},{"size":1657,"mtime":1618672988000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1vrd03n",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"104"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"104"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"104"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"104"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"104"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"104"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"104"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\index.js",[],["247","248"],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\App.js",[],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\Signin.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/tracking.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [getAdminId, setAdminid] = useState(\"\");\r\n  const [getPassword, setPassword] = useState(\"\");\r\n  const [getAlert, setAlert] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    var body = { adminid: getAdminId, password: getPassword };\r\n    var result = await postData(\"admin/checklogin\", body);\r\n    if (result.length == 1) {\r\n      //console.log(props)\r\n      // alert(true)\r\n      localStorage.setItem(\r\n        \"admin\",\r\n        JSON.stringify({ adminid: result[0].adminid })\r\n      );\r\n      //props.history.replace({pathname:`/Dashboard`,admin:result[0]})\r\n      //value can't given because it will only get when admin will Signin So LocalStorage will use\r\n      props.history.replace({ pathname: `/Dashboard` });\r\n    } else {\r\n      setAlert(true);\r\n    }\r\n  };\r\n\r\n  function AlertMsg() {\r\n    return (\r\n      <div>\r\n        {getAlert ? (\r\n          <div w>\r\n            <Alert\r\n              style={{ width: 370, margin: 5 }}\r\n              variant=\"filled\"\r\n              severity=\"error\"\r\n            >\r\n              Invalid Id / Password\r\n            </Alert>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div class=\"sidebar-condensed account2\" style={{ height: \"1000px\" }}>\r\n      // {/* <Grid container component=\"main\" className={classes.root}> */}\r\n      {/* BEGIN LOGIN BOX */}\r\n      <div class=\"container\" id=\"login-block\">\r\n        <i class=\"user-img icons-faces-users-03\"></i>\r\n        <div\r\n          class=\"account-info\"\r\n          style={{\r\n            backgroundImage: \"url(\" + \"../images/tracking.png\" + \")\",\r\n            padding: 0,\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          {/* <img src=\"/images/tracking.png\" style={{ width: \"100%\" }} /> */}\r\n        </div>\r\n          <div class=\"account-form\">\r\n            <form class=\"form-signin\" role=\"form\" onSubmit={handleSubmit}>\r\n              <img src=\"/images/91logo.png\" style={{ width: \"100%\" }} />\r\n              <h3>\r\n                <strong>Sign in</strong> to your account\r\n              </h3>\r\n              <div class=\"append-icon\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"adminid\"\r\n                  class=\"form-control form-white username\"\r\n                  placeholder=\"Username\"\r\n                  required\r\n                  onChange={(event) => setAdminid(event.target.value)}\r\n                  autoComplete=\"admin\"\r\n                />\r\n                <i class=\"icon-user\"></i>\r\n              </div>\r\n              <div class=\"append-icon m-b-20\">\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control form-white password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  id=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <i class=\"icon-lock\"></i>\r\n              </div>\r\n              <button\r\n                style={{ width: \"100%\" }}\r\n                type=\"submit\"\r\n                id=\"submit-form\"\r\n                class=\"btn btn-lg btn-dark btn-rounded ladda-button\"\r\n                data-style=\"expand-left\"\r\n              >\r\n                Sign In\r\n              </button>\r\n            </form>\r\n          </div>\r\n      </div>\r\n      {/* END LOCKSCREEN BOX */}\r\n      {/* <CssBaseline /> */}\r\n      {/* <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"adminid\"\r\n              label=\"Admin Id\"\r\n              autoComplete=\"admin\"\r\n              onChange={(event)=>setAdminid(event.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(event)=>setPassword(event.target.value)}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={()=>handleSubmit()}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            {AlertMsg()}\r\n            \r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n        </div>\r\n      </Grid> */}\r\n      // {/* </Grid> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\Login.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/employee_tracking.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getPassword, setPassword] = useState(\"\");\r\n  const [getAlert, setAlert] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    var body = { vendorid: getVendorId, password: getPassword };\r\n    var result = await postData(\"vendorlogin/vendorchecklogin\", body);\r\n    // console.log(result.result.status);\r\n    if (result.status) {\r\n      // console.log(\"vender\", result);\r\n      localStorage.setItem(\r\n        \"vendor\",\r\n        JSON.stringify({\r\n          vendorid: result.result[0].vendorid,\r\n          companyname: result.result[0].companyname,\r\n          vendorname: result.result[0].vendorname,\r\n          companylogo: result.result[0].companylogo,\r\n        })\r\n      );\r\n      props.history.replace({ pathname: `/VendorDashboard` });\r\n    } else {\r\n      setAlert(true);\r\n    }\r\n  };\r\n\r\n  function AlertMsg() {\r\n    return (\r\n      <div>\r\n        {getAlert ? (\r\n          <div>\r\n            <Alert\r\n              style={{ width: 370, margin: 5 }}\r\n              variant=\"filled\"\r\n              severity=\"error\"\r\n            >\r\n              Invalid Id / Password\r\n            </Alert>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div class=\"sidebar-condensed account2\" style={{ height: \"1000px\" }}>\r\n      // {/* <Grid container component=\"main\" className={classes.root}> */}\r\n      {/* BEGIN LOGIN BOX */}\r\n      <div class=\"container\" id=\"login-block\">\r\n        <i class=\"user-img icons-faces-users-03\"></i>\r\n        <div\r\n          class=\"account-info\"\r\n          style={{\r\n            backgroundImage: \"url(\" + \"../images/employee_tracking.png\" + \")\",\r\n            padding: 0,\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          {/* <img src=\"/images/tracking.png\" style={{ width: \"100%\" }} /> */}\r\n        </div>\r\n        <div class=\"account-form\">\r\n          <div class=\"form-signin\" role=\"form\">\r\n            {/* <img src=\"/images/91logo.png\" style={{ width: \"100%\" }} /> */}\r\n            <h3>\r\n              <strong>Sign in</strong> to your account Vendor\r\n            </h3>\r\n            <div class=\"append-icon\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"vendorid\"\r\n                class=\"form-control form-white username\"\r\n                placeholder=\"Vendor Id\"\r\n                required\r\n                onChange={(event) => setVendorId(event.target.value)}\r\n                autoComplete=\"admin\"\r\n              />\r\n              <i class=\"icon-user\"></i>\r\n            </div>\r\n            <div class=\"append-icon m-b-20\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control form-white password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                id=\"password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <i class=\"icon-lock\"></i>\r\n            </div>\r\n            <button\r\n              style={{ width: \"100%\" }}\r\n              type=\"submit\"\r\n              id=\"submit-form\"\r\n              class=\"btn btn-lg btn-dark btn-rounded ladda-button\"\r\n              data-style=\"expand-left\"\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <Grid container component=\"main\" className={classes.root}>\r\n    //   <CssBaseline />\r\n    //   <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    //   <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n    //     <div className={classes.paper}>\r\n    //       <Avatar className={classes.avatar}>\r\n    //         <LockOutlinedIcon />\r\n    //       </Avatar>\r\n    //       <Typography component=\"h1\" variant=\"h5\">\r\n    //         Sign in\r\n    //       </Typography>\r\n    //         <TextField\r\n    //           variant=\"outlined\"\r\n    //           margin=\"normal\"\r\n    //           required\r\n    //           fullWidth\r\n    //           id=\"vendorid\"\r\n    //           label=\"Vendor Id\"\r\n    //           autoComplete=\"vendor\"\r\n    //           onChange={(event)=>setVendorId(event.target.value)}\r\n    //           autoFocus\r\n    //         />\r\n    //         <TextField\r\n    //           variant=\"outlined\"\r\n    //           margin=\"normal\"\r\n    //           required\r\n    //           fullWidth\r\n    //           label=\"Password\"\r\n    //           type=\"password\"\r\n    //           id=\"password\"\r\n    //           onChange={(event)=>setPassword(event.target.value)}\r\n    //           autoComplete=\"current-password\"\r\n    //         />\r\n    //         <FormControlLabel\r\n    //           control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n    //           label=\"Remember me\"\r\n    //         />\r\n    //         <Button\r\n    //           type=\"submit\"\r\n    //           fullWidth\r\n    //           variant=\"contained\"\r\n    //           color=\"primary\"\r\n    //           className={classes.submit}\r\n    //           onClick={()=>handleSubmit()}\r\n    //         >\r\n    //           Sign In\r\n    //         </Button>\r\n    //         <Grid container>\r\n    //           <Grid item xs>\r\n    //             <Link href=\"#\" variant=\"body2\">\r\n    //               Forgot password?\r\n    //             </Link>\r\n    //           </Grid>\r\n    //           <Grid item>\r\n    //             <Link href=\"#\" variant=\"body2\">\r\n    //               {\"Don't have an account? Sign Up\"}\r\n    //             </Link>\r\n    //           </Grid>\r\n    //         </Grid>\r\n    //         {AlertMsg()}\r\n\r\n    //         <Box mt={5}>\r\n    //           <Copyright />\r\n    //         </Box>\r\n    //     </div>\r\n    //   </Grid>\r\n    // </Grid>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaves\\Leaves.js",["289","290","291","292"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {postDataAndImage}   from  '../FetchNodeServices'\r\nimport {checkRequire} from '../Checks'\r\n//import {MDBIcon} from \"mdbreact\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n       display:'flex',\r\n       justifyContent:'center',\r\n       alignItems:'center',\r\n       marginTop:30,\r\n      },\r\n      paperStyle:{\r\n        width:520,\r\n        padding:20,\r\n        margin:20,\r\n        backgroundColor:'#f1f2f6'\r\n      },\r\n      paperHeading :{\r\n        margin:10,\r\n        padding:10,\r\n        display:'flex',\r\n       justifyContent:'center',\r\n       alignItems:'center',\r\n       backgroundColor:'#dfe4ea'\r\n      },\r\n      subclass:{\r\n        marginTop:3,\r\n        marginBottom:4,\r\n        display:'flex',\r\n        flexDirection:'row'\r\n      },\r\n      avatortheme:{\r\n        width:50,\r\n        height:50,\r\n      },\r\n    input:\r\n     {\r\n      display: 'none',\r\n\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n       width:160,\r\n    },\r\n    center:{\r\n      display:'flex',\r\n      alignItems:'center',\r\n      justifyContent:'center',\r\n      flexDirection:'row'\r\n    }\r\n  }));\r\n\r\nfunction Leaves(){\r\n  const classes=useStyles();\r\n\r\n  const [getVendorId,setVendorId]=useState('')\r\n  const [getLeaveType,setLeaveType]=useState('')\r\n  const [getTotalLeave,setTotalLeave]=useState('') \r\n  const [getImage,setImage]=useState({image:'',fileimage:''})\r\n  const [getMsg,setMsg]=useState('')\r\n  const [getErrVendorId,setErrVendorId]=useState('')\r\n  const [getErrLeaveType,setErrLeaveType]=useState('')\r\n  const [getErrTotalLeave,setErrTotalLeave]=useState('') \r\n  const [getErrImage,setErrImage]=useState('')\r\n  \r\n  const handleImage=(event)=>{\r\n    setImage({image:event.target.files[0],fileimage:URL.createObjectURL(event.target.files[0])})  \r\n   }\r\n   const handleVendorId=()=>{\r\n    var vendor=JSON.parse(localStorage.getItem('vendor'))\r\n    setVendorId(vendor.vendorid)\r\n    \r\n  }\r\n  useEffect(function(){\r\n    handleVendorId()\r\n  })\r\n\r\nconst  handleSubmit=async()=>{\r\n    var err=false;\r\n   if(!checkRequire(getVendorId))\r\n    { err=true\r\n      setErrVendorId('/images/cross.png') }\r\n    if(checkRequire(getVendorId))\r\n    { setErrVendorId('/images/tick.png')}\r\n\r\n    if(!checkRequire(getLeaveType))\r\n    { err=true\r\n      setErrLeaveType('/images/cross.png') }\r\n    if(checkRequire(getLeaveType))\r\n    { setErrLeaveType('/images/tick.png')}    \r\n\r\n    \r\n    if(!checkRequire(getTotalLeave))\r\n    { err=true\r\n      setErrTotalLeave('/images/cross.png') }\r\n    if(checkRequire(getTotalLeave))\r\n    { setErrTotalLeave('/images/tick.png')} \r\n    \r\n\r\n    if(!checkRequire(getImage.image))\r\n    { err=true\r\n      setErrImage('/images/cross.png') }\r\n    if(checkRequire(getImage.image))\r\n    { setErrImage('/images/tick.png')}   \r\n    \r\n   \r\n   if(!err) \r\n { const formData=new FormData()\r\n   formData.append('vendorid',getVendorId)\r\n   formData.append('leavetype',getLeaveType)\r\n   formData.append('totalleave',getTotalLeave)\r\n   formData.append('image',getImage.image)\r\n   console.log('fgh',formData)\r\n   const config={headers:{'content-type':'multipart/form-data'}}\r\n        let result=await postDataAndImage('leaves/addnewrecord',formData,config)\r\n        console.log(result)\r\n        if(result)\r\n        {setMsg(\"Record Submitted...\")}\r\n        else\r\n        {\r\n          setMsg(\"Fail to Submit Record..\")\r\n        }\r\n    }   \r\n    else{\r\n      setMsg(\"Error in Input\")\r\n    }   \r\n}\r\n\r\n\r\n  const ClearData=()=>{    \r\n    setVendorId('')\r\n    setLeaveType('')\r\n    setTotalLeave('')\r\n    setImage({image:'',fileImage:''})\r\n    setMsg('')\r\n    setErrVendorId('')\r\n    setErrLeaveType('')\r\n    setErrTotalLeave('')\r\n    setErrImage('')    \r\n  }\r\n\r\n   \r\n return(\r\n <div className={classes.root}>\r\n <Paper className={classes.paperStyle}>\r\n <Paper  elevation={1} className={classes.paperHeading} >\r\n    <Typography variant=\"h6\" gutterBottom>\r\n        Add Leaves\r\n      </Typography>\r\n     </Paper>\r\n     <Grid container spacing={1}>\r\n         <Grid item xs={12} className={classes.subclass} > \r\n           <img src={getErrVendorId} width='10' height='10' />\r\n             <TextField fullWidth label='Vendor Id' value={getVendorId} variant='standard' onChange={(event)=>setVendorId(event.target.value)}/>\r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass} > \r\n           <img src={getErrLeaveType} width='10' height='10' />  \r\n             <TextField  fullWidth label='Leave Type'  value={getLeaveType} variant='standard' onChange={(event)=>setLeaveType(event.target.value)}/>\r\n         </Grid>\r\n        <Grid item xs={6} className={classes.subclass} > \r\n          <img src={getErrTotalLeave} width='10' height='10' />\r\n          <TextField fullWidth label='Total Leave' value={getTotalLeave} variant='standard' onChange={(event)=>setTotalLeave(event.target.value)}/>\r\n         </Grid>\r\n        \r\n        <Grid item xs={6} className={classes.center}>\r\n        <img src={getErrImage} width='10' height='10' />\r\n         <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>handleImage(event)}\r\n       />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<CloudUploadIcon />} component=\"span\">\r\n         Image\r\n        </Button>\r\n      </label>\r\n      </Grid>\r\n       \r\n       <Grid item xs={6} className={classes.center} >\r\n         <Avatar alt=\"Remy Sharp\" variant='rounded' src={getImage.fileimage}  />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.center}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()}>\r\n          Submit\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={6}className={classes.center} >\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()}>\r\n          Reset\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.subclass}>\r\n          <div>\r\n            <b>Message : {getMsg}</b> \r\n          </div>\r\n        </Grid>\r\n     </Grid>\r\n </Paper>\r\n </div>\r\n );\r\n\r\n}\r\n\r\n\r\nexport default Leaves;","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\feature packages\\FeaturesPackages.js",["293","294","295","296","297","298","299","300","301","302","303","304","305"],"import React, { useEffect, useState } from \"react\";\r\nimport { postData, getData, ServerURL } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    // marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 160,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nfunction FeaturesPackages() {\r\n  const classes = useStyles();\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getPackageTime, setPackageTime] = useState(\"\");\r\n  const [getPackageDistance, setPackageDistance] = useState(\"\");\r\n  const [getFeaturePackages, setFeaturePackages] = useState(\"\");\r\n  const [getFeatureDescription, setFeatureDescription] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getErrPackageId, setErrPackageId] = useState(\"\");\r\n  const [getErrPackageTime, setErrPackageTime] = useState(\"\");\r\n  const [getErrPackageDistance, setErrPackageDistance] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getList, setList] = useState([]);\r\n\r\n  const ClearData = () => {\r\n    setPackageId(\"\");\r\n    setPackageTime(\"\");\r\n    setPackageDistance(\"\");\r\n    setFeaturePackages(\"\");\r\n    setFeatureDescription(\"\");\r\n    setStatus(\"\");\r\n    setMsg(\"\");\r\n    setErrPackageId(\"\");\r\n    setErrPackageTime(\"\");\r\n    setErrPackageDistance(\"\");\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getPackageId)) {\r\n      err = true;\r\n      setErrPackageId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageId)) {\r\n      setErrPackageId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPackageTime)) {\r\n      err = true;\r\n      setErrPackageTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageTime)) {\r\n      setErrPackageTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPackageDistance)) {\r\n      err = true;\r\n      setErrPackageDistance(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageDistance)) {\r\n      setErrPackageDistance(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        packageid: getPackageId,\r\n        packagetime: getPackageTime,\r\n        packagedistance: getPackageDistance,\r\n        featurepackages: getFeaturePackages,\r\n        featuredescription: getFeatureDescription,\r\n        status: getStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"featurespackages/addnewrecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const fetchAllPackages = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchAllPackages();\r\n  }, []);\r\n\r\n  const handlePackageChange = (event) => {\r\n    setPackageId(event.target.value);\r\n  };\r\n\r\n  const fillPackageItem = () => {\r\n    return getList.map((item, key) => {\r\n      return <MenuItem value={item.packageid}>{item.packagename}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"\">\r\n        <div class=\"panel panel-default no-bd\">\r\n          <div class=\"panel-header bg-dark\">\r\n            <h3 class=\"panel-title\">\r\n              <strong>Add Features Packages</strong> \r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body bg-white\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 \">\r\n                <form\r\n                  role=\"form\"\r\n                  class=\"form-validation\"\r\n                  novalidate=\"novalidate\"\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Packages</label>\r\n                        <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          {/* <FormControl fullWidth> */}\r\n\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getPackageId}\r\n                            fullWidth=\"true\"\r\n                            onChange={(event) => handlePackageChange(event)}\r\n                          >\r\n                            {fillPackageItem()}\r\n                          </Select>\r\n                          {/* </FormControl> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Package Time</label>\r\n                        <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Package Time\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getPackageTime}\r\n                            onChange={(event) => {\r\n                              setPackageTime(event.target.value);\r\n                            }}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Package Distance</label>\r\n                        <img\r\n                          src={getErrPackageDistance}\r\n                          width=\"10\"\r\n                          height=\"10\"\r\n                        />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"4\"\r\n                            placeholder=\"Package Distance\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getPackageDistance}\r\n                            onChange={(event) => {\r\n                              setPackageDistance(event.target.value);\r\n                            }}\r\n                          />\r\n                          <i class=\"fa fa-map\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Feature Package</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Feature Packages\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getFeaturePackages}\r\n                            onChange={(event) => {\r\n                              setFeaturePackages(event.target.value);\r\n                            }}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Feature Description</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Description\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getFeatureDescription}\r\n                            onChange={(event) => {\r\n                              setFeatureDescription(event.target.value);\r\n                            }}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-3\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        value={getStatus}\r\n                        onChange={(event) => setStatus(event.target.value)}\r\n                      >\r\n                        <option>----Status----</option>\r\n                        <option value=\"Activate\">Activate</option>\r\n                        <option value=\"Deactivate\">Deactivate</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // class=\"btn btn-embossed btn-primary\"\r\n                      onClick={(event) => {\r\n                        handleSubmit();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-transparent\"\r\n                      type=\"reset\"\r\n                      // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                      onClick={(event) => {\r\n                        ClearData();\r\n                      }}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                  {getMsg}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Paper className={classes.mainpaper}>\r\n        <Paper elevation={1} className={classes.headingstyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <b>&nbsp;&nbsp;&nbsp;Add Features Packages </b>\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} className={classes.center}>\r\n            <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Packages</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={getPackageId}\r\n                fullWidth=\"true\"\r\n                onChange={(event) => handlePackageChange(event)}\r\n              >\r\n                {fillPackageItem()}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Time\"\r\n              variant=\"standard\"\r\n              value={getPackageTime}\r\n              onChange={(event) => {\r\n                setPackageTime(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageDistance} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Distance\"\r\n              variant=\"standard\"\r\n              value={getPackageDistance}\r\n              onChange={(event) => {\r\n                setPackageDistance(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                ClearData();\r\n              }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturesPackages;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assigntask\\AssignTask.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport { SettingsBackupRestoreOutlined } from \"@material-ui/icons\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 250,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction AssignTask() {\r\n  const classes = useStyles();\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getTaskId, setTaskId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [selectedAssignDate, setSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedAssignTime, setSelectedAssignTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getTaskStatus, setTaskStatus] = React.useState(\"Not Completed\");\r\n  const [getErrTaskId, setErrTaskId] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [ErrselectedAssignDate, setErrSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [ErrselectedAssignTime, setErrSelectedAssignTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getErrTaskStatus, setErrTaskStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getTaskId)) {\r\n      err = true;\r\n      setErrTaskId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskId)) {\r\n      setErrTaskId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignDate)) {\r\n      err = true;\r\n      setErrSelectedAssignDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignDate)) {\r\n      setErrSelectedAssignDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignTime)) {\r\n      err = true;\r\n      setErrSelectedAssignTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignTime)) {\r\n      setErrSelectedAssignTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTaskStatus)) {\r\n      err = true;\r\n      setErrTaskStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskStatus)) {\r\n      setErrTaskStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        taskid: getTaskId,\r\n        employeeid: getEmployeeId,\r\n        assigndate: selectedAssignDate,\r\n        assigntime: selectedAssignTime,\r\n        taskstatus: getTaskStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"assigntask/addnewrecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setTaskId(\"\");\r\n    setEmployeeId(\"\");\r\n    setSelectedAssignTime(new Date());\r\n    setSelectedAssignDate(new Date());\r\n    setTaskStatus(\"\");\r\n    setMsg(\"\");\r\n    setErrTaskId(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrSelectedAssignDate(\"\");\r\n    setErrSelectedAssignTime(\"\");\r\n    setErrTaskStatus(\"\");\r\n  };\r\n\r\n  const handleAssignDateChange = (date) => {\r\n    setSelectedAssignDate(date);\r\n  };\r\n\r\n  const handleAssignTimeChange = (time) => {\r\n    setSelectedAssignTime(time);\r\n  };\r\n\r\n  const fetchAllTask = async (V_id) => {\r\n    // alert(V_id);\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"task/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchAllTask(vendor.vendorid);\r\n    fetchEmployees(vendor.vendorid);\r\n  }, []);\r\n\r\n  const handleTaskChange = (event) => {\r\n    setTaskId(event.target.value);\r\n  };\r\n\r\n  const fillTaskItem = () => {\r\n    return getList.map((item, key) => {\r\n      return <MenuItem value={item.taskid}>{item.taskname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const fetchEmployees = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\", body);\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  // const fetchEmployees = async () => {\r\n  //   var list = await getData(\"employees/displayall\");\r\n  //   setEmployeesList(list.data);\r\n  // };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Assign Task</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form role=\"form\" class=\"form-validation\" novalidate=\"novalidate\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Tasks</label>\r\n                      <img src={getErrTaskId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getTaskId}\r\n                          onChange={(event) => handleTaskChange(event)}\r\n                        >\r\n                          {fillTaskItem()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Employee</label>\r\n                      <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmployeeId}\r\n                          onChange={(event) =>\r\n                            setEmployeeId(event.target.value)\r\n                          }\r\n                        >\r\n                          {fillEmployees()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Assign Date</label>\r\n                      <img src={ErrselectedAssignDate} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Assign Date\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            fullWidth=\"true\"\r\n                            value={selectedAssignDate}\r\n                            onChange={handleAssignDateChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Assign Time</label>\r\n                      <img src={ErrselectedAssignTime} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            id=\"time-picker\"\r\n                            label=\"Assign Time\"\r\n                            fullWidth=\"true\"\r\n                            value={selectedAssignTime}\r\n                            onChange={handleAssignTimeChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change time\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    type=\"submit\"\r\n                    // class=\"btn btn-embossed btn-primary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperstyle}>\r\n        <Paper elevation={1} className={classes.headingstyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <b>&nbsp;&nbsp;&nbsp;&nbsp;Add Task </b>\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrTaskId} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Tasks</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={getTaskId}\r\n                onChange={(event) => handleTaskChange(event)}\r\n              >\r\n                {fillTaskItem()}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Employee</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={getEmployeeId}\r\n                onChange={(event) => setEmployeeId(event.target.value)}\r\n              >\r\n                {fillEmployees()}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={ErrselectedAssignDate} width=\"10\" height=\"10\" />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Assign Date\"\r\n                format=\"MM/dd/yyyy\"\r\n                fullWidth=\"true\"\r\n                value={selectedAssignDate}\r\n                onChange={handleAssignDateChange}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={ErrselectedAssignTime} width=\"10\" height=\"10\" />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardTimePicker\r\n                margin=\"normal\"\r\n                id=\"time-picker\"\r\n                label=\"Assign Time\"\r\n                fullWidth=\"true\"\r\n                value={selectedAssignTime}\r\n                onChange={handleAssignTimeChange}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change time\",\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => ClearData()}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignTask;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaveaproval\\DisplayAllLeaveApproval.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React,{useState,useEffect} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getData, ServerURL ,postData,postDataAndImage}  from '../FetchNodeServices'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {checkRequire} from '../Checks'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n root:{\r\n     display:'flex',\r\n     alignItems:'center',\r\n     justifyContent:'center',\r\n     marginTop:30,\r\n } ,\r\n tableDiv:{\r\n    width:window.innerWidth*0.8,\r\n },\r\n avatortheme:{\r\n  width:50,\r\n  height:50,\r\n},\r\nmain:{\r\n  display:'flex',\r\n  alignItems:'center',\r\n  justifyContent:'center',\r\n} ,\r\npaperStyle:{\r\n  width:520,\r\n  padding:20,\r\n  margin:20,\r\n  backgroundColor:'#f1f2f6'\r\n},\r\npaperHeading :{\r\n  margin:10,\r\n  padding:10,\r\n  display:'flex',\r\n justifyContent:'center',\r\n alignItems:'center',\r\n backgroundColor:'#dfe4ea'\r\n},\r\nsubclass:{\r\n  marginTop:3,\r\n  marginBottom:4,\r\n  display:'flex',\r\n  flexDirection:'row'\r\n},\r\ninput:\r\n{\r\ndisplay: 'none',\r\n\r\n},\r\nbutton: {\r\nmargin: theme.spacing(1),\r\n width:160,\r\n},\r\ncenter:{\r\ndisplay:'flex',\r\nalignItems:'center',\r\njustifyContent:'center',\r\nflexDirection:'row'\r\n}\r\n})\r\n)\r\n\r\nexport default function DisplayAllPackages() {\r\n  const classes=useStyles()\r\n  const [getList,setList]=useState([])\r\n  const [getOpen,setOpen]=useState(false)\r\n  const [getLeaveApprovalId,setLeaveApprovalId]=useState('')\r\n  const [getVendorId,setVendorId]=useState('')\r\n  const [getEmployeeId,setEmployeeId]=useState('')\r\n  const [getDateFrom,setDateFrom]=useState(new Date())\r\n  const [getDateTo,setDateTo]=useState(new Date())\r\n  const [getLeaveId,setLeaveId]=useState('')\r\n  const [getStatus,setStatus]=useState('')\r\n  const [getDescription,setDescription]=useState('')\r\n  const [getMsg,setMsg]=useState('')\r\n  const [getErrEmployeeId,setErrEmployeeId]=useState('')\r\n  const [getErrDateFrom,setErrDateFrom]=useState(new Date())\r\n  const [getErrDateTo,setErrDateTo]=useState(new Date())\r\n  const [getErrLeaveId,setErrLeaveId]=useState('')\r\n  const [getErrStatus,setErrStatus]=useState('')\r\n  const [getErrDescription,setErrDescription]=useState('')\r\n  const [getEmployeesList,setEmployeesList]=useState([])\r\n  const [getLeaveList,setLeaveList]=useState([])\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: 'Id', field: 'leaveapprovalid' },\r\n      { title: 'Vendor Id', field: 'vendorid' },\r\n      { title: 'Employee Id', field: 'employeeid' },\r\n      { title: 'From', field: 'from',\r\n       render :rowData=> <div>{displayDate(rowData.datefrom)}</div> },\r\n       { title: 'To', field: 'to',\r\n       render :rowData=> <div>{displayDate(rowData.dateto)}</div> },\r\n     { title: 'Leave Id', field: 'leaveid' },\r\n     { title: 'Description', field: 'description' },\r\n     { title: 'Status', field: 'status' },\r\n    ]\r\n  });\r\n  \r\n  const displayDate=(date)=>{\r\n    let d=new Date(date)\r\n        let cd=d.getFullYear()+\"-\"+(d.getMonth() + 1)+\"-\"+d.getDate()\r\n        return(cd)\r\n    } \r\n\r\n  \r\n  const fetchData=async()=>{\r\n    var list =await getData('leaveapproval/displayall')\r\n    setList(list.data)\r\n}\r\n\r\n useEffect(function(){\r\n    fetchData()\r\n    fetchEmployees()\r\n    fetchLeaves()\r\n},[])\r\n\r\nconst  fetchEmployees=async()=>{\r\n  var list=await getData('employees/displayall')\r\n    setEmployeesList(list.data)\r\n   } \r\n  \r\n\r\n\r\nconst fillEmployees=()=>{\r\n  return getEmployeesList.map(function(item,key){\r\n    return (\r\n        <MenuItem  value={item.employeeid}>\r\n         {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n    )\r\n  })\r\n   }\r\n\r\n  const  fetchLeaves=async()=>{\r\n    var list=await getData('leaves/displayall')\r\n      setLeaveList(list.data)\r\n     } \r\n    \r\n  \r\n  \r\n  const fillLeaves=()=>{\r\n    return getLeaveList.map(function(item,key){\r\n      return (\r\n          <MenuItem  value={item.leaveid}>\r\n           {item.leavetype}\r\n          </MenuItem>\r\n      )\r\n    })\r\n     }\r\n\r\n\r\n\r\n const handleDelete=async(oldData)=>{\r\n   var body={leaveapprovalid:oldData.leaveapprovalid}\r\n   var result=await postData('leaveapproval/deleteRecord',body)\r\n }\r\n\r\n const  handleEdit=async()=>{\r\n  var err=false;\r\n  if(!checkRequire(getDateFrom))\r\n    { err=true\r\n      setErrDateFrom('/images/cross.png') }\r\n    if(checkRequire(getDateFrom))\r\n    { setErrDateFrom('/images/tick.png')}\r\n\r\n    if(!checkRequire(getDateTo))\r\n    { err=true\r\n      setErrDateTo('/images/cross.png') }\r\n    if(checkRequire(getDateTo))\r\n    { setErrDateTo('/images/tick.png')}    \r\n    \r\n    if(!checkRequire(getEmployeeId))\r\n    { err=true\r\n      setErrEmployeeId('/images/cross.png') }\r\n    if(checkRequire(getEmployeeId))\r\n    { setErrEmployeeId('/images/tick.png')}  \r\n    \r\n    if(!checkRequire(getLeaveId))\r\n    { err=true\r\n      setErrLeaveId('/images/cross.png') }\r\n    if(checkRequire(getLeaveId))\r\n    { setErrLeaveId('/images/tick.png')} \r\n\r\n    if(!checkRequire(getDescription))\r\n    { err=true\r\n      setErrDescription('/images/cross.png') }\r\n    if(checkRequire(getDescription))\r\n    { setErrDescription('/images/tick.png')} \r\n\r\n    if(!checkRequire(getStatus))\r\n    { err=true\r\n      setErrStatus('/images/cross.png') }\r\n    if(checkRequire(getStatus))\r\n    { setErrStatus('/images/tick.png')} \r\n    \r\n  if(!err) \r\n{var body={leaveapprovalid:getLeaveApprovalId,from:getDateFrom,to:getDateTo,vendorid:getVendorId,leaveid:getLeaveId,\r\n                 description:getDescription,status:getStatus,employeeid:getEmployeeId}\r\n var result=await postData('leaveapproval/updateRecord',body)\r\n\r\n if(result.RESULT){\r\n  setMsg(\"Record Edited..\")\r\n  }\r\n else{\r\n  setMsg(\"Fail To Edit Record...\")\r\n } \r\n}\r\nelse{\r\nsetMsg(\"Error in Input\")\r\n}\r\n}\r\n\r\n const handleClickOpen = async(rowData) => {\r\n  setOpen(true);\r\n  setLeaveApprovalId(rowData.leaveapprovalid)\r\n  setDateFrom(rowData.datefrom)\r\n  setDateTo(rowData.dateto)\r\n  setVendorId(rowData.vendorid)\r\n  setEmployeeId(rowData.employeeid)\r\n  setLeaveId(rowData.leaveid)\r\n  setDescription(rowData.description)\r\n  setStatus(rowData.status)\r\n  \r\n};\r\n\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n  setMsg('')\r\n  setErrDateFrom('')\r\n  setErrDateTo('')\r\n  setErrEmployeeId('')\r\n  setErrDescription('')\r\n  setErrLeaveId('')\r\n  setErrStatus('')\r\n  fetchData()\r\n};\r\n\r\n\r\n const handleDialog=()=>{\r\n  return (\r\n    <div>\r\n      <Dialog open={getOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">LeaveApproval Edit </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          <div className={classes.center}>\r\n <Paper className={classes.paperStyle}>\r\n  \r\n <Grid container spacing={1}>\r\n <Grid item xs={12} className={classes.subclass} > \r\n    <img src={'/images/tick.png'} width='10' height='10' />\r\n     <TextField fullWidth label='Leave Approval Id' value={getLeaveApprovalId} variant='standard' />\r\n         </Grid>\r\n         <Grid item xs={12} className={classes.subclass} > \r\n           <img src='/images/tick.png' width='10' height='10' />\r\n             <TextField fullWidth label='Vendor ' value={getVendorId} variant='standard'/>\r\n         </Grid>\r\n     <Grid item xs={6} className={classes.subclass} > \r\n   <img src={getErrEmployeeId} width='10' height='10' />\r\n   <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">Employee</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getEmployeeId}\r\n          onChange={(event)=>setEmployeeId(event.target.value)}\r\n        >  \r\n         {fillEmployees()}\r\n        </Select>\r\n      </FormControl>\r\n    </Grid>\r\n        <Grid item xs={6} className={classes.subclass} > \r\n        <img src={getErrLeaveId} width='10' height='10' /> \r\n        <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">Leave Type</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getLeaveId}\r\n          onChange={(event)=>setLeaveId(event.target.value)}\r\n        >  \r\n         {fillLeaves()}\r\n        </Select>\r\n      </FormControl></Grid>\r\n        <Grid item xs={12} className={classes.subclass} > \r\n        <img src={getErrDescription} width='10' height='10' /> \r\n          <TextField fullWidth label='Description' value={getDescription} variant='standard' onChange={(event)=>setDescription(event.target.value)}/>\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.subclass} >\r\n         <img src={getErrDateFrom} width='10' height='10' /> \r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n          label=\"From\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getDateFrom}\r\n          onChange={(event)=>setDateFrom(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> </Grid>\r\n        <Grid item xs={6} className={classes.subclass} >\r\n         <img src={getErrDateTo} width='10' height='10' /> \r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n          label=\"To\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getDateTo}\r\n          onChange={(event)=>setDateTo(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider></Grid>\r\n        \r\n       <Grid item xs={12} className={classes.subclass} >\r\n       <img src={getErrStatus} width='10' height='10' />\r\n       <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\"> Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n         value={getStatus}\r\n         onChange={(event)=>setStatus(event.target.value)}\r\n          > \r\n         <MenuItem value='Approved'>Approved</MenuItem>\r\n        <MenuItem value='Not-Approved'>Not Approved</MenuItem>\r\n        </Select>\r\n      </FormControl></Grid>\r\n        <Grid item xs={6} className={classes.center}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleEdit()}>\r\n          Save Record\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.subclass}>\r\n          <div>\r\n            <b>Message : {getMsg}</b> \r\n          </div>\r\n        </Grid>\r\n     </Grid>\r\n </Paper>\r\n </div>\r\n    </DialogContentText>\r\n     </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n }\r\n  return (\r\n      <div className={classes.root}>\r\n     <div className={classes.tableDiv} >\r\n     <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Leaves Approval</strong>List\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n      title=\" \"\r\n      columns={state.columns}\r\n      data={getList}\r\n\toptions={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          ac\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: 'Edit',\r\n          onClick: (event, rowData) => handleClickOpen(rowData)\r\n        }\r\n      ]}\r\n      editable={{\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n                const data = [...getList]\r\n           data.splice(data.indexOf(oldData), 1);\r\n                setList(data)\r\n                handleDelete(oldData)\r\n              \r\n            }, 200);\r\n          }),\r\n      }}\r\n    />\r\n    {handleDialog()}\r\n    </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\leaves\\DisplayAllLeaves.js",["345","346","347","348","349","350","351","352","353","354","355"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.8,\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: 520,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 160,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllLeaves() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getRowData, setRowData] = useState([]);\r\n  const [getLeaveId, setLeaveId] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getLeaveType, setLeaveType] = useState(\"\");\r\n  const [getTotalLeave, setTotalLeave] = useState(\"\");\r\n  const [getImage, setImage] = useState({ image: \"\", fileimage: \"\" });\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getErrLeaveType, setErrLeaveType] = useState(\"\");\r\n  const [getErrTotalLeave, setErrTotalLeave] = useState(\"\");\r\n  const [getErrImage, setErrImage] = useState(\"\");\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Leave Id\", field: \"leaveid\" },\r\n      { title: \"Vendor Id\", field: \"vendorid\" },\r\n      { title: \"Leave Type\", field: \"leavetype\" },\r\n      { title: \"Total Leave\", field: \"totalleave\" },\r\n      {\r\n        title: \"Image\",\r\n        field: \"image\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.image}`}\r\n              className={classes.avatortheme}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    var list = await getData(\"leaves/displayall\");\r\n    setList(list);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    var body = { leaveid: oldData.leaveid };\r\n    var result = await postData(\"leaves/deleteRecord\", body);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getVendorId)) {\r\n      err = true;\r\n      setErrVendorId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorId)) {\r\n      setErrVendorId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getLeaveType)) {\r\n      err = true;\r\n      setErrLeaveType(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLeaveType)) {\r\n      setErrLeaveType(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTotalLeave)) {\r\n      err = true;\r\n      setErrTotalLeave(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTotalLeave)) {\r\n      setErrTotalLeave(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      const formData = new FormData();\r\n      formData.append(\"leaveid\", getLeaveId);\r\n      formData.append(\"vendorid\", getVendorId);\r\n      formData.append(\"leavetype\", getLeaveType);\r\n      formData.append(\"totalleave\", getTotalLeave);\r\n      formData.append(\"image\", getImage.image);\r\n      const config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      let result = await postDataAndImage(\r\n        \"leaves/editRecord\",\r\n        formData,\r\n        config\r\n      );\r\n      console.log(result);\r\n      if (result) {\r\n        setMsg(\"Record Edited...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    //setRowData(rowData)\r\n    setLeaveId(rowData.leaveid);\r\n    setVendorId(rowData.vendorid);\r\n    setLeaveType(rowData.leavetype);\r\n    setTotalLeave(rowData.totalleave);\r\n    setImage({ image: \"\", fileimage: `${ServerURL}/images/${rowData.image}` });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n    setMsg(\"\");\r\n    setErrVendorId(\"\");\r\n    setErrLeaveType(\"\");\r\n    setErrTotalLeave(\"\");\r\n    setErrImage(\"\");\r\n  };\r\n\r\n  const handleImage = (event) => {\r\n    setImage({\r\n      image: event.target.files[0],\r\n      fileimage: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  const handleDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Package Edit </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <div className={classes.center}>\r\n                <Paper className={classes.paperStyle}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Leave Id\"\r\n                        value={getLeaveId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Vendor Id\"\r\n                        value={getVendorId}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setVendorId(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrLeaveType} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Leave Type\"\r\n                        value={getLeaveType}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setLeaveType(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrTotalLeave} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Total Leave\"\r\n                        value={getTotalLeave}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setTotalLeave(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(event) => handleImage(event)}\r\n                      />\r\n                      <label htmlFor=\"contained-button-file\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          startIcon={<CloudUploadIcon />}\r\n                          component=\"span\"\r\n                        >\r\n                          Image\r\n                        </Button>\r\n                      </label>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        variant=\"rounded\"\r\n                        src={getImage.fileimage}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Save Record\r\n                      </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <div>\r\n                        <b>Message : {getMsg}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </div>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Leaves List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n        {handleDialog()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\packages\\PackageInterface.js",["356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { postDataAndImage } from \"../FetchNodeServices\";\r\nimport { checkRequire } from \"../Checks\";\r\n//import {MDBIcon} from \"mdbreact\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    // marginTop: 30,\r\n  },\r\n  paperStyle: {\r\n    width: 520,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction PackageInterface() {\r\n  const classes = useStyles();\r\n  const [getPackageName, setPackageName] = useState(\"\");\r\n  const [getIcon, setIcon] = useState({ icon: \"\", fileIcon: \"\" });\r\n  const [getPrice, setPrice] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getOfferPrice, setOfferPrice] = useState(\"\");\r\n  const [getDuration, setDuration] = useState(\"\");\r\n  const [getNoOfusers, setNoOfUsers] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrPackage, setErrPackage] = useState(\"\");\r\n  const [getErrDes, setErrDes] = useState(\"\");\r\n  const [getErrIcon, setErrIcon] = useState(\"\");\r\n  const [getErrPrice, setErrPrice] = useState(\"\");\r\n  const [getErrOfferPrice, setErrOfferPrice] = useState(\"\");\r\n  const [getErrDuration, setErrDuration] = useState(\"\");\r\n  const [getErrNoOfusers, setErrNoOfusers] = useState(\"\");\r\n\r\n  const handleIcon = (event) => {\r\n    setIcon({\r\n      icon: event.target.files[0],\r\n      fileIcon: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getPackageName)) {\r\n      err = true;\r\n      setErrPackage(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageName)) {\r\n      setErrPackage(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDes(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDes(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getIcon.icon)) {\r\n      err = true;\r\n      setErrIcon(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getIcon.icon)) {\r\n      setErrIcon(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPrice)) {\r\n      err = true;\r\n      setErrPrice(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPrice)) {\r\n      setErrPrice(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getOfferPrice)) {\r\n      err = true;\r\n      setErrOfferPrice(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getOfferPrice)) {\r\n      setErrOfferPrice(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDuration)) {\r\n      err = true;\r\n      setErrDuration(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDuration)) {\r\n      setErrDuration(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getNoOfusers)) {\r\n      err = true;\r\n      setErrNoOfusers(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getNoOfusers)) {\r\n      setErrNoOfusers(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var formData = new FormData();\r\n      formData.append(\"packagename\", getPackageName);\r\n      formData.append(\"description\", getDescription);\r\n      formData.append(\"price\", getPrice);\r\n      formData.append(\"Icon\", getIcon.icon);\r\n      formData.append(\"offerprice\", getOfferPrice);\r\n      formData.append(\"noofusers\", getNoOfusers);\r\n      formData.append(\"duration\", getDuration);\r\n\r\n      var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      var result = await postDataAndImage(\r\n        \"packages/addnewpackage\",\r\n        formData,\r\n        config\r\n      );\r\n      console.log(result);\r\n      if (result) {\r\n        setMsg(\"Record Submitted..\");\r\n      } else {\r\n        setMsg(\"Fail To Submit..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n  const ClearData = () => {\r\n    setPackageName(\"\");\r\n    setDescription(\"\");\r\n    setIcon({ icon: \"\", fileIcon: \"\" });\r\n    setPrice(\"\");\r\n    setOfferPrice(\"\");\r\n    setDuration(\"\");\r\n    setNoOfUsers(\"\");\r\n    setMsg(\"\");\r\n    setErrNoOfusers(\"\");\r\n    setErrPackage(\"\");\r\n    setErrDes(\"\");\r\n    setErrIcon(\"\");\r\n    setErrDuration(\"\");\r\n    setErrPrice(\"\");\r\n    setErrOfferPrice(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div class=\"panel panel-default no-bd\">\r\n          <div class=\"panel-header bg-dark\">\r\n            <h3 class=\"panel-title\">\r\n              <strong>Add New Package</strong>\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body bg-white\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <form\r\n                  role=\"form\"\r\n                  class=\"form-validation\"\r\n                  novalidate=\"novalidate\"\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Package Name</label>\r\n                        <img src={getErrPackage} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Package Name\"\r\n                            value={getPackageName}\r\n                            onChange={(event) =>\r\n                              setPackageName(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Discription</label>\r\n                        <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Discription\"\r\n                            value={getDescription}\r\n                            onChange={(event) =>\r\n                              setDescription(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Price</label>\r\n                        <img src={getErrPrice} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Price\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getPrice}\r\n                            onChange={(event) => setPrice(event.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-rupee\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Offer Price</label>\r\n                        <img src={getErrOfferPrice} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"4\"\r\n                            placeholder=\"Offer Price\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getOfferPrice}\r\n                            onChange={(event) =>\r\n                              setOfferPrice(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"fa fa-rupee\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Duration</label>\r\n                        <img src={getErrDuration} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\" >\r\n                        \r\n                        <DatePicker                       \r\n                        // wrapperClassName={{width:'100%'}}\r\n                         className=\"form-control\"\r\n                        selected={getDuration}\r\n                        value={getDuration}\r\n                         onChange={date => setDuration(date)} \r\n                         minDate={new Date()}\r\n                         aria-required=\"true\"\r\n                        //  fullWidth\r\n                         placeholderText=\"Duration\"\r\n                         label=\"Duration\"\r\n                        //  width='100%'\r\n                        //  width={100}\r\n                         />\r\n                         \r\n                          {/* <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Duration\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getDuration}\r\n                            onChange={(event) =>\r\n                              setDuration(event.target.value)\r\n                            }\r\n                          /> */}\r\n                          <i class=\"icon-clock\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">No. of user</label>\r\n                        <img src={getErrNoOfusers} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"No. of user\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getNoOfusers}\r\n                            onChange={(event) =>\r\n                              setNoOfUsers(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"icon-user\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        style={{ display: \"none\" }}\r\n                        id=\"contained-button-file\"\r\n                        type=\"file\"\r\n                        onChange={(event) => handleIcon(event)}\r\n                      />\r\n                      <label htmlFor=\"contained-button-file\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                          fullWidth\r\n                        >\r\n                          Upload Icon\r\n                        </Button>\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <Avatar\r\n                          alt=\"Remy Sharp\"\r\n                          variant=\"rounded\"\r\n                          src={getIcon.fileIcon}\r\n                          className={classes.avatortheme}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // class=\"btn btn-embossed btn-primary\"\r\n                      onClick={() => handleSubmit()}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-transparent\"\r\n                      type=\"reset\"\r\n                      // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                      onClick={() => ClearData()}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperStyle}>\r\n        <Paper elevation={1} className={classes.paperHeading}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Add New Package\r\n          </Typography>\r\n        </Paper>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} className={classes.subclass}>\r\n            <img src={getErrPackage} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Package Name\"\r\n              value={getPackageName}\r\n              variant=\"standard\"\r\n              onChange={(event) => setPackageName(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.subclass}>\r\n            <img src={getErrDes} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Description\"\r\n              value={getDescription}\r\n              variant=\"standard\"\r\n              onChange={(event) => setDescription(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.subclass}>\r\n            <img src={getErrPrice} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Price\"\r\n              value={getPrice}\r\n              variant=\"standard\"\r\n              onChange={(event) => setPrice(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.subclass}>\r\n            <img src={getErrOfferPrice} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Offer Price\"\r\n              value={getOfferPrice}\r\n              variant=\"standard\"\r\n              onChange={(event) => setOfferPrice(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.subclass}>\r\n            <img src={getErrDuration} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Duration\"\r\n              value={getDuration}\r\n              variant=\"standard\"\r\n              onChange={(event) => setDuration(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.subclass}>\r\n            <img src={getErrNoOfusers} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              fullWidth\r\n              label=\"No of Users\"\r\n              value={getNoOfusers}\r\n              variant=\"standard\"\r\n              onChange={(event) => setNoOfUsers(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrIcon} width=\"10\" height=\"10\" />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"contained-button-fileicon\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(event) => handleIcon(event)}\r\n            />\r\n            <label htmlFor=\"contained-button-fileicon\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon />}\r\n                component=\"span\"\r\n              >\r\n                Upload Icon\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.center}>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={getIcon.fileIcon}\r\n              className={classes.avatortheme}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.center}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.center}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => ClearData()}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.subclass}>\r\n            <div>\r\n              <b>Message : {getMsg}</b>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PackageInterface;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\packages\\DisplayAllPackages.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // marginTop: 30,\r\n    // fontSize: \"14pt\",\r\n  },\r\n\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.8,\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: 520,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 160,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllPackages() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getRowData, setRowData] = useState([]);\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getPackageName, setPackageName] = useState(\"\");\r\n  const [getIcon, setIcon] = useState({ icon: \"\", fileIcon: \"\" });\r\n  const [getPrice, setPrice] = useState(\"\");\r\n  const [getOfferPrice, setOfferPrice] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getDuration, setDuration] = useState(\"\");\r\n  const [getNoOfusers, setNoOfUsers] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrPackage, setErrPackage] = useState(\"\");\r\n  const [getErrDes, setErrDes] = useState(\"\");\r\n  const [getErrIcon, setErrIcon] = useState(\"\");\r\n  const [getErrPrice, setErrPrice] = useState(\"\");\r\n  const [getErrOfferPrice, setErrOfferPrice] = useState(\"\");\r\n  const [getErrDuration, setErrDuration] = useState(\"\");\r\n  const [getErrNoOfusers, setErrNoOfusers] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Id\", field: \"packageid\" },\r\n      { title: \"Package Name\", field: \"packagename\" },\r\n      { title: \"Description\", field: \"description\" },\r\n      { title: \"Price\", field: \"price\" },\r\n      { title: \"Offer Price\", field: \"offerprice\" },\r\n      {\r\n        title: \"Icon\",\r\n        field: \"Icon\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.Icon}`}\r\n              className={classes.avatortheme}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      { title: \"Duration\", field: \"duration\" },\r\n      { title: \"No of Users\", field: \"noofusers\" },\r\n    ],\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    var body = { packageid: oldData.packageid };\r\n    var result = await postData(\"packages/deleteRecord\", body);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getPackageName)) {\r\n      err = true;\r\n      setErrPackage(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageName)) {\r\n      setErrPackage(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDes(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDes(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPrice)) {\r\n      err = true;\r\n      setErrPrice(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPrice)) {\r\n      setErrPrice(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getOfferPrice)) {\r\n      err = true;\r\n      setErrOfferPrice(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getOfferPrice)) {\r\n      setErrOfferPrice(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDuration)) {\r\n      err = true;\r\n      setErrDuration(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDuration)) {\r\n      setErrDuration(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getNoOfusers)) {\r\n      err = true;\r\n      setErrNoOfusers(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getNoOfusers)) {\r\n      setErrNoOfusers(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var formData = new FormData();\r\n\r\n      formData.append(\"packagename\", getPackageName);\r\n      formData.append(\"description\", getDescription);\r\n      formData.append(\"Icon\", getIcon.icon);\r\n      formData.append(\"price\", getPrice);\r\n      formData.append(\"offerprice\", getOfferPrice);\r\n      formData.append(\"duration\", getDuration);\r\n      formData.append(\"noofusers\", getNoOfusers);\r\n      formData.append(\"packageid\", getPackageId);\r\n\r\n      var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      var result = await postDataAndImage(\r\n        \"packages/updateRecord\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      if (result) {\r\n        setMsg(\"Record Edited..\");\r\n      } else {\r\n        setMsg(\"Fail To Edit Record...\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleIcon = (event) => {\r\n    setIcon({\r\n      icon: event.target.files[0],\r\n      fileIcon: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    //setRowData(rowData)\r\n    setPackageId(rowData.packageid);\r\n    setPackageName(rowData.packagename);\r\n    setPrice(rowData.price);\r\n    setDescription(rowData.description);\r\n    setOfferPrice(rowData.offerprice);\r\n    setIcon({ icon: \"\", fileIcon: `${ServerURL}/images/${rowData.Icon}` });\r\n    setDuration(rowData.duration);\r\n    setNoOfUsers(rowData.noofusers);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMsg(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          // aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          {/* <DialogTitle id=\"form-dialog-title\">Package Edit </DialogTitle> */}\r\n          {/* <DialogContent> */}\r\n          <DialogContentText>\r\n            <div class=\"panel panel-default no-bd\">\r\n              <div class=\"panel-header bg-dark\">\r\n                <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                  <strong>Edit</strong>\r\n                  Package\r\n                </h3>\r\n              </div>\r\n              <div class=\"panel-body bg-white\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n                    <form\r\n                      role=\"form\"\r\n                      class=\"form-validation\"\r\n                      novalidate=\"novalidate\"\r\n                    >\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Package Name</label>\r\n                            <img src={getErrPackage} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                placeholder=\"Package Name\"\r\n                                value={getPackageName}\r\n                                onChange={(event) =>\r\n                                  setPackageName(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"fa fa-edit\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Discription</label>\r\n                            <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                placeholder=\"Discription\"\r\n                                value={getDescription}\r\n                                onChange={(event) =>\r\n                                  setDescription(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"fa fa-edit\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Price</label>\r\n                            <img src={getErrPrice} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Price\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getPrice}\r\n                                onChange={(event) =>\r\n                                  setPrice(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"fa fa-rupee\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Offer Price</label>\r\n                            <img\r\n                              src={getErrOfferPrice}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Offer Price\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getOfferPrice}\r\n                                onChange={(event) =>\r\n                                  setOfferPrice(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"fa fa-rupee\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Duration</label>\r\n                            <img src={getErrDuration} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"Duration\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getDuration}\r\n                                onChange={(event) =>\r\n                                  setDuration(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"icon-clock\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">No. of user</label>\r\n                            <img src={getErrNoOfusers} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"No. of user\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getNoOfusers}\r\n                                onChange={(event) =>\r\n                                  setNoOfUsers(event.target.value)\r\n                                }\r\n                              />\r\n                              <i class=\"icon-user\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n\r\n                          <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={(event) => handleIcon(event)}\r\n                          />\r\n                          <label htmlFor=\"contained-button-file\">\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              component=\"span\"\r\n                              startIcon={<CloudUploadIcon />}\r\n                              fullWidth\r\n                            >\r\n                              Upload Icon\r\n                            </Button>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <Avatar\r\n                              alt=\"Remy Sharp\"\r\n                              variant=\"rounded\"\r\n                              src={getIcon.fileIcon}\r\n                              className={classes.avatortheme}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"text-center  m-t-20\">\r\n                        <button\r\n                          className=\"btn btn-primary btn-transparent\"\r\n                          type=\"submit\"\r\n                          // class=\"btn btn-embossed btn-primary\"\r\n                          onClick={() => handleEdit()}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      </div>\r\n                      <b>{getMsg}</b>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className={classes.center}>\r\n                <Paper className={classes.paperStyle}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Package Id\"\r\n                        value={getPackageId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrPackage} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Package Name\"\r\n                        value={getPackageName}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setPackageName(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Description\"\r\n                        value={getDescription}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrPrice} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Price\"\r\n                        value={getPrice}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setPrice(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrOfferPrice} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Offer Price\"\r\n                        value={getOfferPrice}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setOfferPrice(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrDuration} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Duration\"\r\n                        value={getDuration}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setDuration(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrNoOfusers} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"No of Users\"\r\n                        value={getNoOfusers}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setNoOfUsers(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <img src={getErrIcon} width=\"10\" height=\"10\" />\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"contained-button-fileicon\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(event) => handleIcon(event)}\r\n                      />\r\n                      <label htmlFor=\"contained-button-fileicon\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          startIcon={<CloudUploadIcon />}\r\n                          component=\"span\"\r\n                        >\r\n                          Upload Icon\r\n                        </Button>\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        variant=\"rounded\"\r\n                        src={getIcon.fileIcon}\r\n                        className={classes.avatortheme}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Save Record\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <div>\r\n                        <b>Message : {getMsg}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </div> */}\r\n          </DialogContentText>\r\n          {/* </DialogContent> */}\r\n          <DialogActions>\r\n            <Button\r\n              className=\"btn btn-danger btn-rounded btn-transparent\"\r\n              onClick={handleClose}\r\n              // color=\"primary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Package List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n        {handleDialog()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\feature packages\\DisplayAllFeaturesPackages.js",["389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    // marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 240,\r\n    fullWidth: \"true\",\r\n  },\r\n  root: {\r\n    // marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 15,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 120,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 15,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10\",\r\n  },\r\n}));\r\n\r\nfunction DisplayAllFeaturesPackages() {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Feature Id\", field: \"featureid\", editable: \"never\" },\r\n      { title: \"Package \", field: \"packagename\", editable: \"never\" },\r\n      { title: \"Package Time\", field: \"packagetime\", editable: \"never\" },\r\n      {\r\n        title: \"Package Distance\",\r\n        field: \"packagedistance\",\r\n        editable: \"never\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getPackageList, setPackageList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n\r\n  const [getFeatureId, setFeatureId] = useState(\"\");\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getPackageTime, setPackageTime] = useState(\"\");\r\n  const [getPackageDistance, setPackageDistance] = useState(\"\");\r\n  const [getErrPackageId, setErrPackageId] = useState(\"\");\r\n  const [getErrPackageTime, setErrPackageTime] = useState(\"\");\r\n  const [getErrPackageDistance, setErrPackageDistance] = useState(\"\");\r\n\r\n  const [getMsg, setMsg] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    let list = await getData(\"featurespackages/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n    fetchAllPackages();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { featureid: oldData.featureid };\r\n    await postData(\"featurespackages/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    fetchPackageInEditform(rowData.featureid);\r\n    setFeatureId(rowData.featureid);\r\n    // setPackageId(rowData.packageid)\r\n    setPackageTime(rowData.packagetime);\r\n    setPackageDistance(rowData.packagedistance);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n    setMsg(\"\");\r\n    setErrPackageDistance(\"\");\r\n    setErrPackageId(\"\");\r\n    setErrPackageTime(\"\");\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getPackageId)) {\r\n      err = true;\r\n      setErrPackageId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageId)) {\r\n      setErrPackageId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPackageTime)) {\r\n      err = true;\r\n      setErrPackageTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageTime)) {\r\n      setErrPackageTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPackageDistance)) {\r\n      err = true;\r\n      setErrPackageDistance(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPackageDistance)) {\r\n      setErrPackageDistance(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        featureid: getFeatureId,\r\n        packageid: getPackageId,\r\n        packagetime: getPackageTime,\r\n        packagedistance: getPackageDistance,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"featurespackages/editRecord\", body);\r\n      if (result) {\r\n        setMsg(\"Record Edited ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const fetchPackageInEditform = async (featureid) => {\r\n    var body = { featureid: featureid };\r\n    //console.log(brandid)\r\n    var list = await postData(\r\n      \"featurespackages/displayPackageInEditform\",\r\n      body\r\n    );\r\n    //console.log('nidhi',list[0].packageid)\r\n    setPackageId(list[0].packageid);\r\n  };\r\n\r\n  const fetchAllPackages = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setPackageList(list.data);\r\n  };\r\n\r\n  const handlePackageChange = (event) => {\r\n    setPackageId(event.target.value);\r\n  };\r\n\r\n  const fillPackageItem = () => {\r\n    return getPackageList.map((item, key) => {\r\n      return <MenuItem value={item.packageid}>{item.packagename}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Feature Packages Edit\"}\r\n          </DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"\">\r\n              <div class=\"panel panel-default no-bd\">\r\n                <div class=\"panel-header bg-dark\">\r\n                  <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                    <strong>Edit Features</strong> Packages\r\n                  </h3>\r\n                </div>\r\n                <div class=\"panel-body bg-white\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                      <form\r\n                        role=\"form\"\r\n                        class=\"form-validation\"\r\n                        novalidate=\"novalidate\"\r\n                      >\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Feature Id</label>\r\n                              <i\r\n                                class=\"fa fa-check\"\r\n                                style={{ color: \"green\", marginLeft: 10 }}\r\n                              ></i>\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  placeholder=\"Feature Id\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  value={getFeatureId}\r\n                                />\r\n                                <i class=\"fa fa-clock\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Packages</label>\r\n                              <img\r\n                                src={getErrPackageId}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <div class=\"append-icon\">\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  placeholder=\"Select Packages\"\r\n                                  value={getPackageId}\r\n                                  fullWidth=\"true\"\r\n                                  onChange={(event) =>\r\n                                    handlePackageChange(event)\r\n                                  }\r\n                                >\r\n                                  {fillPackageItem()}\r\n                                </Select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Package Time</label>\r\n                              <img\r\n                                src={getErrPackageTime}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  placeholder=\"Package Time\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  value={getPackageTime}\r\n                                  onChange={(event) => {\r\n                                    setPackageTime(event.target.value);\r\n                                  }}\r\n                                />\r\n                                <i class=\"fa fa-clock\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">\r\n                                Package Distance\r\n                              </label>\r\n                              <img\r\n                                src={getErrPackageDistance}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"4\"\r\n                                  placeholder=\"Package Distance\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  value={getPackageDistance}\r\n                                  onChange={(event) => {\r\n                                    setPackageDistance(event.target.value);\r\n                                  }}\r\n                                />\r\n                                <i class=\"fa fa-map\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"text-center  m-t-20\">\r\n                          <button\r\n                            className=\"btn btn-primary btn-transparent\"\r\n                            type=\"submit\"\r\n                            // class=\"btn btn-embossed btn-primary\"\r\n                            onClick={(event) => {\r\n                              handleEdit();\r\n                            }}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                        </div>\r\n                        {getMsg}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <Paper className={classes.mainpaper}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Feature Id\"\r\n                    value={getFeatureId}\r\n                    style={{ width: 250, marginTop: 10 }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Packages\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getPackageId}\r\n                      fullWidth=\"true\"\r\n                      onChange={(event) => handlePackageChange(event)}\r\n                    >\r\n                      {fillPackageItem()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Package Time\"\r\n                    value={getPackageTime}\r\n                    onChange={(event) => {\r\n                      setPackageTime(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageDistance} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Package Distance\"\r\n                    value={getPackageDistance}\r\n                    onChange={(event) => {\r\n                      setPackageDistance(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                    onClick={(event) => {\r\n                      handleEdit();\r\n                    }}\r\n                  >\r\n                    Save Record\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button\r\n              className=\"btn btn-danger btn-rounded btn-transparent\"\r\n              onClick={handleClose}\r\n              // color=\"primary\"\r\n            >\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Display All Features Packages</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllFeaturesPackages;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendor\\Vendors.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // marginTop:30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 550,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 250,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n    margin: 5,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction Vendors() {\r\n  const classes = useStyles();\r\n\r\n  const [getVendorName, setVendorName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getMobileNo, setMobileNo] = useState(\"\");\r\n  const [getCompanyName, setCompanyName] = useState(\"\");\r\n  const [getCompanyLogo, setCompanyLogo] = useState({\r\n    companylogo: \"\",\r\n    filecompanylogo: \"\",\r\n  });\r\n  const [getPassword, setPassword] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getErrVendorName, setErrVendorName] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrMobileNo, setErrMobileNo] = useState(\"\");\r\n  const [getErrCompanyName, setErrCompanyName] = useState(\"\");\r\n  const [getErrCompanyLogo, setErrCompanyLogo] = useState(\"\");\r\n  const [getErrPassword, setErrPassword] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n\r\n  const [getMsg, setMsg] = useState(\"\");\r\n\r\n  const handleCompanyLogo = (event) => {\r\n    setCompanyLogo({\r\n      companylogo: event.target.files[0],\r\n      filecompanylogo: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getVendorName)) {\r\n      err = true;\r\n      setErrVendorName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorName)) {\r\n      setErrVendorName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getMobileNo)) {\r\n      err = true;\r\n      setErrMobileNo(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getMobileNo)) {\r\n      setErrMobileNo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCompanyName)) {\r\n      err = true;\r\n      setErrCompanyName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCompanyName)) {\r\n      setErrCompanyName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCompanyLogo.companylogo)) {\r\n      err = true;\r\n      setErrCompanyLogo(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCompanyLogo.companylogo)) {\r\n      setErrCompanyLogo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPassword)) {\r\n      err = true;\r\n      setErrPassword(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPassword)) {\r\n      setErrPassword(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      const formData = new FormData();\r\n      formData.append(\"vendorname\", getVendorName);\r\n      formData.append(\"email\", getEmail);\r\n      formData.append(\"mobileno\", getMobileNo);\r\n      formData.append(\"companyname\", getCompanyName);\r\n      formData.append(\"companylogo\", getCompanyLogo.companylogo);\r\n      formData.append(\"password\", getPassword);\r\n      formData.append(\"status\", getStatus);\r\n\r\n      const config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      let result = await postDataAndImage(\r\n        \"vendors/addnewrecord\",\r\n        formData,\r\n        config\r\n      );\r\n      console.log(result);\r\n      if (result) {\r\n        setMsg(\"Record Submitted...\");\r\n      } else {\r\n        setMsg(\"Fail to Submit Record..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setVendorName(\"\");\r\n    setEmail(\"\");\r\n    setMobileNo(\"\");\r\n    setCompanyName(\"\");\r\n    setCompanyLogo({ companylogo: \"\", filecompanylogo: \"\" });\r\n    setPassword(\"\");\r\n    setStatus(\"\");\r\n    setMsg(\"\");\r\n    setErrVendorName(\"\");\r\n    setErrEmail(\"\");\r\n    setErrMobileNo(\"\");\r\n    setErrCompanyName(\"\");\r\n    setErrCompanyLogo({ companylogo: \"\", filecompanylogo: \"\" });\r\n    setErrPassword(\"\");\r\n    setErrStatus(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\">\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Customer</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form role=\"form\" class=\"form-validation\" novalidate=\"novalidate\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Customer Name</label>\r\n                      <img src={getErrVendorName} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Customer Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getVendorName}\r\n                          onChange={(event) => {\r\n                            setVendorName(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Email</label>\r\n                      <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Email\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getEmail}\r\n                          onChange={(event) => {\r\n                            setEmail(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Mobile No</label>\r\n                      <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Mobile No\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getMobileNo}\r\n                          onChange={(event) => {\r\n                            setMobileNo(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-map\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Company Name</label>\r\n                      <img src={getErrCompanyName} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Company Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getCompanyName}\r\n                          onChange={(event) => {\r\n                            setCompanyName(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-map\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Password</label>\r\n                      <img src={getErrPassword} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"password\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Password\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getPassword}\r\n                          onChange={(event) => {\r\n                            setPassword(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-map\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          id=\"demo-simple-select-outlined\"\r\n                          placeholder=\"Status\"\r\n                          value={getStatus}\r\n                          onChange={(event) => {\r\n                            setStatus(event.target.value);\r\n                          }}\r\n                          label=\"Status\"\r\n                        >\r\n                          <MenuItem value={\"Active\"}>Active</MenuItem>\r\n                          <MenuItem value={\"Deactive\"}>Deactive</MenuItem>\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      id=\"contained-button-file\"\r\n                      type=\"file\"\r\n                      onChange={(event) => handleCompanyLogo(event)}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                        startIcon={<CloudUploadIcon />}\r\n                        fullWidth\r\n                      >\r\n                        Upload Icon\r\n                      </Button>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        variant=\"rounded\"\r\n                        src={getCompanyLogo.filecompanylogo}\r\n                        className={classes.avatortheme}\r\n                        style={{ width: 55, height: 55 }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    type=\"submit\"\r\n                    // class=\"btn btn-embossed btn-primary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                    onClick={() => ClearData()}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Paper className={classes.paperstyle}>\r\n        <Paper elevation={1} className={classes.headingstyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <b>&nbsp;&nbsp;&nbsp;&nbsp;Add Vendors </b>\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrVendorName} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Vendor Name\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              value={getVendorName}\r\n              onChange={(event) => {\r\n                setVendorName(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Email\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              value={getEmail}\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Mobile No\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              value={getMobileNo}\r\n              onChange={(event) => {\r\n                setMobileNo(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrCompanyName} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Company Name\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              value={getCompanyName}\r\n              onChange={(event) => {\r\n                setCompanyName(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            className={classes.container}\r\n            style={{ paddingTop: 20 }}\r\n          >\r\n            <img src={getErrCompanyLogo} width=\"10\" height=\"10\" />\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(event) => handleCompanyLogo(event)}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                component=\"span\"\r\n                className={classes.uploadbutton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Company Logo\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            className={classes.container}\r\n            style={{ paddingTop: 20 }}\r\n          >\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src={getCompanyLogo.filecompanylogo}\r\n              variant=\"rounded\"\r\n              style={{ width: 55, height: 55 }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrPassword} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={getPassword}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.gridStyle}>\r\n            <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={getStatus}\r\n                onChange={(event) => {\r\n                  setStatus(event.target.value);\r\n                }}\r\n                label=\"Status\"\r\n              >\r\n                <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                <MenuItem value={\"No\"}>No</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => ClearData()}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vendors;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\attendence\\DisplayAllAttendence.js",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.8,\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperStyle: {\r\n    // width:520,\r\n    padding: 20,\r\n    // margin:20,\r\n    // backgroundColor:'#f1f2f6'\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 160,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllPackages() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getAttendenceId, setAttendenceId] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getAttendenceDate, setAttendenceDate] = useState(new Date());\r\n  const [getAttendenceTime, setAttendenceTime] = useState(new Date());\r\n  const [getShiftId, setShiftId] = useState(\"\");\r\n  const [getLeaveId, setLeaveId] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [getErrAttendenceDate, setErrAttendenceDate] = useState(\"\");\r\n  const [getErrAttendenceTime, setErrAttendenceTime] = useState(\"\");\r\n  const [getErrShiftId, setErrShiftId] = useState(\"\");\r\n  const [getErrLeaveId, setErrLeaveId] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n  const [getShiftList, setShiftList] = useState([]);\r\n  const [getLeaveList, setLeaveList] = useState([]);\r\n\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Id\", field: \"attendenceid\" },\r\n      { title: \"Vendor Id\", field: \"vendorid\" },\r\n      { title: \"Employee Id\", field: \"employeeid\" },\r\n      {\r\n        title: \"Attendence Date\",\r\n        field: \"attendencedate\",\r\n        render: (rowData) => <div>{displayDate(rowData.attendencedate)}</div>,\r\n      },\r\n      {\r\n        title: \"Attendence Time\",\r\n        field: \"attendencetime\",\r\n        render: (rowData) => <div>{displayTime(rowData.attendencetime)}</div>,\r\n      },\r\n      { title: \"Shift Id\", field: \"shiftid\" },\r\n      { title: \"Leave Id\", field: \"leaveid\" },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n  });\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const displayTime = (time) => {\r\n    let tm = new Date(time);\r\n    var h = tm.getHours();\r\n    var m = tm.getMinutes();\r\n    var t = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\r\n    return t;\r\n  };\r\n\r\n  const fetchData = async (v_id) => {\r\n    let body = {\r\n      vendorid: v_id,\r\n    };\r\n    var list = await postData(\"attendence/displayByVid\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n\r\n    fetchData(vendor.vendorid);\r\n    fetchEmployees(vendor.vendorid);\r\n    fetchShifts();\r\n    fetchLeaves();\r\n  }, []);\r\n\r\n  const fetchEmployees = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\");\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const fetchShifts = async () => {\r\n    var list = await getData(\"shifts/displayall\");\r\n    setShiftList(list.data);\r\n  };\r\n\r\n  const fillShifts = () => {\r\n    return getShiftList.map(function (item, key) {\r\n      let st = new Date(item.shiftstarttime);\r\n      var hs = st.getHours();\r\n      var ms = st.getMinutes();\r\n      var start = hs > 12 ? hs - 12 + \":\" + ms + \" PM\" : hs + \":\" + ms + \" AM\";\r\n      let et = new Date(item.shiftendtime);\r\n      var he = et.getHours();\r\n      var me = et.getMinutes();\r\n      var end = he > 12 ? he - 12 + \":\" + me + \" PM\" : he + \":\" + me + \" AM\";\r\n      return (\r\n        <MenuItem value={item.shiftid}>\r\n          {start}&nbsp;to&nbsp;{end}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const fetchLeaves = async () => {\r\n    var list = await getData(\"leaves/displayall\");\r\n    setLeaveList(list.data);\r\n  };\r\n\r\n  const fillLeaves = () => {\r\n    return getLeaveList.map(function (item, key) {\r\n      return <MenuItem value={item.leaveid}>{item.leavetype}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    var body = { attendenceid: oldData.attendenceid };\r\n    var result = await postData(\"attendence/deleteRecord\", body);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getAttendenceDate)) {\r\n      err = true;\r\n      setErrAttendenceDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAttendenceDate)) {\r\n      setErrAttendenceDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getAttendenceTime)) {\r\n      err = true;\r\n      setErrAttendenceTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAttendenceTime)) {\r\n      setErrAttendenceTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getShiftId)) {\r\n      err = true;\r\n      setErrShiftId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getShiftId)) {\r\n      setErrShiftId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getLeaveId)) {\r\n      err = true;\r\n      setErrLeaveId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLeaveId)) {\r\n      setErrLeaveId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var body = {\r\n        attendenceid: getAttendenceId,\r\n        attendencedate: getAttendenceDate,\r\n        attendencetime: getAttendenceTime,\r\n        vendorid: getVendorId,\r\n        shiftid: getShiftId,\r\n        leaveid: getLeaveId,\r\n        status: getStatus,\r\n        employeeid: getEmployeeId,\r\n      };\r\n      var result = await postData(\"attendence/updateRecord\", body);\r\n\r\n      if (result.RESULT) {\r\n        setMsg(\"Record Edited..\");\r\n      } else {\r\n        setMsg(\"Fail To Edit Record...\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    setAttendenceId(rowData.attendenceid);\r\n    setAttendenceDate(rowData.attendencedate);\r\n    setAttendenceTime(rowData.attendencetime);\r\n    setVendorId(rowData.vendorid);\r\n    setEmployeeId(rowData.employeeid);\r\n    setLeaveId(rowData.leaveid);\r\n    setShiftId(rowData.shiftid);\r\n    setStatus(rowData.status);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMsg(\"\");\r\n    setErrAttendenceDate(\"\");\r\n    setErrAttendenceTime(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrShiftId(\"\");\r\n    setErrLeaveId(\"\");\r\n    setErrStatus(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setAttendenceDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setAttendenceTime(time);\r\n  };\r\n\r\n  const handleDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n            <div class=\"panel-header bg-dark\">\r\n              <h3 class=\"panel-title\" style={{ padding: 15 }}>\r\n                <strong>Attendence </strong> Edit\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          {/* <DialogTitle id=\"form-dialog-title\">Attendence Edit </DialogTitle> */}\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <div className={classes.center}>\r\n                <Paper className={classes.paperStyle}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Attendence Id\"\r\n                        value={getAttendenceId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Vendor \"\r\n                        value={getVendorId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          Employee\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmployeeId}\r\n                          onChange={(event) =>\r\n                            setEmployeeId(event.target.value)\r\n                          }\r\n                        >\r\n                          {fillEmployees()}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrShiftId} width=\"10\" height=\"10\" />\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          Shifts\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getShiftId}\r\n                          onChange={(event) => setShiftId(event.target.value)}\r\n                        >\r\n                          {fillShifts()}\r\n                        </Select>\r\n                      </FormControl>{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrLeaveId} width=\"10\" height=\"10\" />\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          Leave Type\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getLeaveId}\r\n                          onChange={(event) => setLeaveId(event.target.value)}\r\n                        >\r\n                          {fillLeaves()}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrAttendenceDate} width=\"10\" height=\"10\" />\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          fullWidth\r\n                          label=\"Date\"\r\n                          format=\"MM/dd/yyyy\"\r\n                          value={getAttendenceDate}\r\n                          onChange={handleDateChange}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrAttendenceTime} width=\"10\" height=\"10\" />\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardTimePicker\r\n                          fullWidth\r\n                          id=\"time-picker\"\r\n                          label=\"Time\"\r\n                          value={getAttendenceTime}\r\n                          onChange={handleTimeChange}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          {\" \"}\r\n                          Status\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getStatus}\r\n                          onChange={(event) => setStatus(event.target.value)}\r\n                        >\r\n                          <MenuItem value=\"Present\">Present</MenuItem>\r\n                          <MenuItem value=\"Absent\">Absent</MenuItem>\r\n                          <MenuItem value=\"Leave\">Leave</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Save Record\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <div>\r\n                        <b>Message : {getMsg}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </div>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Attendence List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          // actions={[\r\n          //   {\r\n          //     icon: \"edit\",\r\n          //     tooltip: \"Edit\",\r\n          //     onClick: (event, rowData) => handleClickOpen(rowData),\r\n          //   },\r\n          // ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 200);\r\n              }),\r\n          }}\r\n        />\r\n        {handleDialog()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\expenses\\DisplayAllExpenses.js",["445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // marginTop: 30,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.77,\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: 900,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 160,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllExpenses() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getExpensesId, setExpensesId] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getExpensesOn, setExpensesOn] = useState(\"\");\r\n  const [getShortDescription, setShortDescription] = useState(\"\");\r\n  const [getDate, setDate] = useState(\"\");\r\n  const [getTime, setTime] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getAmount, setAmount] = useState(\"\");\r\n  const [getBillImage, setBillImage] = useState({ img: \"\", fileImg: \"\" });\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [getErrExpensesOn, setErrExpensesOn] = useState(\"\");\r\n  const [getErrShortDescription, setErrShortDescription] = useState(\"\");\r\n  const [getErrDate, setErrDate] = useState(\"\");\r\n  const [getErrTime, setErrTime] = useState(\"\");\r\n  const [getErrDescription, setErrDescription] = useState(\"\");\r\n  const [getErrAmount, setErrAmount] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Id\", field: \"expensesid\" },\r\n      { title: \"Vendor Id\", field: \"vendorid\" },\r\n      { title: \"Employee Id\", field: \"employeeid\" },\r\n      {\r\n        title: \"Date\",\r\n        field: \"date\",\r\n        render: (rowData) => <div>{displayDate(rowData.date)}</div>,\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        field: \"time\",\r\n        render: (rowData) => <div>{displayTime(rowData.time)}</div>,\r\n      },\r\n      { title: \"Short Description\", field: \"shortdescription\" },\r\n      { title: \"Amount\", field: \"amount\" },\r\n      {\r\n        title: \"BillImage\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.billimage}`}\r\n              className={classes.avatortheme}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        render: (rowData) => (\r\n          <div>\r\n            {rowData.status == \"Approved\" ? (\r\n              <button\r\n                className=\"btn btn-success btn-rounded btn-transparent\"\r\n                value={rowData.status}\r\n                style={{ width: 150 }}\r\n                // class=\"btn btn-embossed btn-primary\"\r\n              >\r\n                {rowData.status}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-danger btn-rounded btn-transparent\"\r\n                value={rowData.status}\r\n                onClick={() => alert(rowData.status)}\r\n                style={{ width: 150 }}\r\n                // class=\"btn btn-embossed btn-primary\"\r\n              >\r\n                {rowData.status}\r\n              </button>\r\n            )}\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  });\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const displayTime = (time) => {\r\n    let tm = new Date(time);\r\n    var h = tm.getHours();\r\n    var m = tm.getMinutes();\r\n    var t = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\r\n    return t;\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    fetchEmployees(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let list = await postData(\"expenses/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  const fetchEmployees = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\", body);\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n  const handleDelete = async (oldData) => {\r\n    var body = { expensesid: oldData.expensesid };\r\n    var result = await postData(\"expenses/deleteRecord\", body);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getExpensesOn)) {\r\n      err = true;\r\n      setErrExpensesOn(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getExpensesOn)) {\r\n      setErrExpensesOn(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getShortDescription)) {\r\n      err = true;\r\n      setErrShortDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getShortDescription)) {\r\n      setErrShortDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDate)) {\r\n      err = true;\r\n      setErrDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDate)) {\r\n      setErrDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTime)) {\r\n      err = true;\r\n      setErrTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTime)) {\r\n      setErrTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getAmount)) {\r\n      err = true;\r\n      setErrAmount(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAmount)) {\r\n      setErrAmount(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var formData = new FormData();\r\n      formData.append(\"vendorid\", getVendorId);\r\n      formData.append(\"employeeid\", getEmployeeId);\r\n      formData.append(\"expenseson\", getExpensesOn);\r\n      formData.append(\"shortdescription\", getShortDescription);\r\n      formData.append(\"date\", getDate);\r\n      formData.append(\"time\", getTime);\r\n      formData.append(\"description\", getDescription);\r\n      formData.append(\"amount\", getAmount);\r\n      formData.append(\"billimage\", getBillImage.img);\r\n      formData.append(\"status\", getStatus);\r\n      formData.append(\"expensesid\", getExpensesId);\r\n      var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      var result = await postDataAndImage(\r\n        \"expenses/updateRecord\",\r\n        formData,\r\n        config\r\n      );\r\n      if (result) {\r\n        setMsg(\"Record Edited..\");\r\n      } else {\r\n        setMsg(\"Fail To Edit Record...\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    setVendorId(rowData.vendorid);\r\n    setEmployeeId(rowData.employeeid);\r\n    setExpensesOn(rowData.expenseson);\r\n    setExpensesId(rowData.expensesid);\r\n    setBillImage({\r\n      img: \"\",\r\n      fileImg: `${ServerURL}/images/${rowData.billimage}`,\r\n    });\r\n    setAmount(rowData.amount);\r\n    setStatus(rowData.status);\r\n    setDescription(rowData.description);\r\n    setShortDescription(rowData.shortdescription);\r\n    setDate(rowData.date);\r\n    setTime(rowData.time);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMsg(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrExpensesOn(\"\");\r\n    setErrShortDescription(\"\");\r\n    setErrDescription(\"\");\r\n    setErrDate(\"\");\r\n    setErrTime(\"\");\r\n    setErrStatus(\"\");\r\n    setErrAmount(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n          style={{ width: 1300 }}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Expenses Edit </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <div className={classes.center}>\r\n                <Paper className={classes.paperStyle}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src=\"images/tick.png\" width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Expense Id\"\r\n                        value={getExpensesId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src=\"images/tick.png\" width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Vendor Id\"\r\n                        value={getVendorId}\r\n                        variant=\"standard\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                          Employee\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmployeeId}\r\n                          onChange={(event) =>\r\n                            setEmployeeId(event.target.value)\r\n                          }\r\n                        >\r\n                          {fillEmployees()}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrExpensesOn} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Expenses On\"\r\n                        value={getExpensesOn}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setExpensesOn(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrAmount} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Amount\"\r\n                        value={getAmount}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setAmount(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrDate} width=\"10\" height=\"10\" />\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          label=\"Date\"\r\n                          format=\"MM/dd/yyyy\"\r\n                          value={getDate}\r\n                          onChange={(event) => setDate(event)}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.subclass}>\r\n                      <img src={getErrTime} width=\"10\" height=\"10\" />\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardTimePicker\r\n                          id=\"time-picker\"\r\n                          label=\"Time\"\r\n                          value={getTime}\r\n                          onChange={(event) => setTime(event)}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change time\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>{\" \"}\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img\r\n                        src={getErrShortDescription}\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Short Description\"\r\n                        value={getShortDescription}\r\n                        variant=\"standard\"\r\n                        onChange={(event) =>\r\n                          setShortDescription(event.target.value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrDescription} width=\"10\" height=\"10\" />\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Description\"\r\n                        value={getDescription}\r\n                        variant=\"standard\"\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"contained-button-fileimg\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(event) =>\r\n                          setBillImage({\r\n                            img: event.target.files[0],\r\n                            fileImg: URL.createObjectURL(event.target.files[0]),\r\n                          })\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"contained-button-fileimg\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          startIcon={<CloudUploadIcon />}\r\n                          component=\"span\"\r\n                        >\r\n                          Bill Image\r\n                        </Button>\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        variant=\"rounded\"\r\n                        src={getBillImage.fileImg}\r\n                        className={classes.avatortheme}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                      <div> Status :</div>\r\n                      <Radio\r\n                        checked={getStatus === \"Approved\"}\r\n                        onChange={(event) => setStatus(event.target.value)}\r\n                        value=\"Approved\"\r\n                        name=\"radio-button-demo\"\r\n                        //inputProps={{ 'aria-label': 'A' }}\r\n                      />\r\n                      Approved{\" \"}\r\n                      <Radio\r\n                        checked={getStatus === \"Not-Approved\"}\r\n                        onChange={(event) => setStatus(event.target.value)}\r\n                        value=\"Not-Approved\"\r\n                        name=\"radio-button-demo\"\r\n                        //inputProps={{ 'aria-label': 'B' }}\r\n                      />\r\n                      Not-Approved\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.center}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Save Record\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.subclass}>\r\n                      <div>\r\n                        <b>Message : {getMsg}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </div>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Expenses List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          // actions={[\r\n          //   {\r\n          //     icon: 'edit',\r\n          //     tooltip: 'Edit',\r\n          //     onClick: (event, rowData) => handleClickOpen(rowData)\r\n          //   }\r\n          // ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 200);\r\n              }),\r\n          }}\r\n        />\r\n        {handleDialog()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\client\\Client.js",["461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkMobile, checkRequire, checkEmail } from \"../Checks\";\r\nimport { statecity } from \"../statecity/StateCity\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction Client() {\r\n  const classes = useStyles();\r\n\r\n  var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n\r\n  const [getClientName, setClientName] = useState(\"\");\r\n  const [getClientAddress, setClientAddress] = useState(\"\");\r\n  const [getState, setState] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getFirmName, setFirmName] = useState(\"\");\r\n  const [getMobileNo, setMobileNo] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(vendor.vendorid);\r\n  const [getMsg, setMsg] = useState(\"\");\r\n\r\n  const [getErrClientName, setErrClientName] = useState(\"\");\r\n  const [getErrClientAddress, setErrClientAddress] = useState(\"\");\r\n  const [getErrState, setErrState] = useState(\"\");\r\n  const [getErrCity, setErrCity] = useState(\"\");\r\n  const [getErrFirmName, setErrFirmName] = useState(\"\");\r\n  const [getErrMobileNo, setErrMobileNo] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrDescription, setErrDescription] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getStateList, setStateList] = useState([]);\r\n  const [getCityList, setCityList] = useState([]);\r\n  // const [getVendor,setVendor]=useState([])\r\n\r\n  const fetchStates = async () => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      list[key] = item.state;\r\n    });\r\n    setStateList(list);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const fillStates = () => {\r\n    return getStateList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleState = (event) => {\r\n    var state = event.target.value;\r\n    setState(state);\r\n    fetchCity(state);\r\n  };\r\n\r\n  const fetchCity = async (selectstate) => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      if (item.state == selectstate) {\r\n        item.districts.map(function (data, key) {\r\n          list[key] = data;\r\n        });\r\n      }\r\n    });\r\n    setCityList(list);\r\n  };\r\n\r\n  const fillCities = () => {\r\n    return getCityList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getClientName)) {\r\n      err = true;\r\n      setErrClientName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientName)) {\r\n      setErrClientName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getClientAddress)) {\r\n      err = true;\r\n      setErrClientAddress(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientAddress)) {\r\n      setErrClientAddress(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getState)) {\r\n      err = true;\r\n      setErrState(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getState)) {\r\n      setErrState(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCity)) {\r\n      err = true;\r\n      setErrCity(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCity)) {\r\n      setErrCity(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getFirmName)) {\r\n      err = true;\r\n      setErrFirmName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getFirmName)) {\r\n      setErrFirmName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkMobile(getMobileNo)) {\r\n      err = true;\r\n      setErrMobileNo(\"/images/cross.png\");\r\n    }\r\n    if (checkMobile(getMobileNo)) {\r\n      setErrMobileNo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkEmail(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getVendorId)) {\r\n      err = true;\r\n      setErrVendorId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorId)) {\r\n      setErrVendorId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        clientname: getClientName,\r\n        clientaddress: getClientAddress,\r\n        state: getState,\r\n        city: getCity,\r\n        firmname: getFirmName,\r\n        mobileno: getMobileNo,\r\n        email: getEmail,\r\n        description: getDescription,\r\n        vendorid: getVendorId,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"client/addnewrecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setClientName(\"\");\r\n    setClientAddress(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setFirmName(\"\");\r\n    setMobileNo(\"\");\r\n    setEmail(\"\");\r\n    setDescription(\"\");\r\n    setMsg(\"\");\r\n    setErrClientName(\"\");\r\n    setErrClientAddress(\"\");\r\n    setErrState(\"\");\r\n    setErrCity(\"\");\r\n    setErrFirmName(\"\");\r\n    setErrMobileNo(\"\");\r\n    setErrEmail(\"\");\r\n    setErrDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Client</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form role=\"form\" class=\"form-validation\" novalidate=\"novalidate\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Client Name</label>\r\n                      <img src={getErrClientName} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Client Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getClientName}\r\n                          onChange={(event) => {\r\n                            setClientName(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Client Address</label>\r\n                      <img src={getErrClientAddress} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Client Address\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getClientAddress}\r\n                          onChange={(event) => {\r\n                            setClientAddress(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-map\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Firm Name</label>\r\n                      <img src={getErrFirmName} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Firm Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getFirmName}\r\n                          onChange={(event) => {\r\n                            setFirmName(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Mobile No</label>\r\n                      <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Mobile No\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getMobileNo}\r\n                          onChange={(event) => {\r\n                            setMobileNo(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-mobile\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Select State</label>\r\n                      <img src={getErrState} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getState}\r\n                          onChange={(event) => handleState(event)}\r\n                        >\r\n                          {\" \"}\r\n                          <MenuItem value=\"\">Select State</MenuItem>\r\n                          {fillStates()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Select City</label>\r\n                      <img src={getErrCity} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getCity}\r\n                          onChange={(event) => setCity(event.target.value)}\r\n                        >\r\n                          <MenuItem value=\"\">Select City</MenuItem>\r\n                          {fillCities()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Email Id</label>\r\n                      <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Email Id\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getEmail}\r\n                          onChange={(event) => {\r\n                            setEmail(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Description</label>\r\n                      <img src={getErrDescription} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Description\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getDescription}\r\n                          onChange={(event) => {\r\n                            setDescription(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-edit\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Vendor Id</label>\r\n                      <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          disabled\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Vendor Id\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getVendorId}\r\n                          onChange={(event) => {\r\n                            setVendorId(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-edit \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    type=\"submit\"\r\n                    // class=\"btn btn-embossed btn-primary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Client;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assignshift\\AssignShift.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport { SettingsBackupRestoreOutlined } from \"@material-ui/icons\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 250,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n  root2: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  Icon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AssignShift() {\r\n  const classes = useStyles();\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getShiftId, setShiftId] = useState(\"\");\r\n  const [selectedAssignDate, setSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  const [getNoOfDays, setNoOfDays] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [getErrShiftId, setErrShiftId] = useState(\"\");\r\n  const [ErrselectedAssignDate, setErrSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [ErrselectedEndDate, setErrSelectedEndDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getErrNoOfDays, setErrNoOfDays] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n\r\n  const handleVendorId = () => {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n  };\r\n\r\n  useEffect(function () {\r\n    handleVendorId();\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getShiftId)) {\r\n      err = true;\r\n      setErrShiftId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getShiftId)) {\r\n      setErrShiftId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignDate)) {\r\n      err = true;\r\n      setErrSelectedAssignDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignDate)) {\r\n      setErrSelectedAssignDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedEndDate)) {\r\n      err = true;\r\n      setErrSelectedEndDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedEndDate)) {\r\n      setErrSelectedEndDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getNoOfDays)) {\r\n      err = true;\r\n      setErrNoOfDays(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getNoOfDays)) {\r\n      setErrNoOfDays(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        vendorid: getVendorId,\r\n        employeeid: getEmployeeId,\r\n        shiftid: getShiftId,\r\n        assigndate: selectedAssignDate,\r\n        enddate: selectedEndDate,\r\n        noofdays: getNoOfDays,\r\n        status: getStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"assignshift/addnewrecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setVendorId(\"\");\r\n    setEmployeeId(\"\");\r\n    setShiftId(\"\");\r\n    setSelectedEndDate(new Date());\r\n    setSelectedAssignDate(new Date());\r\n    setNoOfDays(\"\");\r\n    setStatus(\"\");\r\n    setErrVendorId(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrShiftId(\"\");\r\n    setErrSelectedAssignDate(new Date());\r\n    setErrSelectedEndDate(new Date());\r\n    setErrNoOfDays(\"\");\r\n    setErrStatus(\"\");\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const handleAssignDateChange = (date) => {\r\n    setSelectedAssignDate(date);\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setSelectedEndDate(date);\r\n  };\r\n\r\n  const fetchAllShift = async () => {\r\n    var list = await getData(\"shifts/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchAllShift();\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    var list = await getData(\"employees/displayall\");\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleShiftChange = (event) => {\r\n    setShiftId(event.target.value);\r\n  };\r\n\r\n  const fillShiftItem = () => {\r\n    return getList.map(function (item, key) {\r\n      let st = new Date(item.shiftstarttime);\r\n      var hs = st.getHours();\r\n      var ms = st.getMinutes();\r\n      var start = hs > 12 ? hs - 12 + \":\" + ms + \" PM\" : hs + \":\" + ms + \" AM\";\r\n      let et = new Date(item.shiftendtime);\r\n      var he = et.getHours();\r\n      var me = et.getMinutes();\r\n      var end = he > 12 ? he - 12 + \":\" + me + \" PM\" : he + \":\" + me + \" AM\";\r\n      return (\r\n        <MenuItem value={item.shiftid}>\r\n          {start}&nbsp;to&nbsp;{end}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Assign Shift</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form role=\"form\" class=\"form-validation\" novalidate=\"novalidate\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Vendor Id</label>\r\n                      <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Vendor Id\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getVendorId}\r\n                        />\r\n                        <i class=\"fa fa-edit \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">No of Days</label>\r\n                      <img src={getErrNoOfDays} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"No of Days\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getNoOfDays}\r\n                          onChange={(event) => setNoOfDays(event.target.value)}\r\n                        />\r\n                        <i class=\"fa fa-edit \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Employee</label>\r\n                      <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmployeeId}\r\n                          onChange={(event) =>\r\n                            setEmployeeId(event.target.value)\r\n                          }\r\n                        >\r\n                          {fillEmployees()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Shifts</label>\r\n                      <img src={getErrShiftId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getShiftId}\r\n                          fullWidth=\"true\"\r\n                          onChange={(event) => handleShiftChange(event)}\r\n                        >\r\n                          {fillShiftItem()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Assign Date</label>\r\n                      <img src={ErrselectedAssignDate} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            // label=\"Assign Date\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            fullWidth=\"true\"\r\n                            value={selectedAssignDate}\r\n                            onChange={handleAssignDateChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">End Date</label>\r\n                      <img src={ErrselectedEndDate} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            // label=\"End Date\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            fullWidth=\"true\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          id=\"demo-simple-select-outlined\"\r\n                          value={getStatus}\r\n                          onChange={(event) => {\r\n                            setStatus(event.target.value);\r\n                          }}\r\n                          label=\"Status\"\r\n                        >\r\n                          <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                          <MenuItem value={\"No\"}>No</MenuItem>\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    type=\"submit\"\r\n                    // class=\"btn btn-embossed btn-primary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Paper elevation={1} className={classes.headingstyle}>\r\n       <Typography variant=\"h6\" gutterBottom>\r\n       <b>&nbsp;&nbsp;&nbsp;&nbsp;Add Assign Shift </b>     \r\n       </Typography>\r\n    </Paper>\r\n\r\n    <Grid container spacing={2} >\r\n\r\n       <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrVendorId} width='10' height='10' />              \r\n        <TextField id=\"standard-basic\" label=\"Vendor Id\" variant=\"standard\" fullWidth value={getVendorId}  /> \r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrEmployeeId} width='10' height='10' />              \r\n        <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">Employee</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getEmployeeId}\r\n          onChange={(event)=>setEmployeeId(event.target.value)}\r\n        >  \r\n         {fillEmployees()}\r\n        </Select>\r\n      </FormControl></Grid>\r\n\r\n    <Grid item xs={6} className={classes.gridStyle}> \r\n        <img src={getErrShiftId} width='10' height='10' />\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\" >Shifts</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getShiftId}\r\n          fullWidth='true'\r\n          onChange={(event)=>handleShiftChange(event)}\r\n        >\r\n          {fillShiftItem()}\r\n        </Select>\r\n      </FormControl>          \r\n        </Grid>\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrNoOfDays} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"No of Days\"  fullWidth variant=\"standard\" value={getNoOfDays} onChange={(event)=>setNoOfDays(event.target.value)} /> \r\n        </Grid>         \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedAssignDate} width='10' height='10' />                \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Assign Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          fullWidth='true'\r\n          value={selectedAssignDate}\r\n          onChange={handleAssignDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n \r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedEndDate} width='10' height='10' />                \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"End Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          fullWidth='true'\r\n          value={selectedEndDate}\r\n          onChange={handleEndDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n \r\n\r\n       \r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrStatus} width='10' height='10' />            \r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n          <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={getStatus}\r\n          onChange={(event)=>{setStatus(event.target.value)}}\r\n          label=\"Status\"\r\n          >\r\n          <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n          <MenuItem value={\"No\"}>No</MenuItem>\r\n          </Select>\r\n          </FormControl>  \r\n          </Grid>\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()} >\r\n         Submit\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()} >\r\n         Reset\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} >\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n  </Grid>\r\n</Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignShift;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assigntask\\DisplayAllAssignTask.js",["511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport swal from \"sweetalert\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n    fullWidth: \"true\",\r\n  },\r\n  root: {\r\n    marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 15,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 120,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 15,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10\",\r\n  },\r\n}));\r\n\r\nfunction DisplayAllAssignTask() {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Assign Task Id\", field: \"assigntaskid\", editable: \"never\" },\r\n      { title: \"Task Id \", field: \"taskid\", editable: \"never\" },\r\n      { title: \"Employee Id\", field: \"employeeid\", editable: \"never\" },\r\n      {\r\n        title: \"Assign Date\",\r\n        field: \"assigndate\",\r\n        render: (rowData) => <div>{displayDate(rowData.assigndate)}</div>,\r\n      },\r\n      {\r\n        title: \"Assign Time\",\r\n        field: \"assigntime\",\r\n        render: (rowData) => <div>{displayTime(rowData.assigntime)}</div>,\r\n      },\r\n      { title: \"Task Status\", field: \"taskstatus\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getTaskList, setTaskList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getAssignTaskId, setAssignTaskId] = useState(\"\");\r\n  const [getTaskId, setTaskId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [selectedAssignDate, setSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedAssignTime, setSelectedAssignTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getTaskStatus, setTaskStatus] = React.useState(\"\");\r\n  const [getErrTaskId, setErrTaskId] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [ErrselectedAssignDate, setErrSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [ErrselectedAssignTime, setErrSelectedAssignTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getErrTaskStatus, setErrTaskStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let list = await postData(\"assigntask/displayById\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    fetchAllTask(vendor.vendorid);\r\n    fetchEmployees(vendor.vendorid);\r\n    // fetchAllTask();\r\n    // fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\", body);\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  // const fetchEmployees = async () => {\r\n  //   var list = await getData(\"employees/displayall\");\r\n  //   setEmployeesList(list.data);\r\n  // };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { assigntaskid: oldData.assigntaskid };\r\n    await postData(\"assigntask/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    fetchTaskInEditform(rowData.assigntaskid);\r\n    setAssignTaskId(rowData.assigntaskid);\r\n    setTaskId(rowData.taskid);\r\n    setEmployeeId(rowData.employeeid);\r\n    setTaskStatus(rowData.taskstatus);\r\n    setSelectedAssignTime(rowData.assigntime);\r\n    setSelectedAssignDate(rowData.assigndate);\r\n  };\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const displayTime = (time) => {\r\n    let tm = new Date(time);\r\n    var h = tm.getHours();\r\n    var m = tm.getMinutes();\r\n    var t = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\r\n    return t;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n    setMsg(\"\");\r\n    setErrTaskId(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrSelectedAssignDate(\"\");\r\n    setErrSelectedAssignTime(\"\");\r\n    setErrTaskStatus(\"\");\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getTaskId)) {\r\n      err = true;\r\n      setErrTaskId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskId)) {\r\n      setErrTaskId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignDate)) {\r\n      err = true;\r\n      setErrSelectedAssignDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignDate)) {\r\n      setErrSelectedAssignDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignTime)) {\r\n      err = true;\r\n      setErrSelectedAssignTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignTime)) {\r\n      setErrSelectedAssignTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTaskStatus)) {\r\n      err = true;\r\n      setErrTaskStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskStatus)) {\r\n      setErrTaskStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        assigntaskid: getAssignTaskId,\r\n        taskid: getTaskId,\r\n        employeeid: getEmployeeId,\r\n        assigndate: selectedAssignDate,\r\n        assigntime: selectedAssignTime,\r\n        taskstatus: getTaskStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"assigntask/editRecord\", body);\r\n\r\n      if (result) {\r\n        //   setMsg(\"Record Edited ...\");\r\n        swal(\"Assign Task Successfully\", \" \", \"success\", {\r\n          buttons: false,\r\n        });\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleAssignDateChange = (date) => {\r\n    setSelectedAssignDate(date);\r\n  };\r\n\r\n  const handleAssignTimeChange = (time) => {\r\n    setSelectedAssignTime(time);\r\n  };\r\n\r\n  const fetchTaskInEditform = async (assigntaskid) => {\r\n    var body = { assigntaskid: assigntaskid };\r\n    //console.log(brandid)\r\n    var list = await postData(\"assigntask/displayTaskInEditform\", body);\r\n    //console.log('nidhi',list[0].packageid)\r\n    setTaskId(list[0].taskid);\r\n  };\r\n\r\n  // const fetchAllTask = async () => {\r\n  //   var list = await getData(\"task/displayall\");\r\n  //   setTaskList(list.data);\r\n  // };\r\n  const fetchAllTask = async (V_id) => {\r\n    // alert(V_id);\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"task/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  const handleTaskChange = (event) => {\r\n    setTaskId(event.target.value);\r\n  };\r\n\r\n  const fillTaskItem = () => {\r\n    return getTaskList.map((item, key) => {\r\n      return <MenuItem value={item.taskid}>{item.taskname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Feature Packages Edit\"}\r\n          </DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"panel-header bg-dark\">\r\n              <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                <strong>Assign Task </strong> Edit\r\n              </h3>\r\n            </div>\r\n            <div class=\"panel-body bg-white\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 \">\r\n                  <form\r\n                    role=\"form\"\r\n                    class=\"form-validation\"\r\n                    novalidate=\"novalidate\"\r\n                  >\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Assign Task Id</label>\r\n                          <i class=\"fa fa-check\" style={{ marginLeft: 5 }}></i>\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Assign Task Id\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getTaskId}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Tasks</label>\r\n                          <img src={getErrTaskId} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={getTaskId}\r\n                              onChange={(event) => handleTaskChange(event)}\r\n                            >\r\n                              {fillTaskItem()}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Employee</label>\r\n                          <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={getEmployeeId}\r\n                              onChange={(event) =>\r\n                                setEmployeeId(event.target.value)\r\n                              }\r\n                            >\r\n                              {fillEmployees()}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"text-center  m-t-20\">\r\n                      <button\r\n                        className=\"btn btn-success btn-transparent\"\r\n                        type=\"submit\"\r\n                        // class=\"btn btn-embossed btn-primary\"\r\n                        onClick={(event) => {\r\n                          handleEdit();\r\n                        }}\r\n                      >\r\n                        Save Record\r\n                      </button>\r\n                    </div>\r\n                    {getMsg}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <Paper className={classes.mainpaper}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} className={classes.gridStyle}>\r\n                  <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Assign Task Id\"\r\n                    fullWidth\r\n                    value={getAssignTaskId}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrTaskId} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getTaskId}\r\n                      fullWidth=\"true\"\r\n                      onChange={(event) => handleTaskChange(event)}\r\n                    >\r\n                      {fillTaskItem()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Employee\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getEmployeeId}\r\n                      onChange={(event) => setEmployeeId(event.target.value)}\r\n                    >\r\n                      {fillEmployees()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={ErrselectedAssignDate} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Assign Date\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      fullWidth=\"true\"\r\n                      value={selectedAssignDate}\r\n                      onChange={handleAssignDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={ErrselectedAssignTime} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardTimePicker\r\n                      margin=\"normal\"\r\n                      id=\"time-picker\"\r\n                      label=\"Assign Time\"\r\n                      fullWidth=\"true\"\r\n                      value={selectedAssignTime}\r\n                      onChange={handleAssignTimeChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className={classes.gridStyle}>\r\n                  <img src={getErrTaskStatus} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Task Status\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    value={getTaskStatus}\r\n                    onChange={(event) => {\r\n                      setTaskStatus(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                    onClick={(event) => {\r\n                      handleEdit();\r\n                    }}\r\n                  >\r\n                    Save Record\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Assign Task List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllAssignTask;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendor\\DisplayAllVendors.js",["537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { findByLabelText } from \"@testing-library/react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n\r\n  root: {\r\n    // marginTop:30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  paperstyle: {\r\n    width: 800,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f5f6fa\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#f1f2f6\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 180,\r\n    margin: 5,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction DisplayAllVendors() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Customer Id\", field: \"vendorid\", editable: \"never\" },\r\n      { title: \"Customer Name\", field: \"vendorname\", editable: \"never\" },\r\n      { title: \"Email\", field: \"email\", editable: \"never\" },\r\n      { title: \"Mobile No\", field: \"mobileno\", editable: \"never\" },\r\n      { title: \"Company Name\", field: \"companyname\", editable: \"never\" },\r\n\r\n      {\r\n        title: \"Company Logo\",\r\n        field: \"companylogo\",\r\n        editable: \"never\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.companylogo}`}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getRowData, setRowData] = useState([]);\r\n\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getVendorName, setVendorName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getMobileNo, setMobileNo] = useState(\"\");\r\n  const [getCompanyName, setCompanyName] = useState(\"\");\r\n  const [getCompanyLogo, setCompanyLogo] = useState({\r\n    companylogo: \"\",\r\n    filecompanylogo: \"\",\r\n  });\r\n  const [getPassword, setPassword] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorName, setErrVendorName] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrMobileNo, setErrMobileNo] = useState(\"\");\r\n  const [getErrCompanyName, setErrCompanyName] = useState(\"\");\r\n  const [getErrCompanyLogo, setErrCompanyLogo] = useState(\"\");\r\n  const [getErrPassword, setErrPassword] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n\r\n  const handleClickOpen = (rowData) => {\r\n    setOpen(true);\r\n    setVendorId(rowData.vendorid);\r\n    setVendorName(rowData.vendorname);\r\n    setEmail(rowData.email);\r\n    setMobileNo(rowData.mobileno);\r\n    setCompanyName(rowData.companyname);\r\n    setCompanyLogo({\r\n      companylogo: \"\",\r\n      filecompanylogo: `${ServerURL}/images/${rowData.companylogo}`,\r\n    });\r\n    setPassword(rowData.password);\r\n    setStatus(rowData.status);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    let list = await getData(\"vendors/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useState(function () {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { vendorid: oldData.vendorid };\r\n    await postData(\"vendors/deleteRecord\", body);\r\n  };\r\n\r\n  const handleCompanyLogo = (event) => {\r\n    setCompanyLogo({\r\n      companylogo: event.target.files[0],\r\n      filecompanylogo: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getVendorName)) {\r\n      err = true;\r\n      setErrVendorName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorName)) {\r\n      setErrVendorName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getMobileNo)) {\r\n      err = true;\r\n      setErrMobileNo(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getMobileNo)) {\r\n      setErrMobileNo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCompanyName)) {\r\n      err = true;\r\n      setErrCompanyName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCompanyName)) {\r\n      setErrCompanyName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPassword)) {\r\n      err = true;\r\n      setErrPassword(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPassword)) {\r\n      setErrPassword(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      const formData = new FormData();\r\n      formData.append(\"vendorid\", getVendorId);\r\n      formData.append(\"vendorname\", getVendorName);\r\n      formData.append(\"email\", getEmail);\r\n      formData.append(\"mobileno\", getMobileNo);\r\n      formData.append(\"companyname\", getCompanyName);\r\n      formData.append(\"companylogo\", getCompanyLogo.companylogo);\r\n      formData.append(\"password\", getPassword);\r\n      formData.append(\"status\", getStatus);\r\n\r\n      console.log(\"qwerty\", getCompanyLogo.companylogo);\r\n      const config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      let result = await postDataAndImage(\r\n        \"vendors/editRecord\",\r\n        formData,\r\n        config\r\n      );\r\n      console.log(result);\r\n      if (result) {\r\n        setMsg(\"Record Edited...\");\r\n      } else {\r\n        setMsg(\"Fail to Update Record..\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <Dialog\r\n        open={getOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        //maxWidth='xl'\r\n      >\r\n        {/* <DialogTitle id=\"alert-dialog-title\">{\"Vendor Edit\"}</DialogTitle> */}\r\n        {/* <DialogContent> */}\r\n        <div>\r\n          <div class=\"panel panel-default no-bd\">\r\n            <div class=\"panel-header bg-dark\">\r\n              <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 10 }}>\r\n                <strong>Customer</strong> Edit\r\n              </h3>\r\n            </div>\r\n            <div class=\"panel-body bg-white\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 \">\r\n                  <div\r\n                    role=\"form\"\r\n                    class=\"form-validation\"\r\n                    novalidate=\"novalidate\"\r\n                  >\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Customer Id</label>\r\n                          <img src={getErrVendorName} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Customer Id\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getVendorId}\r\n                            />\r\n                            <i class=\"fa fa-edit\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Customer Name</label>\r\n                          <img src={getErrVendorName} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Customer Name\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getVendorName}\r\n                              onChange={(event) => {\r\n                                setVendorName(event.target.value);\r\n                              }}\r\n                            />\r\n                            <i class=\"fa fa-clock\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Email</label>\r\n                          <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Email\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getEmail}\r\n                              onChange={(event) => {\r\n                                setEmail(event.target.value);\r\n                              }}\r\n                            />\r\n                            <i class=\"fa fa-clock\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Mobile No</label>\r\n                          <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"4\"\r\n                              placeholder=\"Mobile No\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getMobileNo}\r\n                              onChange={(event) => {\r\n                                setMobileNo(event.target.value);\r\n                              }}\r\n                            />\r\n                            <i class=\"fa fa-map\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Company Name</label>\r\n                          <img src={getErrCompanyName} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"4\"\r\n                              placeholder=\"Company Name\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getCompanyName}\r\n                              onChange={(event) => {\r\n                                setCompanyName(event.target.value);\r\n                              }}\r\n                            />\r\n                            <i class=\"fa fa-map\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Password</label>\r\n                          <img src={getErrPassword} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"password\"\r\n                              class=\"form-control\"\r\n                              minlength=\"4\"\r\n                              placeholder=\"Password\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getPassword}\r\n                              onChange={(event) => {\r\n                                setPassword(event.target.value);\r\n                              }}\r\n                            />\r\n                            <i class=\"fa fa-map\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Status</label>\r\n                          <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-outlined-label\"\r\n                              id=\"demo-simple-select-outlined\"\r\n                              placeholder=\"Status\"\r\n                              value={getStatus}\r\n                              onChange={(event) => {\r\n                                setStatus(event.target.value);\r\n                              }}\r\n                              label=\"Status\"\r\n                            >\r\n                              <MenuItem value={\"Active\"}>Active</MenuItem>\r\n                              <MenuItem value={\"Deactive\"}>Deactive</MenuItem>\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n                        <input\r\n                          accept=\"image/*\"\r\n                          style={{ display: \"none\" }}\r\n                          id=\"contained-button-file\"\r\n                          type=\"file\"\r\n                          onChange={(event) => handleCompanyLogo(event)}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            fullWidth\r\n                          >\r\n                            Upload Icon\r\n                          </Button>\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            variant=\"rounded\"\r\n                            src={getCompanyLogo.filecompanylogo}\r\n                            className={classes.avatortheme}\r\n                            style={{ width: 55, height: 55 }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"text-center  m-t-20\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-transparent\"\r\n                        type=\"submit\"\r\n                        // class=\"btn btn-embossed btn-primary\"\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                    {getMsg}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <Paper className={classes.paperstyle}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} className={classes.gridStyle}>\r\n                  <img src=\"/images/tick.png\" width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Vendor id\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getVendorId}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrVendorName} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Vendor Name\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getVendorName}\r\n                    onChange={(event) => {\r\n                      setVendorName(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getEmail}\r\n                    onChange={(event) => {\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Mobile No\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getMobileNo}\r\n                    onChange={(event) => {\r\n                      setMobileNo(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrCompanyName} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Company Name\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getCompanyName}\r\n                    onChange={(event) => {\r\n                      setCompanyName(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file1\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(event) => handleCompanyLogo(event)}\r\n                  />\r\n                  <label htmlFor=\"contained-button-file1\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                      className={classes.button}\r\n                    >\r\n                      Upload Logo\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={getCompanyLogo.filecompanylogo}\r\n                    fullWidth\r\n                    variant=\"rounded\"\r\n                    className={classes.large}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrPassword} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    value={getPassword}\r\n                    onChange={(event) => {\r\n                      setPassword(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Status\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={getStatus}\r\n                      onChange={(event) => {\r\n                        setStatus(event.target.value);\r\n                      }}\r\n                      label=\"Status\"\r\n                    >\r\n                      <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                      <MenuItem value={\"No\"}>No</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => handleEdit()}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  {getMsg}\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n        </div>\r\n        {/* </DialogContent> */}\r\n        <DialogActions>\r\n          <Button\r\n            className=\"btn btn-danger btn-rounded btn-transparent\"\r\n            onClick={handleClose}\r\n            // color=\"primary\"\r\n          >\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Customer List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  console.log(getList);\r\n                  setList(data);\r\n                  console.log(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllVendors;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\employees\\EmployeeInterface.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport swal from \"sweetalert\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { statecity } from \"../statecity/StateCity\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.95,\r\n  },\r\n  avatortheme: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: window.innerWidth * 0.45,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  avatortheme: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 220,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction EmployeeInterface() {\r\n  const classes = useStyles();\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeName, setEmployeeName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getMobile, setMobile] = useState(\"\");\r\n  const [getAddress, setAddress] = useState(\"\");\r\n  const [getState, setState] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getDesignation, setDesignation] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getPhoto, setPhoto] = useState({ photo: \"\", file: \"\" });\r\n  const [getJoinDate, setJoinDate] = useState(new Date());\r\n  const [getDOB, setDOB] = useState(new Date());\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrEmployeeName, setErrEmployeeName] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrJoinDate, setErrJoinDate] = useState(\"\");\r\n  const [getErrDOB, setErrDOB] = useState(\"\");\r\n  const [getErrMob, setErrMob] = useState(\"\");\r\n  const [getErrDes, setErrDes] = useState(\"\");\r\n  const [getErrAddress, setErrAddress] = useState(\"\");\r\n  const [getErrState, setErrState] = useState(\"\");\r\n  const [getErrCity, setErrCity] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getErrPhoto, setErrPhoto] = useState(\"\");\r\n  const [getStateList, setStateList] = useState([]);\r\n  const [getCityList, setCityList] = useState([]);\r\n  const [getTotalEmp, setTotalEmp] = useState(\"\");\r\n  const [getPassword, setPassword] = useState(\"123456\");\r\n\r\n  const handleVendorId = () => {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n  };\r\n  const fetchStates = async () => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      list[key] = item.state;\r\n    });\r\n    setStateList(list);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchStates();\r\n    handleVendorId();\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchLicenceRecord(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchLicenceRecord = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let result = await postData(\"packagecustomer/displayPackage\", body);\r\n    if (result.status) {\r\n      // setPackageId(result.result[0].packageid);\r\n      fetchTotalLicence(result.result[0].packageid);\r\n    }\r\n  };\r\n\r\n  const fetchTotalLicence = async (pack_id) => {\r\n    let body = {\r\n      packageid: pack_id,\r\n    };\r\n    let result = await postData(\"packages/displayPackageTotal\", body);\r\n    if (result.status) {\r\n      // alert(result.result[0].noofusers);\r\n      setTotalEmp(result.result[0].noofusers);\r\n    }\r\n  };\r\n\r\n  const fillStates = () => {\r\n    return getStateList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleState = (event) => {\r\n    var state = event.target.value;\r\n    setState(state);\r\n    fetchCity(state);\r\n  };\r\n\r\n  const fetchCity = async (selectstate) => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      if (item.state == selectstate) {\r\n        item.districts.map(function (data, key) {\r\n          list[key] = data;\r\n        });\r\n      }\r\n    });\r\n    setCityList(list);\r\n  };\r\n\r\n  const fillCities = () => {\r\n    return getCityList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var err = false;\r\n    if (!checkRequire(getEmployeeName)) {\r\n      err = true;\r\n      setErrEmployeeName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeName)) {\r\n      setErrEmployeeName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDesignation)) {\r\n      err = true;\r\n      setErrDes(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDesignation)) {\r\n      setErrDes(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkMobile(getMobile)) {\r\n      err = true;\r\n      setErrMob(\"/images/cross.png\");\r\n    }\r\n    if (checkMobile(getMobile)) {\r\n      setErrMob(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getAddress)) {\r\n      err = true;\r\n      setErrAddress(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAddress)) {\r\n      setErrAddress(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getState)) {\r\n      err = true;\r\n      setErrState(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getState)) {\r\n      setErrState(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCity)) {\r\n      err = true;\r\n      setErrCity(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCity)) {\r\n      setErrCity(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getJoinDate)) {\r\n      err = true;\r\n      setErrJoinDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getJoinDate)) {\r\n      setErrJoinDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDOB)) {\r\n      err = true;\r\n      setErrDOB(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDOB)) {\r\n      setErrDOB(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkEmail(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPhoto.photo)) {\r\n      err = true;\r\n      setErrPhoto(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPhoto.photo)) {\r\n      setErrPhoto(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var body = {\r\n        vendorid: getVendorId,\r\n      };\r\n      var rslt = await postData(\"employees/countemployee\", body);\r\n      // console.log(rslt.status);\r\n      if (rslt.status) {\r\n        // console.log(\"num\", rslt.data[0].num);\r\n        // console.log(\"empValue\", `${getTotalEmp}`);\r\n        // console.log(rslt.data[0].num < `${getTotalEmp}`);\r\n        if (rslt.data[0].num < `${getTotalEmp}`) {\r\n          var formData = new FormData();\r\n          formData.append(\"employeename\", getEmployeeName);\r\n          formData.append(\"vendorid\", getVendorId);\r\n          formData.append(\"mobileno\", getMobile);\r\n          formData.append(\"address\", getAddress);\r\n          formData.append(\"state\", getState);\r\n          formData.append(\"city\", getCity);\r\n          formData.append(\"photo\", getPhoto.photo);\r\n          formData.append(\"email\", getEmail);\r\n          formData.append(\"designation\", getDesignation);\r\n          formData.append(\"joiningdate\", getJoinDate);\r\n          formData.append(\"dateofbirth\", getDOB);\r\n          formData.append(\"status\", getStatus);\r\n          formData.append(\"password\", getPassword);\r\n          var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n          var result = await postDataAndImage(\r\n            \"employees/addnewemployee\",\r\n            formData,\r\n            config\r\n          );\r\n\r\n          if (result.status) {\r\n            swal(\"Record Submitted\", \" \", \"success\", {\r\n              buttons: false,\r\n            });\r\n          } else {\r\n            alert(\"Record Not Submitted\");\r\n\r\n            swal(result.message, \" \", \"Error\", {\r\n              buttons: false,\r\n            });\r\n          }\r\n        } else {\r\n          swal(\"Limit Is Over\", \"Error\", {\r\n            buttons: false,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n    setEmployeeName(\"\");\r\n    setMobile(\"\");\r\n    setAddress(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setPhoto({ photo: \"\", file: \"\" });\r\n    setEmail(\"\");\r\n    setDesignation(\"\");\r\n    setJoinDate(new Date());\r\n    setStatus(\"\");\r\n    setDOB(new Date());\r\n    setErrEmployeeName(\"\");\r\n    setErrDes(\"\");\r\n    setErrMob(\"\");\r\n    setErrPhoto(\"\");\r\n    setErrJoinDate(\"\");\r\n    setErrDOB(\"\");\r\n    setErrStatus(\"\");\r\n    setErrState(\"\");\r\n    setErrCity(\"\");\r\n    setErrEmail(\"\");\r\n    setErrAddress(\"\");\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div class=\"panel panel-default no-bd\">\r\n          <div class=\"panel-header bg-dark\">\r\n            <h3 class=\"panel-title\" style={{ color: \"#FFF\" }}>\r\n              <strong>Add New Employee</strong>\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body bg-white\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <form\r\n                  role=\"form\"\r\n                  class=\"form-validation\"\r\n                  novalidate=\"novalidate\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Vendor Id</label>\r\n                        <i class=\"fa fa-check\" style={{ marginLeft: 10 }}></i>\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Vendor Id\"\r\n                            value={getVendorId}\r\n                          />\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Employee Name</label>\r\n                        <img src={getErrEmployeeName} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Employee Name\"\r\n                            value={getEmployeeName}\r\n                            onChange={(event) =>\r\n                              setEmployeeName(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Email Id</label>\r\n                        <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Email Id\"\r\n                            value={getEmail}\r\n                            onChange={(event) => setEmail(event.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-envelope\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Mobile No</label>\r\n                        <img src={getErrMob} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Mobile No\"\r\n                            value={getMobile}\r\n                            onChange={(event) => setMobile(event.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-mobile\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Select State</label>\r\n                        <img src={getErrState} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getState}\r\n                            placeholder=\"State\"\r\n                            onChange={(event) => handleState(event)}\r\n                          >\r\n                            {\" \"}\r\n                            <MenuItem value=\"\">Select State</MenuItem>\r\n                            {fillStates()}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Select City</label>\r\n                        <img src={getErrCity} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getCity}\r\n                            placeholder=\"City\"\r\n                            onChange={(event) => setCity(event.target.value)}\r\n                          >\r\n                            <MenuItem value=\"\">Select City</MenuItem>\r\n                            {fillCities()}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Address</label>\r\n                        <img src={getErrAddress} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Address\"\r\n                            value={getAddress}\r\n                            onChange={(event) => setAddress(event.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-mail\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Date of Birth</label>\r\n                        <img src={getErrDOB} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                              fullWidth\r\n                              // label=\"Date of Birth\"\r\n                              format=\"MM/dd/yyyy\"\r\n                              value={getDOB}\r\n                              onChange={(event) => setDOB(event)}\r\n                              className={classes.calender}\r\n                              KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\",\r\n                              }}\r\n                              style={{ color: \"#000\" }}\r\n                            />\r\n                          </MuiPickersUtilsProvider>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Joining Date</label>\r\n                        <img src={getErrJoinDate} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                              fullWidth\r\n                              // label=\" \"\r\n                              format=\"MM/dd/yyyy\"\r\n                              value={getJoinDate}\r\n                              onChange={(event) => setJoinDate(event)}\r\n                              KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\",\r\n                              }}\r\n                            />\r\n                          </MuiPickersUtilsProvider>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Designation</label>\r\n                        <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            placeholder=\"Designation\"\r\n                            value={getDesignation}\r\n                            onChange={(event) =>\r\n                              setDesignation(event.target.value)\r\n                            }\r\n                          />\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        style={{ display: \"none\" }}\r\n                        id=\"contained-button-file\"\r\n                        type=\"file\"\r\n                        onChange={(event) =>\r\n                          setPhoto({\r\n                            photo: event.target.files[0],\r\n                            file: URL.createObjectURL(event.target.files[0]),\r\n                          })\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"contained-button-file\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                          fullWidth\r\n                        >\r\n                          Upload Icon\r\n                        </Button>\r\n                      </label>{\" \"}\r\n                      <img src={getErrPhoto} width=\"10\" height=\"10\" />\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        variant=\"rounded\"\r\n                        src={getPhoto.file}\r\n                        className={classes.avatortheme}\r\n                      />\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Status</label>\r\n                        <img src={getErrEmployeeName} width=\"10\" height=\"10\" />\r\n                        <Radio\r\n                          checked={getStatus === \"Yes\"}\r\n                          onChange={(event) => setStatus(event.target.value)}\r\n                          value=\"Yes\"\r\n                          name=\"radio-button-demo\"\r\n                          color=\"primary\"\r\n                          //inputProps={{ 'aria-label': 'A' }}\r\n                        />\r\n                        Yes\r\n                        <Radio\r\n                          checked={getStatus === \"No\"}\r\n                          onChange={(event) => setStatus(event.target.value)}\r\n                          value=\"No\"\r\n                          name=\"radio-button-demo\"\r\n                          color=\"primary\"\r\n                          //inputProps={{ 'aria-label': 'B' }}\r\n                        />\r\n                        No\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // class=\"btn btn-embossed btn-primary\"\r\n                      // onClick={() => handleSubmit()}\r\n                    >\r\n                      Submit Record\r\n                    </button>\r\n                    {/* <button\r\n                      className=\"btn btn-danger btn-transparent\"\r\n                      type=\"reset\"\r\n                      // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                      onClick={() => ClearData()}\r\n                    >\r\n                      Reset\r\n                    </button> */}\r\n                  </div>\r\n                </form>\r\n                {getMsg}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperStyle}>\r\n     <Paper  elevation={1} className={classes.paperHeading} >\r\n    <Typography variant=\"h6\" gutterBottom>\r\n    Add New Employee\r\n      </Typography>\r\n     </Paper>\r\n        <Grid container spacing={1}>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src='/images/tick.png' width='10' height='10' />\r\n         <TextField fullWidth label=\"Vendor Id\" value={getVendorId} variant='standard'  /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrEmployeeName} width='10' height='10' />\r\n         <TextField fullWidth label='Employee Name' value={getEmployeeName} variant='standard' onChange={(event)=>setEmployeeName(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrEmail} width='10' height='10' />\r\n         <TextField fullWidth label='Email-Id' value={getEmail} variant='standard'  onChange={(event)=>setEmail(event.target.value)}/> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrMob} width='10' height='10' />\r\n         <TextField fullWidth label='Mobile No' value={getMobile} variant='standard' onChange={(event)=>setMobile(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrState} width='10' height='10' />\r\n         <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getState}\r\n          onChange={(event)=>handleState(event)}\r\n        >  <MenuItem value=\"\">Select State</MenuItem>\r\n         {fillStates()}\r\n        </Select>\r\n      </FormControl>\r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrCity} width='10' height='10' />\r\n         <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getCity}\r\n          onChange={(event)=>setCity(event.target.value)}\r\n        >\r\n           <MenuItem value=\"\">Select City</MenuItem>\r\n           {fillCities()}\r\n        </Select>\r\n      </FormControl>\r\n         </Grid>\r\n         <Grid item xs={12} className={classes.subclass}>\r\n         <img src={getErrAddress} width='10' height='10' />\r\n         <TextField fullWidth label='Address'value={getAddress}  variant='standard' onChange={(event)=>setAddress(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrDOB} width='10' height='10' />\r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n         fullWidth\r\n          label=\"Date of Birth\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getDOB}\r\n          onChange={(event)=>setDOB(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrJoinDate} width='10' height='10' />\r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n         fullWidth\r\n          label=\"Joining Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getJoinDate}\r\n          onChange={(event)=>setJoinDate(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrDes} width='10' height='10' />\r\n         <TextField fullWidth label='Designation' value={getDesignation} variant='standard'  onChange={(event)=>setDesignation(event.target.value)}/> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.center} >\r\n         <img src={getErrPhoto} width='10' height='10' />\r\n         <Avatar alt=\"Remy Sharp\" variant='rounded' src={getPhoto.file} className={classes.avatortheme}/>\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrStatus} width='10' height='10' />\r\n         <div> Status :</div>\r\n       <Radio\r\n        checked={getStatus === 'Yes'}\r\n        onChange={(event)=>setStatus(event.target.value)}\r\n        value=\"Yes\"\r\n        name=\"radio-button-demo\"\r\n        //inputProps={{ 'aria-label': 'A' }}\r\n      />Yes\r\n      <Radio\r\n        checked={getStatus === 'No'}\r\n        onChange={(event)=>setStatus(event.target.value)}\r\n        value=\"No\"\r\n        name=\"radio-button-demo\"\r\n        //inputProps={{ 'aria-label': 'B' }}\r\n      />No\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.center}>\r\n         <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>setPhoto({photo:event.target.files[0],file:URL.createObjectURL(event.target.files[0])})}\r\n       />\r\n       <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\"   className={classes.button} startIcon={<CloudUploadIcon />} component=\"span\">\r\n          Upload Photo\r\n        </Button>\r\n        </label>\r\n         </Grid>\r\n     \r\n        <Grid item xs={6} className={classes.center}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()} > \r\n          Submit Record\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={6}className={classes.center} >\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()}>\r\n          Reset\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.subclass}>\r\n          <div><b>Message : {getMsg}</b>\r\n          </div>\r\n        </Grid>\r\n        </Grid>\r\n        </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeInterface;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\task\\DisplayAllTask.js",["594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  root: {\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 30,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n\r\n  button: {\r\n    width: 200,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction DisplayAllTask() {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Task Id\", field: \"taskid\", editable: \"never\" },\r\n      { title: \"Task Name\", field: \"taskname\", editable: \"never\" },\r\n      {\r\n        title: \"Start Time\",\r\n        field: \"starttime\",\r\n        render: (rowData) => <div>{displayTime(rowData.starttime)}</div>,\r\n      },\r\n      {\r\n        title: \"End Time\",\r\n        field: \"endtime\",\r\n        render: (rowData) => <div>{displayTime(rowData.endtime)}</div>,\r\n      },\r\n      {\r\n        title: \"Date From\",\r\n        field: \"datefrom\",\r\n        render: (rowData) => <div>{displayDate(rowData.datefrom)}</div>,\r\n      },\r\n      {\r\n        title: \"Date To\",\r\n        field: \"dateto\",\r\n        render: (rowData) => <div>{displayDate(rowData.dateto)}</div>,\r\n      },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n      { title: \"Client Id\", field: \"clientid\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n\r\n  const [getTaskId, setTaskId] = useState(\"\");\r\n  const [getTaskName, setTaskName] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getLat, setLat] = useState(\"\");\r\n  const [getLng, setLng] = useState(\"\");\r\n  const [getClientId, setClientId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrTaskName, setErrTaskName] = useState(\"\");\r\n  const [getErrDescription, setErrDescription] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getErrLat, setErrLat] = useState(\"\");\r\n  const [getErrLng, setErrLng] = useState(\"\");\r\n  const [getErrClientId, setErrClientId] = useState(\"\");\r\n  const [ErrselectedDateFrom, setErrSelectedDateFrom] = React.useState(\"\");\r\n  const [ErrselectedDateTo, setErrSelectedDateTo] = React.useState(\"\");\r\n  const [ErrselectedStartTime, setErrSelectedStartTime] = React.useState(\"\");\r\n  const [ErrselectedEndTime, setErrSelectedEndTime] = React.useState(\"\");\r\n  const [getClientsList, setClientsList] = useState([]);\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let list = await postData(\"task/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n    fetchData(vendor.vendorid);\r\n    // fetchData();\r\n    fetchClients();\r\n  }, []);\r\n\r\n  const fetchClients = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"client/displayall\", body);\r\n    setClientsList(list.data);\r\n  };\r\n\r\n  const fillClients = () => {\r\n    return getClientsList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.clientid}>\r\n          {item.clientname}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { taskid: oldData.taskid };\r\n    await postData(\"task/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    setTaskId(rowData.taskid);\r\n    setTaskName(rowData.taskname);\r\n    setDescription(rowData.description);\r\n    setSelectedStartTime(rowData.starttime);\r\n    setSelectedEndTime(rowData.endtime);\r\n    setSelectedDateFrom(rowData.datefrom);\r\n    setSelectedDateTo(rowData.dateto);\r\n    setStatus(rowData.status);\r\n    setLat(rowData.lat);\r\n    setLng(rowData.lng);\r\n    setClientId(rowData.clientid);\r\n  };\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const displayTime = (time) => {\r\n    let tm = new Date(time);\r\n    var h = tm.getHours();\r\n    var m = tm.getMinutes();\r\n    var t = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\r\n    return t;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setErrTaskName(\"\");\r\n    setErrDescription(\"\");\r\n    setErrSelectedStartTime(\"\");\r\n    setErrSelectedEndTime(\"\");\r\n    setErrSelectedDateFrom(\"\");\r\n    setErrSelectedDateTo(\"\");\r\n    setErrStatus(\"\");\r\n    setErrLat(\"\");\r\n    setErrLng(\"\");\r\n    setErrClientId(\"\");\r\n    setMsg(\"\");\r\n    fetchData(getVendorId);\r\n  };\r\n\r\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date());\r\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\r\n  const [selectedStartTime, setSelectedStartTime] = React.useState(new Date());\r\n  const [selectedEndTime, setSelectedEndTime] = React.useState(new Date());\r\n\r\n  const handleDateFromChange = (date) => {\r\n    setSelectedDateFrom(date);\r\n  };\r\n\r\n  const handleDateToChange = (date) => {\r\n    setSelectedDateTo(date);\r\n  };\r\n\r\n  const handleStartTimeChange = (time) => {\r\n    setSelectedStartTime(time);\r\n  };\r\n  const handleEndTimeChange = (time) => {\r\n    setSelectedEndTime(time);\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getClientId)) {\r\n      err = true;\r\n      setErrClientId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientId)) {\r\n      setErrClientId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTaskName)) {\r\n      err = true;\r\n      setErrTaskName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskName)) {\r\n      setErrTaskName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedStartTime)) {\r\n      err = true;\r\n      setErrSelectedStartTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedStartTime)) {\r\n      setErrSelectedStartTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedEndTime)) {\r\n      err = true;\r\n      setErrSelectedEndTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedEndTime)) {\r\n      setErrSelectedEndTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedDateFrom)) {\r\n      err = true;\r\n      setErrSelectedDateFrom(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedDateFrom)) {\r\n      setErrSelectedDateFrom(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedDateTo)) {\r\n      err = true;\r\n      setErrSelectedDateTo(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedDateTo)) {\r\n      setErrSelectedDateTo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getLat)) {\r\n      err = true;\r\n      setErrLat(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLat)) {\r\n      setErrLat(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getLng)) {\r\n      err = true;\r\n      setErrLng(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLng)) {\r\n      setErrLng(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        taskid: getTaskId,\r\n        taskname: getTaskName,\r\n        description: getDescription,\r\n        starttime: selectedStartTime,\r\n        endtime: selectedEndTime,\r\n        datefrom: selectedDateFrom,\r\n        dateto: selectedDateTo,\r\n        status: getStatus,\r\n        lat: getLat,\r\n        lng: getLng,\r\n        clientid: getClientId,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"task/editRecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Edit ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"xl\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">{\"Task Edit\"}</DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n              <div class=\"panel-header bg-dark\">\r\n                <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                  <strong>Edit </strong> Task\r\n                </h3>\r\n              </div>\r\n              <div class=\"panel-body bg-white\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 \">\r\n                    <form\r\n                      role=\"form\"\r\n                      class=\"form-validation\"\r\n                      novalidate=\"novalidate\"\r\n                    >\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Task Id</label>\r\n                            <i\r\n                              class=\"fa fa-check\"\r\n                              style={{ marginLeft: 5 }}\r\n                            ></i>\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Task Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getTaskId}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Client</label>\r\n                            <img src={getErrClientId} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <Select\r\n                                fullWidth\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={getClientId}\r\n                                onChange={(event) =>\r\n                                  setClientId(event.target.value)\r\n                                }\r\n                              >\r\n                                {fillClients()}\r\n                              </Select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Task Name</label>\r\n                            <img src={getErrTaskName} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Task Name\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getTaskName}\r\n                                onChange={(event) => {\r\n                                  setTaskName(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Description</label>\r\n                            <img\r\n                              src={getErrDescription}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Description\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getDescription}\r\n                                onChange={(event) => {\r\n                                  setDescription(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Start Time</label>\r\n                            <img\r\n                              src={ErrselectedStartTime}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardTimePicker\r\n                                  margin=\"normal\"\r\n                                  fullWidth\r\n                                  id=\"time-picker\"\r\n                                  label=\"Start Time\"\r\n                                  value={selectedStartTime}\r\n                                  onChange={handleStartTimeChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change time\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">End Time</label>\r\n                            <img\r\n                              src={ErrselectedEndTime}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardTimePicker\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  id=\"time-picker\"\r\n                                  label=\"End Time\"\r\n                                  value={selectedEndTime}\r\n                                  onChange={handleEndTimeChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change time\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Date From</label>\r\n                            <img\r\n                              src={ErrselectedDateFrom}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  id=\"date-picker-dialog\"\r\n                                  label=\"Date From\"\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  value={selectedDateFrom}\r\n                                  onChange={handleDateFromChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change date\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Date To</label>\r\n                            <img\r\n                              src={ErrselectedDateTo}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  id=\"date-picker-dialog\"\r\n                                  label=\"Date To\"\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  value={selectedDateTo}\r\n                                  onChange={handleDateToChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change date\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Longitude</label>\r\n                            <img src={getErrLng} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Longitude\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getLng}\r\n                                onChange={(event) => {\r\n                                  setLng(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Latitude</label>\r\n                            <img src={getErrLat} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Latitude\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getLat}\r\n                                onChange={(event) => {\r\n                                  setLat(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Status</label>\r\n                            <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Status\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getStatus}\r\n                                onChange={(event) => {\r\n                                  setStatus(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-clock \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"text-center  m-t-20\">\r\n                        <button\r\n                          className=\"btn btn-success btn-transparent\"\r\n                          type=\"submit\"\r\n                          // class=\"btn btn-embossed btn-primary\"\r\n                          onClick={() => handleEdit()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                      {getMsg}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Grid container spacing={1} >\r\n\r\n       <Grid item xs={12} className={classes.gridStyle} > \r\n       <img src={'/images/tick.png'} width='10' height='10' />\r\n       <TextField fullWidth label='Task Id' value={getTaskId} variant='standard' />\r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrClientId} width='10' height='10' />            \r\n        <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">Client</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getClientId}\r\n          onChange={(event)=>setClientId(event.target.value)}\r\n        >  \r\n         {fillClients()}\r\n        </Select>\r\n      </FormControl></Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrTaskName} width='10' height='10' />                 \r\n        <TextField id=\"standard-basic\" label=\"Task Name\" variant=\"standard\" fullWidth value={getTaskName} onChange={(event)=>{setTaskName(event.target.value)}}  /> \r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrDescription} width='10' height='10' />          \r\n        <TextField id=\"standard-basic\" label=\"Description\" variant=\"standard\" fullWidth value={getDescription} onChange={(event)=>{setDescription(event.target.value)}} /> \r\n         </Grid>\r\n      \r\n         <Grid item xs={6} className={classes.gridStyle}>\r\n         <img src={ErrselectedStartTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Start Time\"\r\n          value={selectedStartTime}\r\n          onChange={handleStartTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedEndTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"End Time\"\r\n          value={selectedEndTime}\r\n          onChange={handleEndTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedDateFrom} width='10' height='10' />                 \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date From\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDateFrom}\r\n          onChange={handleDateFromChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedDateTo} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date To\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDateTo}\r\n          onChange={handleDateToChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrStatus} width='10' height='10' />           \r\n        <TextField id=\"standard-basic\" label=\"Status\"  fullWidth variant=\"standard\" value={getStatus} onChange={(event)=>{setStatus(event.target.value)}} /> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrLat} width='10' height='10' />           \r\n        <TextField id=\"standard-basic\" label=\"Latitude\"  fullWidth variant=\"standard\" value={getLat} onChange={(event)=>{setLat(event.target.value)}} /> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrLng} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Longitude\"  fullWidth variant=\"standard\" value={getLng} onChange={(event)=>{setLng(event.target.value)}} /> \r\n        </Grid> \r\n\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleEdit()} >\r\n         Save Record\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} >\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n\r\n  </Grid>\r\n</Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Tasks List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllTask;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\task\\Task.js",["618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {\r\n  postDataAndImage,\r\n  getData,\r\n  postData,\r\n  GKey,\r\n} from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Geocode from \"react-geocode\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst AnyReactComponent = () => (\r\n  <div\r\n    style={{\r\n      flexDirection: \"column\",\r\n      // display: \"flex\",\r\n      marginTop: 20,\r\n    }}\r\n  >\r\n    <img src=\"/pin1.gif\" width=\"32\" height=\"32\" />\r\n    {/* <div\r\n      style={{\r\n        padding: 2,\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#2980b9\",\r\n        border: \"solid 3px #2980b9\",\r\n        borderRadius: \"20%\",\r\n        width: \"auto\",\r\n        alignItem: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        width: 25,\r\n        fontWeight: \"bold\",\r\n        fontSize: 6,\r\n      }}\r\n    >\r\n    {text}\r\n    </div> */}\r\n  </div>\r\n);\r\n\r\nfunction Task(props) {\r\n  const classes = useStyles();\r\n  const ldata = {\r\n    latitude: 26.215,\r\n    longitude: 78.2074,\r\n    date: \"1/1/1\",\r\n    time: \"0:0:0\",\r\n    battery: \"1\",\r\n    employee_id: 1,\r\n    vendor_id: 100,\r\n  };\r\n  const [getTaskName, setTaskName] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getLat, setLat] = useState(\"\");\r\n  const [getLng, setLng] = useState(\"\");\r\n  const [getClientId, setClientId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date());\r\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\r\n  const [selectedStartTime, setSelectedStartTime] = React.useState(new Date());\r\n  const [selectedEndTime, setSelectedEndTime] = React.useState(new Date());\r\n  const [getAssignTaskId, setAssignTaskId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n  const [getList, setList] = useState([]);\r\n  const [getErrTaskName, setErrTaskName] = useState(\"\");\r\n  const [getErrDescription, setErrDescription] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getErrLat, setErrLat] = useState(\"\");\r\n  const [getAddress, setAddress] = useState(\"\");\r\n\r\n  const [getErrLng, setErrLng] = useState(\"\");\r\n  const [getErrClientId, setErrClientId] = useState(\"\");\r\n  const [ErrselectedDateFrom, setErrSelectedDateFrom] = React.useState(\"\");\r\n  const [ErrselectedDateTo, setErrSelectedDateTo] = React.useState(\"\");\r\n  const [ErrselectedStartTime, setErrSelectedStartTime] = React.useState(\"\");\r\n  const [ErrselectedEndTime, setErrSelectedEndTime] = React.useState(\"\");\r\n  const [getClientsList, setClientsList] = useState([]);\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n    fetchClients(vendor.vendorid);\r\n    fetchAllTask(vendor.vendorid);\r\n    fetchEmployees(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchClients = async (V_id) => {\r\n    Geocode.setApiKey(GKey);\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"client/displayall\", body);\r\n    // console.log(list.data);\r\n    setClientsList(list.data);\r\n  };\r\n\r\n  const handleAdrress = async (id) => {\r\n    Geocode.setApiKey(GKey);\r\n    var body = {\r\n      clientid: id,\r\n    };\r\n    let result = await postData(\"client/searchById\", body);\r\n    if (result.status) {\r\n      // console.log(result.data)\r\n      // alert(result.data.clientaddress)\r\n      Geocode.fromAddress(\r\n        result.data.clientaddress +\r\n          \",\" +\r\n          result.data.city +\r\n          \",\" +\r\n          result.data.state\r\n      ).then((response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        // alert({ lat, lng })\r\n        setLat(lat);\r\n        setLng(lng);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCliendId = (e) => {\r\n    setClientId(e.target.value);\r\n    handleAdrress(e.target.value);\r\n  };\r\n\r\n  const fillClients = () => {\r\n    return getClientsList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.clientid}>\r\n          {item.clientname}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var err = false;\r\n    if (!checkRequire(getClientId)) {\r\n      err = true;\r\n      setErrClientId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientId)) {\r\n      setErrClientId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getTaskName)) {\r\n      err = true;\r\n      setErrTaskName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getTaskName)) {\r\n      setErrTaskName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedStartTime)) {\r\n      err = true;\r\n      setErrSelectedStartTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedStartTime)) {\r\n      setErrSelectedStartTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedEndTime)) {\r\n      err = true;\r\n      setErrSelectedEndTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedEndTime)) {\r\n      setErrSelectedEndTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedDateFrom)) {\r\n      err = true;\r\n      setErrSelectedDateFrom(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedDateFrom)) {\r\n      setErrSelectedDateFrom(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedDateTo)) {\r\n      err = true;\r\n      setErrSelectedDateTo(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedDateTo)) {\r\n      setErrSelectedDateTo(\"/images/tick.png\");\r\n    }\r\n\r\n    // if (!checkRequire(getStatus)) {\r\n    //   err = true;\r\n    //   setErrStatus(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getStatus)) {\r\n    //   setErrStatus(\"/images/tick.png\");\r\n    // }\r\n\r\n    if (!checkRequire(getLat)) {\r\n      err = true;\r\n      setErrLat(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLat)) {\r\n      setErrLat(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getLng)) {\r\n      err = true;\r\n      setErrLng(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getLng)) {\r\n      setErrLng(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        taskname: getTaskName,\r\n        description: getDescription,\r\n        starttime: selectedStartTime,\r\n        endtime: selectedEndTime,\r\n        datefrom: selectedDateFrom,\r\n        dateto: selectedDateTo,\r\n        // status: getStatus,\r\n        status: \"Not Completed\",\r\n        lat: getLat,\r\n        lng: getLng,\r\n        clientid: getClientId,\r\n        // assigntaskid: getAssignTaskId,\r\n        // employeeid: getEmployeeId,\r\n      };\r\n      // console.log(\"xxxxxxxxxxxxxxxxxxxx\", body);\r\n      var result = await postData(\"task/addnewrecord\", body);\r\n      if (result.status) {\r\n        setMsg(\"Add Task Sucessfully\");\r\n        // alert(result.data.insertId);\r\n        setTTaskId(result.data.insertId);\r\n\r\n        // var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n        fetchAllTask(getVendorId);\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const [getTTaskId, setTTaskId] = useState(\"\");\r\n\r\n  const handleAssigningTask = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let body = {\r\n      taskid: getAssignTaskId,\r\n      employeeid: getEmployeeId,\r\n      assigndate: selectedDateFrom,\r\n      assigntime: selectedStartTime,\r\n      taskstatus: \"Not Completed\",\r\n    };\r\n    let result = await postData(\"assigntask/addnewrecord\", body);\r\n    if (result.status) {\r\n      setMsg(\"Assign Task Sucessfully\");\r\n      let body = {\r\n        taskid: getTTaskId,\r\n        assigntaskid: result.data.insertId,\r\n        employeeid: getEmployeeId,\r\n      };\r\n      console.log(\"xxxxxxxxxxxxxxxxx\", body);\r\n      let rslt = await postData(\"task/updateTask\", body);\r\n      if (rslt) {\r\n        setMsg(\"Update Task Sucessfully\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setAssignTaskId(\"\");\r\n    setEmployeeId(\"\");\r\n    setTaskName(\"\");\r\n    setDescription(\"\");\r\n    setSelectedStartTime(new Date());\r\n    setSelectedEndTime(new Date());\r\n    setSelectedDateFrom(new Date());\r\n    setSelectedDateTo(new Date());\r\n    setStatus(\"\");\r\n    setLat(\"\");\r\n    setLng(\"\");\r\n    setClientId(\"\");\r\n    setMsg(\"\");\r\n    setErrTaskName(\"\");\r\n    setErrDescription(\"\");\r\n    setErrSelectedStartTime(\"\");\r\n    setErrSelectedEndTime(\"\");\r\n    setErrSelectedDateFrom(\"\");\r\n    setErrSelectedDateTo(\"\");\r\n    setErrStatus(\"\");\r\n    setErrLat(\"\");\r\n    setErrLng(\"\");\r\n    setErrClientId(\"\");\r\n  };\r\n\r\n  const handleDateFromChange = (date) => {\r\n    setSelectedDateFrom(date);\r\n  };\r\n\r\n  const handleTaskChange = (event) => {\r\n    setAssignTaskId(event.target.value);\r\n  };\r\n\r\n  const handleDateToChange = (date) => {\r\n    setSelectedDateTo(date);\r\n  };\r\n\r\n  const handleStartTimeChange = (time) => {\r\n    setSelectedStartTime(time);\r\n  };\r\n  const handleEndTimeChange = (time) => {\r\n    setSelectedEndTime(time);\r\n  };\r\n\r\n  const fillTaskItem = () => {\r\n    return getList.map((item, key) => {\r\n      return <MenuItem value={item.taskid}>{item.taskname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n  const handleClickLoc = (event) => {\r\n    setLat(event.lat);\r\n    setLng(event.lng);\r\n  };\r\n\r\n  const fetchEmployees = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\", body);\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  const fetchAllTask = async (V_id) => {\r\n    // alert(V_id);\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"task/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Task</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form\r\n                role=\"form\"\r\n                class=\"form-validation\"\r\n                novalidate=\"novalidate\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Client</label>\r\n                      <img src={getErrClientId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getClientId}\r\n                          onChange={(event) => handleCliendId(event)}\r\n                        >\r\n                          {fillClients()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Task Name</label>\r\n                      <img src={getErrTaskName} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Task Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getTaskName}\r\n                          onChange={(event) => {\r\n                            setTaskName(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Description</label>\r\n                      <img src={getErrDescription} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Description\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getDescription}\r\n                          onChange={(event) => {\r\n                            setDescription(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-map\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Start Time</label>\r\n                      <img src={ErrselectedStartTime} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"time-picker\"\r\n                            label=\"Start Time\"\r\n                            value={selectedStartTime}\r\n                            onChange={handleStartTimeChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change time\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">End Time</label>\r\n                      <img src={ErrselectedEndTime} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardTimePicker\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            id=\"time-picker\"\r\n                            label=\"End Time\"\r\n                            value={selectedEndTime}\r\n                            onChange={handleEndTimeChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change time\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Date From</label>\r\n                      <img src={ErrselectedDateFrom} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date From\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            value={selectedDateFrom}\r\n                            onChange={handleDateFromChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Date To</label>\r\n                      <img src={ErrselectedDateTo} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date To\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            value={selectedDateTo}\r\n                            onChange={handleDateToChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Longitude</label>\r\n                      <img src={getErrLng} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Longitude\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getLng}\r\n                          onChange={(event) => {\r\n                            setLng(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-edit \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Latitude</label>\r\n                      <img src={getErrLat} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"4\"\r\n                          placeholder=\"Latitude\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getLat}\r\n                          onChange={(event) => {\r\n                            setLat(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-edit\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    height: window.screen.height * 0.4,\r\n                    width: window.screen.width * 0.7,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  <GoogleMapReact\r\n                    apiKey={GKey}\r\n                    center={[getLat, getLng]}\r\n                    zoom={18}\r\n                    onClick={(event) => handleClickLoc(event)}\r\n                  >\r\n                    <AnyReactComponent\r\n                      lat={getLat}\r\n                      lng={getLng}\r\n                      //text={getEmployeeid.name}\r\n                    />\r\n                  </GoogleMapReact>\r\n                </div>\r\n                <div>\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // onSubmit={() => handleSubmit()}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-transparent\"\r\n                      type=\"reset\"\r\n                      onClick={(event) => {\r\n                        ClearData();\r\n                      }}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Status\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getStatus}\r\n                          onChange={(event) => {\r\n                            setStatus(event.target.value);\r\n                          }}\r\n                        />\r\n                        <i class=\"fa fa-clock \"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Tasks</label>\r\n                      {/* <img src={getErrTaskId} width=\"10\" height=\"10\" /> */}\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getAssignTaskId}\r\n                          onChange={(event) => handleTaskChange(event)}\r\n                        >\r\n                          {fillTaskItem()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Employee</label>\r\n                      {/* <img src={getErrEmployeeId} width=\"10\" height=\"10\" /> */}\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmployeeId}\r\n                          onChange={(event) =>\r\n                            setEmployeeId(event.target.value)\r\n                          }\r\n                        >\r\n                          {fillEmployees()}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    // type=\"submit\"\r\n                    onClick={(e) => handleAssigningTask(e)}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Paper elevation={1} className={classes.headingstyle}>\r\n       <Typography variant=\"h6\" gutterBottom>\r\n       <b>&nbsp;&nbsp;&nbsp;&nbsp;Add Task </b>     \r\n       </Typography>\r\n    </Paper>\r\n\r\n    <Grid container spacing={2} >\r\n\r\n      \r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrClientId} width='10' height='10' />            \r\n        <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">Client</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getClientId}\r\n          onChange={(event)=>setClientId(event.target.value)}\r\n        >  \r\n         {fillClients()}\r\n        </Select>\r\n      </FormControl> </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrTaskName} width='10' height='10' />              \r\n        <TextField id=\"standard-basic\" label=\"Task Name\" variant=\"standard\" fullWidth value={getTaskName} onChange={(event)=>{setTaskName(event.target.value)}}  /> \r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrDescription} width='10' height='10' />          \r\n        <TextField id=\"standard-basic\" label=\"Description\" variant=\"standard\" fullWidth value={getDescription} onChange={(event)=>{setDescription(event.target.value)}} /> \r\n         </Grid>\r\n      \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedStartTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Start Time\"\r\n          value={selectedStartTime}\r\n          onChange={handleStartTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedEndTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"End Time\"\r\n          value={selectedEndTime}\r\n          onChange={handleEndTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedDateFrom} width='10' height='10' />                \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date From\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDateFrom}\r\n          onChange={handleDateFromChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedDateTo} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date To\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDateTo}\r\n          onChange={handleDateToChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrStatus} width='10' height='10' />           \r\n        <TextField id=\"standard-basic\" label=\"Status\"  fullWidth variant=\"standard\" value={getStatus} onChange={(event)=>{setStatus(event.target.value)}} /> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrLat} width='10' height='10' />           \r\n        <TextField id=\"standard-basic\" label=\"Latitude\"  fullWidth variant=\"standard\" value={getLat} onChange={(event)=>{setLat(event.target.value)}} /> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrLng} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Longitude\"  fullWidth variant=\"standard\" value={getLng} onChange={(event)=>{setLng(event.target.value)}} /> \r\n        </Grid>         \r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()} >\r\n         Submit\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()} >\r\n         Reset\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} >\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n  </Grid>\r\n</Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\client\\DisplayAllClient.js",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire, checkEmail, checkMobile } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { statecity } from \"../statecity/StateCity\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  root: {\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 30,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n\r\n  button: {\r\n    width: 200,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction DisplayAllClient() {\r\n  const [states, setStates] = useState({\r\n    columns: [\r\n      { title: \"Client Id\", field: \"clientid\", editable: \"never\" },\r\n      { title: \"Client Name\", field: \"clientname\", editable: \"never\" },\r\n      { title: \"Address\", field: \"clientaddress\", editable: \"never\" },\r\n      { title: \"Firm Name\", field: \"firmname\", editable: \"never\" },\r\n      { title: \"Mobile No\", field: \"mobileno\", editable: \"never\" },\r\n      { title: \"Email\", field: \"email\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getClientId, setClientId] = useState(\"\");\r\n  const [getClientName, setClientName] = useState(\"\");\r\n  const [getClientAddress, setClientAddress] = useState(\"\");\r\n  const [getState, setState] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getFirmName, setFirmName] = useState(\"\");\r\n  const [getMobileNo, setMobileNo] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getDescription, setDescription] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n\r\n  const [getErrClientName, setErrClientName] = useState(\"\");\r\n  const [getErrClientAddress, setErrClientAddress] = useState(\"\");\r\n  const [getErrState, setErrState] = useState(\"\");\r\n  const [getErrCity, setErrCity] = useState(\"\");\r\n  const [getErrFirmName, setErrFirmName] = useState(\"\");\r\n  const [getErrMobileNo, setErrMobileNo] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrDescription, setErrDescription] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getStateList, setStateList] = useState([]);\r\n  const [getCityList, setCityList] = useState([]);\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let list = await postData(\"client/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const fetchStates = async () => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      list[key] = item.state;\r\n    });\r\n    setStateList(list);\r\n  };\r\n\r\n  const fillStates = () => {\r\n    return getStateList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleState = (event) => {\r\n    var state = event.target.value;\r\n    setState(state);\r\n    fetchCity(state);\r\n  };\r\n\r\n  const fetchCity = async (selectstate) => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      if (item.state == selectstate) {\r\n        item.districts.map(function (data, key) {\r\n          list[key] = data;\r\n        });\r\n      }\r\n    });\r\n    setCityList(list);\r\n  };\r\n\r\n  const fillCities = () => {\r\n    return getCityList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n  const handleDelete = async (oldData) => {\r\n    let body = { clientid: oldData.clientid };\r\n    await postData(\"client/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    fetchCity(rowData.state);\r\n    setClientId(rowData.clientid);\r\n    setClientName(rowData.clientname);\r\n    setClientAddress(rowData.clientaddress);\r\n    setState(rowData.state);\r\n    setCity(rowData.city);\r\n    setFirmName(rowData.firmname);\r\n    setMobileNo(rowData.mobileno);\r\n    setEmail(rowData.email);\r\n    setDescription(rowData.description);\r\n    setVendorId(rowData.vendorid);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMsg(\"\");\r\n    setErrClientName(\"\");\r\n    setErrClientAddress(\"\");\r\n    setErrState(\"\");\r\n    setErrCity(\"\");\r\n    setErrFirmName(\"\");\r\n    setErrMobileNo(\"\");\r\n    setErrEmail(\"\");\r\n    setErrDescription(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getClientName)) {\r\n      err = true;\r\n      setErrClientName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientName)) {\r\n      setErrClientName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getClientAddress)) {\r\n      err = true;\r\n      setErrClientAddress(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getClientAddress)) {\r\n      setErrClientAddress(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getState)) {\r\n      err = true;\r\n      setErrState(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getState)) {\r\n      setErrState(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCity)) {\r\n      err = true;\r\n      setErrCity(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCity)) {\r\n      setErrCity(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getFirmName)) {\r\n      err = true;\r\n      setErrFirmName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getFirmName)) {\r\n      setErrFirmName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkMobile(getMobileNo)) {\r\n      err = true;\r\n      setErrMobileNo(\"/images/cross.png\");\r\n    }\r\n    if (checkMobile(getMobileNo)) {\r\n      setErrMobileNo(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkEmail(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDescription)) {\r\n      err = true;\r\n      setErrDescription(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDescription)) {\r\n      setErrDescription(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getVendorId)) {\r\n      err = true;\r\n      setErrVendorId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorId)) {\r\n      setErrVendorId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        clientid: getClientId,\r\n        clientname: getClientName,\r\n        clientaddress: getClientAddress,\r\n        state: getState,\r\n        city: getCity,\r\n        firmname: getFirmName,\r\n        mobileno: getMobileNo,\r\n        email: getEmail,\r\n        description: getDescription,\r\n        vendorid: getVendorId,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"client/editRecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Edited ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"xl\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">{\"Client Edit\"}</DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n              <div class=\"panel-header bg-dark\">\r\n                <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                  <strong>Client </strong> Edit\r\n                </h3>\r\n              </div>\r\n              <div class=\"panel-body bg-white\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 \">\r\n                    <form\r\n                      role=\"form\"\r\n                      class=\"form-validation\"\r\n                      novalidate=\"novalidate\"\r\n                    >\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Client Id</label>\r\n                            <i\r\n                              class=\"fa fa-check\"\r\n                              style={{ marginLeft: 5 }}\r\n                            ></i>\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Client Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getClientId}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Client Name</label>\r\n                            <img\r\n                              src={getErrClientName}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Client Name\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getClientName}\r\n                                onChange={(event) => {\r\n                                  setClientName(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-clock \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Client Address</label>\r\n                            <img\r\n                              src={getErrClientAddress}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Client Address\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getClientAddress}\r\n                                onChange={(event) => {\r\n                                  setClientAddress(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-map\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Firm Name</label>\r\n                            <img src={getErrFirmName} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Firm Name\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getFirmName}\r\n                                onChange={(event) => {\r\n                                  setFirmName(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-clock \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Mobile No</label>\r\n                            <img src={getErrMobileNo} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Mobile No\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getMobileNo}\r\n                                onChange={(event) => {\r\n                                  setMobileNo(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-mobile\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Select State</label>\r\n                            <img src={getErrState} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <Select\r\n                                fullWidth\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={getState}\r\n                                onChange={(event) => handleState(event)}\r\n                              >\r\n                                {\" \"}\r\n                                <MenuItem value=\"\">Select State</MenuItem>\r\n                                {fillStates()}\r\n                              </Select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Select City</label>\r\n                            <img src={getErrCity} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <Select\r\n                                fullWidth\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={getCity}\r\n                                onChange={(event) =>\r\n                                  setCity(event.target.value)\r\n                                }\r\n                              >\r\n                                <MenuItem value=\"\">Select City</MenuItem>\r\n                                {fillCities()}\r\n                              </Select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Email Id</label>\r\n                            <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Email Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getEmail}\r\n                                onChange={(event) => {\r\n                                  setEmail(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-clock \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Description</label>\r\n                            <img\r\n                              src={getErrDescription}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"4\"\r\n                                placeholder=\"Description\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getDescription}\r\n                                onChange={(event) => {\r\n                                  setDescription(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit\"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Vendor Id</label>\r\n                            <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Vendor Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getVendorId}\r\n                                onChange={(event) => {\r\n                                  setVendorId(event.target.value);\r\n                                }}\r\n                              />\r\n                              <i class=\"fa fa-edit \"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"text-center  m-t-20\">\r\n                        <button\r\n                          className=\"btn btn-success btn-transparent\"\r\n                          type=\"submit\"\r\n                          // class=\"btn btn-embossed btn-primary\"\r\n                          onClick={() => handleEdit()}\r\n                        >\r\n                          Save Record\r\n                        </button>\r\n                      </div>\r\n                      {getMsg}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Grid container spacing={2} >\r\n\r\n    <Grid item xs={12} className={classes.gridStyle}>\r\n    <img src={'/images/tick.png'} width='10' height='10' />\r\n        <TextField id=\"standard-basic\" label=\"Client Id\"  fullWidth variant=\"standard\" value={getClientId}  />\r\n        </Grid> \r\n      \r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrClientName} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Client Name\"  fullWidth variant=\"standard\" value={getClientName} onChange={(event)=>{setClientName(event.target.value)}} />\r\n        </Grid> \r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrClientAddress} width='10' height='10' />              \r\n        <TextField id=\"standard-basic\" label=\"Client Address\" variant=\"standard\" fullWidth value={getClientAddress} onChange={(event)=>{setClientAddress(event.target.value)}}  /> \r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrFirmName} width='10' height='10' />           \r\n        <TextField id=\"standard-basic\" label=\"Firm Name\"  fullWidth variant=\"standard\" value={getFirmName} onChange={(event)=>{setFirmName(event.target.value)}} /> \r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrState} width='10' height='10' /> \r\n        <FormControl fullWidth>      \r\n        <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getState}\r\n          onChange={(event)=>handleState(event)}\r\n        >  <MenuItem value=\"\">Select State</MenuItem>\r\n         {fillStates()}\r\n        </Select>\r\n      </FormControl></Grid>\r\n      \r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrCity} width='10' height='10' />           \r\n        <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getCity}\r\n          onChange={(event)=>setCity(event.target.value)}\r\n        >\r\n           <MenuItem value=\"\">Select City</MenuItem>\r\n           {fillCities()}\r\n        </Select>\r\n      </FormControl> </Grid> \r\n\r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrMobileNo} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Mobile No\"  fullWidth variant=\"standard\" value={getMobileNo} onChange={(event)=>{setMobileNo(event.target.value)}} /> \r\n        </Grid>  \r\n\r\n         <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={getErrEmail} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Email\"  fullWidth variant=\"standard\" value={getEmail} onChange={(event)=>{setEmail(event.target.value)}} /> \r\n        </Grid>        \r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrDescription} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Description\"  fullWidth variant=\"standard\" value={getDescription} onChange={(event)=>{setDescription(event.target.value)}} /> \r\n        </Grid> \r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrVendorId} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Vendor Id\"  fullWidth variant=\"standard\" value={getVendorId} onChange={(event)=>{setVendorId(event.target.value)}} /> \r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleEdit()} >\r\n         Save Record\r\n        </Button>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} style={{marginLeft:5}}>\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n  </Grid>\r\n</Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Display All Client</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={states.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllClient;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\Dashboard.js",["671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ListItems from \"./ListItems\";\r\nimport { getData, ServerURL } from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PackageInterface from \"../packages/PackageInterface\";\r\nimport DisplayAllPackages from \"../packages/DisplayAllPackages\";\r\nimport DisplayAllVendors from \"../vendor/DisplayAllVendors\";\r\nimport DisplayAllFeaturesPackages from \"../feature packages/DisplayAllFeaturesPackages\";\r\nimport Vendors from \"../vendor/Vendors\";\r\nimport PackageCustomer from \"../Package customer/PackageCustomer\";\r\nimport DisplayPackageCustomer from \"../Package customer/DisplayPackageCustomer\";\r\nimport FeaturesPackages from \"../feature packages/FeaturesPackages\";\r\nimport DashOne from \"../superadmin/DashOne\";\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [admin, setAdmin] = useState([]);\r\n  const [ShowComponent, setComponent] = useState(<DashOne />);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const CheckSession = async () => {\r\n    if (!localStorage.getItem(\"admin\")) {\r\n      props.history.replace({ pathname: `/AdminSignIn` });\r\n    }\r\n\r\n    var admin = JSON.parse(localStorage.getItem(\"admin\"));\r\n    console.log(admin);\r\n    setAdmin(admin);\r\n    //console.log(props.history.location.admin)\r\n  };\r\n\r\n  useEffect(function () {\r\n    CheckSession();\r\n  }, []);\r\n\r\n  const handleComponents = async (opt) => {\r\n    switch (opt) {\r\n      case 1:\r\n        setComponent(<PackageInterface />);\r\n        break;\r\n      case 2:\r\n        setComponent(<DisplayAllPackages />);\r\n        break;\r\n      case 3:\r\n        setComponent(<FeaturesPackages />);\r\n        break;\r\n      case 4:\r\n        setComponent(<DisplayAllFeaturesPackages />);\r\n        break;\r\n      case 5:\r\n        setComponent(<Vendors />);\r\n        break;\r\n      case 6:\r\n        setComponent(<DisplayAllVendors />);\r\n        break;\r\n\r\n      // case 7:\r\n      //   localStorage.removeItem(\"admin\");\r\n      //   var result = await getData(\"admin/logout\");\r\n      //   if (result) {\r\n      //     props.history.replace({ pathname: `/AdminSignin` });\r\n      //   }\r\n      //   break;\r\n      case 8:\r\n        setComponent(<DashOne />);\r\n        break;\r\n      case 9:\r\n        setComponent(<PackageCustomer />);\r\n        break;\r\n      case 10:\r\n        setComponent(<DisplayPackageCustomer />);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      {/*  className={classes.root} */}\r\n      {/* <CssBaseline /> */}\r\n      <div class=\"sidebar\">\r\n        <div class=\"logopanel\">\r\n          <h1>\r\n            <img src=\"/images/logo.png\" style={{ width: \"100%\" }} />\r\n          </h1>\r\n        </div>\r\n        <div class=\"sidebar-inner\">\r\n          <div class=\"sidebar-top big-img\">\r\n            <div class=\"user-image\">\r\n              <img\r\n                src=\"/images/admin.png\"\r\n                class=\"img-responsive img-circle\"\r\n                alt=\"friend 8\"\r\n              />\r\n            </div>\r\n            <h4>Admin</h4>\r\n            <div class=\"dropdown user-login\">\r\n              <button\r\n                class=\"btn btn-xs dropdown-toggle btn-rounded\"\r\n                type=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                data-hover=\"dropdown\"\r\n                data-close-others=\"true\"\r\n                data-delay=\"300\"\r\n              >\r\n                <i class=\"online\"></i>\r\n                <span>Available</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <div class=\"menu-title\">\r\n            Navigation\r\n            <div class=\"pull-right menu-settings\">\r\n              <a\r\n                href=\"#\"\r\n                class=\"dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                data-hover=\"dropdown\"\r\n                data-close-others=\"true\"\r\n                data-delay=\"300\"\r\n              >\r\n                <i class=\"icon-settings\"></i>\r\n              </a>\r\n              <ul class=\"dropdown-menu\">\r\n                <li>\r\n                  <a href=\"#\" id=\"reorder-menu\" class=\"reorder-menu\">\r\n                    Reorder menu\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" id=\"remove-menu\" class=\"remove-menu\">\r\n                    Remove elements\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" id=\"hide-top-sidebar\" class=\"hide-top-sidebar\">\r\n                    Hide / show user image\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div> */}\r\n          <ul class=\"nav nav-sidebar\">\r\n            <br />\r\n            <List style={{ color: \"#fff\" }}>\r\n              <ListItems\r\n                style={{ color: \"#fff\" }}\r\n                handleComponents={handleComponents}\r\n              />\r\n            </List>\r\n            {/* <li>\r\n              <a href=\"#\">\r\n                <i class=\"icon-home\"></i>\r\n                <span>Dashboard</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-parent\">\r\n              <a href=\"#\">\r\n                <i class=\"icon-puzzle\"></i>\r\n                <span>Package</span> <span class=\"fa arrow\"></span>\r\n              </a>\r\n              <ul class=\"children collapse\">\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Package Interface\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Display All Packages\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"nav-parent\">\r\n              <a href=\"#\">\r\n                <i class=\"icon-puzzle\"></i>\r\n                <span>Features Packages</span> <span class=\"fa arrow\"></span>\r\n              </a>\r\n              <ul class=\"children collapse\">\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Features Packages\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Display All Features Packages\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"nav-parent\">\r\n              <a href=\"#\">\r\n                <i class=\"icon-puzzle\"></i>\r\n                <span>Vendors</span> <span class=\"fa arrow\"></span>\r\n              </a>\r\n              <ul class=\"children collapse\">\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Vendors\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a target=\"_blank\" href=\"#\">\r\n                    Display All Vendors\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div class=\"sidebar-footer clearfix\">\r\n            <a\r\n              style={{ width: \"100%\" }}\r\n              class=\"pull-left btn-effect\"\r\n              href=\"AdminSignIn\"\r\n              data-modal=\"modal-1\"\r\n              data-rel=\"tooltip\"\r\n              data-placement=\"top\"\r\n              data-original-title=\"Logout\"\r\n            >\r\n              <i class=\"icon-power\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"main-content\">\r\n        <div class=\"topbar\">\r\n          <div class=\"header-left\">\r\n            <div class=\"topnav\">\r\n              <a class=\"menutoggle\" href=\"#\" data-toggle=\"sidebar-collapsed\">\r\n                <span class=\"menu__handle\">\r\n                  <span>Menu</span>\r\n                </span>\r\n              </a>\r\n              <ul class=\"nav nav-icons\">\r\n                <li>\r\n                  <a href=\"#\" class=\"toggle-sidebar-top\">\r\n                    <span class=\"icon-user-following\"></span>\r\n                  </a>\r\n                </li>\r\n                {/* <li>\r\n                  <a href=\"mailbox.html\">\r\n                    <span class=\"octicon octicon-mail-read\"></span>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <span class=\"octicon octicon-flame\"></span>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"builder-page.html\">\r\n                    <span class=\"octicon octicon-rocket\"></span>\r\n                  </a>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"header-right\">\r\n            <ul class=\"header-menu nav navbar-nav\">\r\n              {/* BEGIN USER DROPDOWN */}\r\n              <li class=\"dropdown\" id=\"user-header\">\r\n                <a\r\n                  href=\"#\"\r\n                  data-toggle=\"dropdown\"\r\n                  data-hover=\"dropdown\"\r\n                  data-close-others=\"true\"\r\n                >\r\n                  <img src=\"/images/admin.png\" alt=\"user image\" />\r\n                  <span class=\"username\">Hi, Admin</span>\r\n                </a>\r\n                <ul class=\"dropdown-menu\">\r\n                  {/* <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"icon-user\"></i>\r\n                      <span>My Profile</span>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"icon-calendar\"></i>\r\n                      <span>My Calendar</span>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"icon-settings\"></i>\r\n                      <span>Account Settings</span>\r\n                    </a>\r\n                  </li> */}\r\n                  <li>\r\n                    <a href=\"AdminSignIn\">\r\n                      <i class=\"icon-logout\"></i>\r\n                      <span>Logout</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              {/* END USER DROPDOWN */}\r\n              {/* CHAT BAR ICON */}\r\n              {/* <li id=\"quickview-toggle\">\r\n                <a href=\"#\">\r\n                  <i class=\"icon-bubbles\"></i>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n          {/* header-right */}\r\n        </div>\r\n        {/* END TOPBAR */}\r\n        {/* BEGIN PAGE CONTENT */}\r\n        <div class=\"page-content\">\r\n          <div class=\"header\">\r\n            <div class=\"col-md-12\">{ShowComponent}</div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\" style={{ height: \"720px\" }}>\r\n              {/* HERE COMES YOUR CONTENT */}\r\n            </div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            <div class=\"copyright\">\r\n              <p class=\"pull-left sm-pull-reset\">\r\n                {/* <span>\r\n                  Copyright <span class=\"copyright\">©</span> 2016{\" \"}\r\n                </span>\r\n                <span>THEMES LAB</span>.<span>All rights reserved. </span> */}\r\n              </p>\r\n              <p class=\"pull-right sm-pull-reset\">\r\n                {/* <span>\r\n                  <a href=\"#\" class=\"m-r-10\">\r\n                    Support\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10 m-r-10\">\r\n                    Terms of use\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10\">\r\n                    Privacy Policy\r\n                  </a>\r\n                </span> */}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* END PAGE CONTENT */}\r\n      </div>\r\n      {/* END MAIN CONTENT */}\r\n      {/* BEGIN BUILDER */}\r\n      {/* <div class=\"builder hidden-sm hidden-xs\" id=\"builder\">\r\n        <a class=\"builder-toggle\">\r\n          <i class=\"icon-wrench\"></i>\r\n        </a>\r\n        <div class=\"inner\">\r\n          <div class=\"builder-container\">\r\n            <a href=\"#\" class=\"btn btn-sm btn-default\" id=\"reset-style\">\r\n              reset default style\r\n            </a>\r\n            <h4>Layout options</h4>\r\n            <div class=\"layout-option\">\r\n              <span> Fixed Sidebar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar\"\r\n                  id=\"switch-sidebar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Sidebar on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar-hover\"\r\n                  id=\"switch-sidebar-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Submenu on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"submenu-hover\"\r\n                  id=\"switch-submenu-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Fixed Topbar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"topbar\"\r\n                  id=\"switch-topbar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Boxed Layout</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"boxed\"\r\n                  id=\"switch-boxed\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <h4 class=\"border-top\">Color</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"theme-color bg-dark\"\r\n                  data-main=\"default\"\r\n                  data-color=\"#2B2E33\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color background-primary\"\r\n                  data-main=\"primary\"\r\n                  data-color=\"#319DB5\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-red\"\r\n                  data-main=\"red\"\r\n                  data-color=\"#C75757\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-green\"\r\n                  data-main=\"green\"\r\n                  data-color=\"#1DA079\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-orange\"\r\n                  data-main=\"orange\"\r\n                  data-color=\"#D28857\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-purple\"\r\n                  data-main=\"purple\"\r\n                  data-color=\"#B179D7\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-blue\"\r\n                  data-main=\"blue\"\r\n                  data-color=\"#4A89DC\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Theme</h4>\r\n            <div class=\"row row-sm\">\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtl\" data-theme=\"sdtl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltd\" data-theme=\"sltd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtd\" data-theme=\"sdtd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltl\" data-theme=\"sltl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Background</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"bg-color bg-clean\"\r\n                  data-bg=\"clean\"\r\n                  data-color=\"#F8F8F8\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-lighter\"\r\n                  data-bg=\"lighter\"\r\n                  data-color=\"#EFEFEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-default\"\r\n                  data-bg=\"light-default\"\r\n                  data-color=\"#E9E9E9\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-blue\"\r\n                  data-bg=\"light-blue\"\r\n                  data-color=\"#E2EBEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-purple\"\r\n                  data-bg=\"light-purple\"\r\n                  data-color=\"#E9ECF5\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-dark\"\r\n                  data-bg=\"light-dark\"\r\n                  data-color=\"#DCE1E4\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* </div> */}\r\n      {/* END BUILDER */}\r\n      {/* </section> */}\r\n\r\n      {/* BEGIN SEARCH */}\r\n      <div id=\"morphsearch\" class=\"morphsearch\">\r\n        {/* <form class=\"morphsearch-form\">\r\n          <input\r\n            class=\"morphsearch-input\"\r\n            type=\"search\"\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button class=\"morphsearch-submit\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form> */}\r\n        <div class=\"morphsearch-content withScroll\">\r\n          {/* <div class=\"dummy-column user-column\">\r\n            <h2>Users</h2>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar1_big.png\"\r\n                alt=\"Avatar 1\"\r\n              />\r\n              <h3>John Smith</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar2_big.png\"\r\n                alt=\"Avatar 2\"\r\n              />\r\n              <h3>Bod Dylan</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar3_big.png\"\r\n                alt=\"Avatar 3\"\r\n              />\r\n              <h3>Jenny Finlan</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar4_big.png\"\r\n                alt=\"Avatar 4\"\r\n              />\r\n              <h3>Harold Fox</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar5_big.png\"\r\n                alt=\"Avatar 5\"\r\n              />\r\n              <h3>Martin Hendrix</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img\r\n                src=\"../assets/global/images/avatars/avatar6_big.png\"\r\n                alt=\"Avatar 6\"\r\n              />\r\n              <h3>Paul Ferguson</h3>\r\n            </a>\r\n          </div> */}\r\n          {/* <div class=\"dummy-column\">\r\n            <h2>Articles</h2>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/1.jpg\" alt=\"1\" />\r\n              <h3>How to change webdesign?</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/2.jpg\" alt=\"2\" />\r\n              <h3>News From the sky</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/3.jpg\" alt=\"3\" />\r\n              <h3>Where is the cat?</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/4.jpg\" alt=\"4\" />\r\n              <h3>Just another funny story</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/5.jpg\" alt=\"5\" />\r\n              <h3>How many water we drink every day?</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/6.jpg\" alt=\"6\" />\r\n              <h3>Drag and drop tutorials</h3>\r\n            </a>\r\n          </div>\r\n          <div class=\"dummy-column\">\r\n            <h2>Recent</h2>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/7.jpg\" alt=\"7\" />\r\n              <h3>Design Inspiration</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/8.jpg\" alt=\"8\" />\r\n              <h3>Animals drawing</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/9.jpg\" alt=\"9\" />\r\n              <h3>Cup of tea please</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/10.jpg\" alt=\"10\" />\r\n              <h3>New application arrive</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/11.jpg\" alt=\"11\" />\r\n              <h3>Notification prettify</h3>\r\n            </a>\r\n            <a class=\"dummy-media-object\" href=\"#\">\r\n              <img src=\"../assets/global/images/gallery/12.jpg\" alt=\"12\" />\r\n              <h3>My article is the last recent</h3>\r\n            </a>\r\n          </div> */}\r\n        </div>\r\n        {/* /morphsearch-content */}\r\n        <span class=\"morphsearch-close\"></span>\r\n      </div>\r\n      {/* END QUICKVIEW SIDEBAR */}\r\n      {/* BEGIN PRELOADER */}\r\n      {/* <div class=\"loader-overlay\">\r\n        <div class=\"spinner\">\r\n          <div class=\"bounce1\"></div>\r\n          <div class=\"bounce2\"></div>\r\n          <div class=\"bounce3\"></div>\r\n        </div>\r\n      </div> */}\r\n      {/* END PRELOADER */}\r\n      {/* <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            <div>Admin Id : {admin.adminid}</div>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n        <img src=\"/images/logo.png\" width='150'/>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><ListItems handleComponents={handleComponents} /></List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {ShowComponent}\r\n                 </Container>\r\n      </main> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\shift\\Shifts.js",["700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n\r\n  root2: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Shifts(props) {\r\n  const classes = useStyles();\r\n\r\n  const [getShiftId, setShiftId] = useState(\"\");\r\n  const [getShiftName, setShiftName] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [selectedShiftStartTime, setSelectedShiftStartTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedShiftEndTime, setSelectedShiftEndTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrDayOff, setErrDayOff] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [\r\n    ErrselectedShiftStartTime,\r\n    setErrSelectedShiftStartTime,\r\n  ] = React.useState(new Date());\r\n  const [ErrselectedShiftEndTime, setErrSelectedShiftEndTime] = React.useState(\r\n    new Date()\r\n  );\r\n\r\n  const handleVendorId = () => {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n  };\r\n  useEffect(function () {\r\n    handleVendorId();\r\n  });\r\n  const handleSubmit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getVendorId)) {\r\n      err = true;\r\n      setErrVendorId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorId)) {\r\n      setErrVendorId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedShiftStartTime)) {\r\n      err = true;\r\n      setErrSelectedShiftStartTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedShiftStartTime)) {\r\n      setErrSelectedShiftStartTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedShiftEndTime)) {\r\n      err = true;\r\n      setErrSelectedShiftEndTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedShiftEndTime)) {\r\n      setErrSelectedShiftEndTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (\r\n      checkedMondayValue == \"\" &&\r\n      checkedTuesdayValue == \"\" &&\r\n      checkedWednesdayValue == \"\" &&\r\n      checkedThursdayValue == \"\" &&\r\n      checkedFridayValue == \"\" &&\r\n      checkedSaturdayValue == \"\" &&\r\n      checkedSundayValue == \"\"\r\n    ) {\r\n      err = true;\r\n      setErrDayOff(\"/images/cross.png\");\r\n    } else {\r\n      setErrDayOff(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var days = \"\";\r\n      if (checkedMondayValue != \"\") {\r\n        days += checkedMondayValue + \", \";\r\n      }\r\n      if (checkedTuesdayValue != \"\") {\r\n        days += checkedTuesdayValue + \", \";\r\n      }\r\n      if (checkedWednesdayValue != \"\") {\r\n        days += checkedWednesdayValue + \", \";\r\n      }\r\n      if (checkedThursdayValue != \"\") {\r\n        days += checkedThursdayValue + \", \";\r\n      }\r\n      if (checkedFridayValue != \"\") {\r\n        days += checkedFridayValue + \", \";\r\n      }\r\n      if (checkedSaturdayValue != \"\") {\r\n        days += checkedSaturdayValue + \", \";\r\n      }\r\n      if (checkedSundayValue != \"\") {\r\n        days += checkedSundayValue + \", \";\r\n      }\r\n\r\n      let body = {\r\n        vendorid: getVendorId,\r\n        shiftstarttime: selectedShiftStartTime,\r\n        shiftendtime: selectedShiftEndTime,\r\n        dayoff: days,\r\n        shiftname: getShiftName,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"shifts/addnewrecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setShiftName(\"\");\r\n    setSelectedShiftStartTime(new Date());\r\n    setSelectedShiftEndTime(new Date());\r\n    setMsg(\"\");\r\n    setErrVendorId(\"\");\r\n    setErrDayOff(\"\");\r\n    setErrSelectedShiftStartTime(\"\");\r\n    setErrSelectedShiftEndTime(\"\");\r\n    setCheckedMonday(false);\r\n    setCheckedMondayValue(\"\");\r\n    setCheckedTuesday(false);\r\n    setCheckedTuesdayValue(\"\");\r\n    setCheckedWednesday(false);\r\n    setCheckedWednesdayValue(\"\");\r\n    setCheckedThursday(false);\r\n    setCheckedThursdayValue(\"\");\r\n    setCheckedFriday(false);\r\n    setCheckedFridayValue(\"\");\r\n    setCheckedSaturday(false);\r\n    setCheckedSaturdayValue(\"\");\r\n    setCheckedSunday(false);\r\n    setCheckedSundayValue(\"\");\r\n  };\r\n\r\n  const handleShiftStartTimeChange = (time) => {\r\n    setSelectedShiftStartTime(time);\r\n  };\r\n  const handleShiftEndTimeChange = (time) => {\r\n    setSelectedShiftEndTime(time);\r\n  };\r\n\r\n  const [checkedMonday, setCheckedMonday] = React.useState(false);\r\n  const [checkedTuesday, setCheckedTuesday] = React.useState(false);\r\n  const [checkedWednesday, setCheckedWednesday] = React.useState(false);\r\n  const [checkedThursday, setCheckedThursday] = React.useState(false);\r\n  const [checkedFriday, setCheckedFriday] = React.useState(false);\r\n  const [checkedSaturday, setCheckedSaturday] = React.useState(false);\r\n  const [checkedSunday, setCheckedSunday] = React.useState(false);\r\n  const [checkedMondayValue, setCheckedMondayValue] = React.useState(\"\");\r\n  const [checkedTuesdayValue, setCheckedTuesdayValue] = React.useState(\"\");\r\n  const [checkedWednesdayValue, setCheckedWednesdayValue] = React.useState(\"\");\r\n  const [checkedThursdayValue, setCheckedThursdayValue] = React.useState(\"\");\r\n  const [checkedFridayValue, setCheckedFridayValue] = React.useState(\"\");\r\n  const [checkedSaturdayValue, setCheckedSaturdayValue] = React.useState(\"\");\r\n  const [checkedSundayValue, setCheckedSundayValue] = React.useState(\"\");\r\n\r\n  const handleChangeMonday = (event) => {\r\n    setCheckedMonday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedMondayValue(\"Monday\");\r\n    } else {\r\n      setCheckedMondayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeTuesday = (event) => {\r\n    setCheckedTuesday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedTuesdayValue(\"Tuesday\");\r\n    } else {\r\n      setCheckedTuesdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeWednesday = (event) => {\r\n    setCheckedWednesday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedWednesdayValue(\"Wednesday\");\r\n    } else {\r\n      setCheckedWednesdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeThursday = (event) => {\r\n    setCheckedThursday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedThursdayValue(\"Thursday\");\r\n    } else {\r\n      setCheckedThursdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeFriday = (event) => {\r\n    setCheckedFriday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedFridayValue(\"Friday\");\r\n    } else {\r\n      setCheckedFridayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeSaturday = (event) => {\r\n    setCheckedSaturday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedSaturdayValue(\"Saturday\");\r\n    } else {\r\n      setCheckedSaturdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeSunday = (event) => {\r\n    setCheckedSunday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedSundayValue(\"Sunday\");\r\n    } else {\r\n      setCheckedSundayValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Shifts</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form role=\"form\" class=\"form-validation\" novalidate=\"novalidate\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Vendor Id</label>\r\n                      <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Vendor Id\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getVendorId}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Shift Name</label>\r\n                      {/* <img src={getErrVendorId} width=\"10\" height=\"10\" /> */}\r\n                      <div class=\"append-icon\">\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          minlength=\"3\"\r\n                          placeholder=\"Shift Name\"\r\n                          required=\"\"\r\n                          aria-required=\"true\"\r\n                          value={getShiftName}\r\n                          onChange={(event) => {\r\n                            setShiftName(event.target.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Shift Start Time</label>\r\n                      <img\r\n                        src={ErrselectedShiftStartTime}\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                      />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardTimePicker\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            id=\"time-picker\"\r\n                            // label=\"Shift Start Time\"\r\n                            value={selectedShiftStartTime}\r\n                            onChange={handleShiftStartTimeChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change time\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Shift End Time</label>\r\n                      <img\r\n                        src={ErrselectedShiftEndTime}\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                      />\r\n                      <div class=\"append-icon\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardTimePicker\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            id=\"time-picker\"\r\n                            // label=\"Shift End Time\"\r\n                            value={selectedShiftEndTime}\r\n                            onChange={handleShiftEndTimeChange}\r\n                            KeyboardButtonProps={{\r\n                              \"aria-label\": \"change time\",\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"\">\r\n                  <div class=\"col-sm-12\">\r\n                    <h3>\r\n                      <b>Days Off</b>{\" \"}\r\n                      <img src={getErrDayOff} width=\"10\" height=\"10\" />\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Monday</label>\r\n\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedMonday}\r\n                        onChange={handleChangeMonday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Tuesday</label>\r\n\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedTuesday}\r\n                        onChange={handleChangeTuesday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Wednesday</label>\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedWednesday}\r\n                        onChange={handleChangeWednesday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Thursday</label>\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedThursday}\r\n                        onChange={handleChangeThursday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Friday</label>\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedFriday}\r\n                        onChange={handleChangeFriday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Saturday</label>\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedSaturday}\r\n                        onChange={handleChangeSaturday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-2\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Sunday</label>\r\n                      {/* <div class=\"append-icon\"> */}\r\n                      <Checkbox\r\n                        checked={checkedSunday}\r\n                        onChange={handleChangeSunday}\r\n                        className={classes.root2}\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={\r\n                          <span\r\n                            className={clsx(classes.icon, classes.checkedIcon)}\r\n                          />\r\n                        }\r\n                        icon={<span className={classes.icon} />}\r\n                        inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n                        {...props}\r\n                      />\r\n                      {/* </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    type=\"submit\"\r\n                    // class=\"btn btn-embossed btn-primary\"\r\n                    onClick={() => handleSubmit()}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    // class=\"cancel btn btn-embossed btn-default m-b-10 m-r-0\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                {getMsg}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Paper elevation={1} className={classes.headingstyle}>\r\n       <Typography variant=\"h6\" gutterBottom>\r\n       <b>&nbsp;&nbsp;&nbsp;&nbsp;Add Shifts </b>     \r\n       </Typography>\r\n    </Paper>\r\n\r\n    <Grid container spacing={2} >\r\n      \r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={getErrVendorId} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Vendor Id\"  fullWidth variant=\"standard\" value={getVendorId} />\r\n        </Grid> \r\n      \r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedShiftStartTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Shift Start Time\"\r\n          value={selectedShiftStartTime}\r\n          onChange={handleShiftStartTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedShiftEndTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Shift End Time\"\r\n          value={selectedShiftEndTime}\r\n          onChange={handleShiftEndTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n       <Grid item xs={12}>            \r\n        <h3 style={{paddingLeft:'8px'}}>\r\n        <img src={getErrDayOff} width='10' height='10' />&nbsp;\r\n        Days Off</h3>\r\n       </Grid>\r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n      Monday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedMonday}\r\n       onChange={handleChangeMonday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n      Tuesday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedTuesday}\r\n       onChange={handleChangeTuesday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Wednesday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedWednesday}\r\n       onChange={handleChangeWednesday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n       Thursday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedThursday}\r\n       onChange={handleChangeThursday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Friday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedFriday}\r\n       onChange={handleChangeFriday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n       Saturday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedSaturday}\r\n       onChange={handleChangeSaturday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Sunday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedSunday}\r\n       onChange={handleChangeSunday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={6} className={classes.container}>\r\n       \r\n      </Grid> \r\n        \r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()} >\r\n         Submit\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()} >\r\n         Reset\r\n        </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} >\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n  </Grid>\r\n</Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Shifts;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\assignshift\\DisplayAllAssignShift.js",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nfunction DisplayAllAssignShift() {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Assign Shift Id\", field: \"assignshiftid\", editable: \"never\" },\r\n      { title: \"Shift Id\", field: \"shiftid\", editable: \"never\" },\r\n      {\r\n        title: \"Assign Date\",\r\n        field: \"assigndate\",\r\n        render: (rowData) => <div>{displayDate(rowData.assigndate)}</div>,\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        field: \"enddate\",\r\n        render: (rowData) => <div>{displayDate(rowData.enddate)}</div>,\r\n      },\r\n      { title: \"No Of Days\", field: \"noofdays\", editable: \"never\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getShiftList, setShiftList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n\r\n  const [getAssignShiftId, setAssignShiftId] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getShiftId, setShiftId] = useState(\"\");\r\n  const [selectedAssignDate, setSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  const [getNoOfDays, setNoOfDays] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getErrEmployeeId, setErrEmployeeId] = useState(\"\");\r\n  const [getErrShiftId, setErrShiftId] = useState(\"\");\r\n  const [ErrselectedAssignDate, setErrSelectedAssignDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [ErrselectedEndDate, setErrSelectedEndDate] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getErrNoOfDays, setErrNoOfDays] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getEmployeesList, setEmployeesList] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    let list = await getData(\"assignshift/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n    fetchAllShift();\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    var list = await getData(\"employees/displayall\");\r\n    setEmployeesList(list.data);\r\n  };\r\n\r\n  const fillEmployees = () => {\r\n    return getEmployeesList.map(function (item, key) {\r\n      return (\r\n        <MenuItem value={item.employeeid}>\r\n          {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { assignshiftid: oldData.assignshiftid };\r\n    await postData(\"assignshift/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    fetchShiftInEditform(rowData.assignshiftid);\r\n    setAssignShiftId(rowData.assignshiftid);\r\n    setVendorId(rowData.vendorid);\r\n    setEmployeeId(rowData.employeeid);\r\n    setShiftId(rowData.shiftid);\r\n    setSelectedAssignDate(rowData.assigndate);\r\n    setSelectedEndDate(rowData.enddate);\r\n    setNoOfDays(rowData.noofdays);\r\n    setStatus(rowData.status);\r\n  };\r\n\r\n  const fetchShiftInEditform = async (assignshiftid) => {\r\n    var body = { assigntshiftid: assignshiftid };\r\n    //console.log(brandid)\r\n    var list = await postData(\"assignshift/displayShiftInEditform\", body);\r\n    console.log(\"nidhi\", list);\r\n    //setShiftId(list[0].shiftid)\r\n  };\r\n\r\n  const fetchAllShift = async () => {\r\n    var list = await getData(\"shifts/displayall\");\r\n    setShiftList(list.data);\r\n  };\r\n\r\n  const handleShiftChange = (event) => {\r\n    setShiftId(event.target.value);\r\n  };\r\n\r\n  const fillShiftItem = () => {\r\n    return getShiftList.map(function (item, key) {\r\n      let st = new Date(item.shiftstarttime);\r\n      var hs = st.getHours();\r\n      var ms = st.getMinutes();\r\n      var start = hs > 12 ? hs - 12 + \":\" + ms + \" PM\" : hs + \":\" + ms + \" AM\";\r\n      let et = new Date(item.shiftendtime);\r\n      var he = et.getHours();\r\n      var me = et.getMinutes();\r\n      var end = he > 12 ? he - 12 + \":\" + me + \" PM\" : he + \":\" + me + \" AM\";\r\n      return (\r\n        <MenuItem value={item.shiftid}>\r\n          {start}&nbsp;to&nbsp;{end}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n    setMsg(\"\");\r\n    setErrVendorId(\"\");\r\n    setErrEmployeeId(\"\");\r\n    setErrShiftId(\"\");\r\n    setErrSelectedAssignDate(new Date());\r\n    setErrSelectedEndDate(new Date());\r\n    setErrStatus(\"\");\r\n    setErrNoOfDays(\"\");\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n\r\n    if (!checkRequire(getEmployeeId)) {\r\n      err = true;\r\n      setErrEmployeeId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeId)) {\r\n      setErrEmployeeId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getShiftId)) {\r\n      err = true;\r\n      setErrShiftId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getShiftId)) {\r\n      setErrShiftId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedAssignDate)) {\r\n      err = true;\r\n      setErrSelectedAssignDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedAssignDate)) {\r\n      setErrSelectedAssignDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedEndDate)) {\r\n      err = true;\r\n      setErrSelectedEndDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedEndDate)) {\r\n      setErrSelectedEndDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getNoOfDays)) {\r\n      err = true;\r\n      setErrNoOfDays(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getNoOfDays)) {\r\n      setErrNoOfDays(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        assignshiftid: getAssignShiftId,\r\n        vendorid: getVendorId,\r\n        employeeid: getEmployeeId,\r\n        shiftid: getShiftId,\r\n        assigndate: selectedAssignDate,\r\n        enddate: selectedEndDate,\r\n        noofdays: getNoOfDays,\r\n        status: getStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"assignshift/editRecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Edited ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const handleAssignDateChange = (date) => {\r\n    setSelectedAssignDate(date);\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setSelectedEndDate(date);\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Assign Shift Edit\"}\r\n          </DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n              <div class=\"panel-header bg-dark\" style={{ padding: 10 }}>\r\n                <h3 class=\"panel-title\">\r\n                  <strong>Assign Shift </strong> Edit\r\n                </h3>\r\n              </div>\r\n              <div class=\"panel-body bg-white\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 \">\r\n                    {/* <form class=\"form-validation\"> */}\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Assign Shift Id</label>\r\n                          <i class=\"fa fa-check\"></i>\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Assign Shift Id\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getAssignShiftId}\r\n                            />\r\n                            <i class=\"fa fa-edit \"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Vendor Id</label>\r\n                          <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"Vendor Id\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getVendorId}\r\n                            />\r\n                            <i class=\"fa fa-edit \"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">No of Days</label>\r\n                          <img src={getErrNoOfDays} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              minlength=\"3\"\r\n                              placeholder=\"No of Days\"\r\n                              required=\"\"\r\n                              aria-required=\"true\"\r\n                              value={getNoOfDays}\r\n                              onChange={(event) =>\r\n                                setNoOfDays(event.target.value)\r\n                              }\r\n                            />\r\n                            <i class=\"fa fa-edit \"></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Employee</label>\r\n                          <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={getEmployeeId}\r\n                              onChange={(event) =>\r\n                                setEmployeeId(event.target.value)\r\n                              }\r\n                            >\r\n                              {fillEmployees()}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Shifts</label>\r\n                          <img src={getErrShiftId} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={getShiftId}\r\n                              fullWidth=\"true\"\r\n                              onChange={(event) => handleShiftChange(event)}\r\n                            >\r\n                              {fillShiftItem()}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Assign Date</label>\r\n                          <img\r\n                            src={ErrselectedAssignDate}\r\n                            width=\"10\"\r\n                            height=\"10\"\r\n                          />\r\n                          <div class=\"append-icon\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <KeyboardDatePicker\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                label=\"Assign Date\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                fullWidth=\"true\"\r\n                                value={selectedAssignDate}\r\n                                onChange={handleAssignDateChange}\r\n                                KeyboardButtonProps={{\r\n                                  \"aria-label\": \"change date\",\r\n                                }}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">End Date</label>\r\n                          <img\r\n                            src={ErrselectedEndDate}\r\n                            width=\"10\"\r\n                            height=\"10\"\r\n                          />\r\n                          <div class=\"append-icon\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <KeyboardDatePicker\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-dialog\"\r\n                                label=\"End Date\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                fullWidth=\"true\"\r\n                                value={selectedEndDate}\r\n                                onChange={handleEndDateChange}\r\n                                KeyboardButtonProps={{\r\n                                  \"aria-label\": \"change date\",\r\n                                }}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <label class=\"control-label\">Status</label>\r\n                          <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                          <div class=\"append-icon\">\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-outlined-label\"\r\n                              id=\"demo-simple-select-outlined\"\r\n                              value={getStatus}\r\n                              onChange={(event) => {\r\n                                setStatus(event.target.value);\r\n                              }}\r\n                              label=\"Status\"\r\n                            >\r\n                              <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                              <MenuItem value={\"No\"}>No</MenuItem>\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"text-center  m-t-20\">\r\n                      <button\r\n                        className=\"btn btn-success btn-transparent\"\r\n                        type=\"submit\"\r\n                        onClick={() => handleEdit()}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                    {getMsg}\r\n                    {/* </form> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <Paper className={classes.paperstyle}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} className={classes.gridStyle}>\r\n                  <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Assign Shift Id\"\r\n                    fullWidth\r\n                    value={getAssignShiftId}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Vendor Id\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={getVendorId}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrEmployeeId} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Employee\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getEmployeeId}\r\n                      onChange={(event) => setEmployeeId(event.target.value)}\r\n                    >\r\n                      {fillEmployees()}\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrShiftId} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Shifts\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getShiftId}\r\n                      fullWidth=\"true\"\r\n                      onChange={(event) => handleShiftChange(event)}\r\n                    >\r\n                      {fillShiftItem()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={getErrNoOfDays} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"No of Days\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    value={getNoOfDays}\r\n                    onChange={(event) => {\r\n                      setNoOfDays(event.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={ErrselectedAssignDate} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Assign Date\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      fullWidth=\"true\"\r\n                      value={selectedAssignDate}\r\n                      onChange={handleAssignDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.gridStyle}>\r\n                  <img src={ErrselectedEndDate} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"End Date\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      fullWidth=\"true\"\r\n                      value={selectedEndDate}\r\n                      onChange={handleEndDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className={classes.gridStyle}>\r\n                  <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Status\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={getStatus}\r\n                      onChange={(event) => {\r\n                        setStatus(event.target.value);\r\n                      }}\r\n                      label=\"Status\"\r\n                    >\r\n                      <MenuItem value={\"Yes\"}>Yes</MenuItem>\r\n                      <MenuItem value={\"No\"}>No</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => handleEdit()}\r\n                  >\r\n                    Save Record\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Assign Shift List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllAssignShift;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\employees\\DisplayAllEmployees.js",["752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { checkRequire, checkMobile, checkEmail } from \"../Checks\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { statecity } from \"../statecity/StateCity\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.95,\r\n  },\r\n  avatortheme: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: window.innerWidth * 0.45,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  avatortheme: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 220,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllOutlets() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeId, setEmployeeId] = useState(\"\");\r\n  const [getEmployeeName, setEmployeeName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getMobile, setMobile] = useState(\"\");\r\n  const [getAddress, setAddress] = useState(\"\");\r\n  const [getState, setState] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getDesignation, setDesignation] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getPhoto, setPhoto] = useState({ photo: \"\", file: \"\" });\r\n  const [getJoinDate, setJoinDate] = useState(new Date());\r\n  const [getDOB, setDOB] = useState(new Date());\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrEmployeeName, setErrEmployeeName] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrJoinDate, setErrJoinDate] = useState(\"\");\r\n  const [getErrDOB, setErrDOB] = useState(\"\");\r\n  const [getErrMob, setErrMob] = useState(\"\");\r\n  const [getErrDes, setErrDes] = useState(\"\");\r\n  const [getErrAddress, setErrAddress] = useState(\"\");\r\n  const [getErrState, setErrState] = useState(\"\");\r\n  const [getErrCity, setErrCity] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getErrPhoto, setErrPhoto] = useState(\"\");\r\n  const [getStateList, setStateList] = useState([]);\r\n  const [getCityList, setCityList] = useState([]);\r\n\r\n  const [state, setstate] = useState({\r\n    columns: [\r\n      { title: \"Id\", field: \"employeeid\" },\r\n      { title: \"Employee Name\", field: \"employeename\" },\r\n      {\r\n        title: \"Joining date\",\r\n        render: (rowData) => <div>{displayDate(rowData.joiningdate)}</div>,\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        render: (rowData) => (\r\n          <div>\r\n            {rowData.address}\r\n            <br />\r\n            {rowData.city},{rowData.state}\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Contact Details\",\r\n        render: (rowData) => (\r\n          <div>\r\n            {rowData.mobileno}\r\n            <br />\r\n            {rowData.email}\r\n          </div>\r\n        ),\r\n      },\r\n      { title: \"Designation\", field: \"designation\" },\r\n      {\r\n        title: \"Photograph\",\r\n        field: \"photograph\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.photograph}`}\r\n              className={classes.avatortheme}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n  });\r\n\r\n  const displayDate = (date) => {\r\n    let d = new Date(date);\r\n    let cd = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return cd;\r\n  };\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    var list = await postData(\"employees/displayall\", body);\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const fetchStates = async () => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      list[key] = item.state;\r\n    });\r\n    setStateList(list);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const fillStates = () => {\r\n    return getStateList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleState = (event) => {\r\n    var state = event.target.value;\r\n    setState(state);\r\n    fetchCity(state);\r\n  };\r\n\r\n  const fetchCity = async (selectstate) => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      if (item.state == selectstate) {\r\n        item.districts.map(function (data, key) {\r\n          list[key] = data;\r\n        });\r\n      }\r\n    });\r\n    setCityList(list);\r\n  };\r\n\r\n  const fillCities = () => {\r\n    return getCityList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    var body = { employeeid: oldData.employeeid };\r\n    var result = await postData(\"employees/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = (rowData) => {\r\n    setOpen(true);\r\n    fetchCity(rowData.state);\r\n    setEmployeeId(rowData.employeeid);\r\n    setEmployeeName(rowData.employeename);\r\n    setJoinDate(rowData.joiningdate);\r\n    setMobile(rowData.mobileno);\r\n    setAddress(rowData.address);\r\n    setState(rowData.state);\r\n    setCity(rowData.city);\r\n    setPhoto({ photo: \"\", file: `${ServerURL}/images/${rowData.photograph}` });\r\n    setEmail(rowData.email);\r\n    setDesignation(rowData.designation);\r\n    setDOB(rowData.dateofbirth);\r\n    setStatus(rowData.status);\r\n    setVendorId(rowData.vendorid);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setErrEmployeeName(\"\");\r\n    setErrDes(\"\");\r\n    setErrMob(\"\");\r\n    setErrPhoto(\"\");\r\n    setErrJoinDate(\"\");\r\n    setErrDOB(\"\");\r\n    setErrStatus(\"\");\r\n    setErrState(\"\");\r\n    setErrCity(\"\");\r\n    setErrEmail(\"\");\r\n    setErrAddress(\"\");\r\n    setMsg(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    var err = false;\r\n    if (!checkRequire(getEmployeeName)) {\r\n      err = true;\r\n      setErrEmployeeName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeName)) {\r\n      setErrEmployeeName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDesignation)) {\r\n      err = true;\r\n      setErrDes(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDesignation)) {\r\n      setErrDes(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkMobile(getMobile)) {\r\n      err = true;\r\n      setErrMob(\"/images/cross.png\");\r\n    }\r\n    if (checkMobile(getMobile)) {\r\n      setErrMob(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getAddress)) {\r\n      err = true;\r\n      setErrAddress(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAddress)) {\r\n      setErrAddress(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getState)) {\r\n      err = true;\r\n      setErrState(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getState)) {\r\n      setErrState(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCity)) {\r\n      err = true;\r\n      setErrCity(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCity)) {\r\n      setErrCity(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getJoinDate)) {\r\n      err = true;\r\n      setErrJoinDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getJoinDate)) {\r\n      setErrJoinDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDOB)) {\r\n      err = true;\r\n      setErrDOB(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDOB)) {\r\n      setErrDOB(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkEmail(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n    if (!err) {\r\n      var formData = new FormData();\r\n      formData.append(\"employeename\", getEmployeeName);\r\n      formData.append(\"vendorid\", getVendorId);\r\n      formData.append(\"mobileno\", getMobile);\r\n      formData.append(\"address\", getAddress);\r\n      formData.append(\"state\", getState);\r\n      formData.append(\"city\", getCity);\r\n      formData.append(\"photo\", getPhoto.photo);\r\n      formData.append(\"email\", getEmail);\r\n      formData.append(\"designation\", getDesignation);\r\n      formData.append(\"joiningdate\", getJoinDate);\r\n      formData.append(\"dateofbirth\", getDOB);\r\n      formData.append(\"status\", getStatus);\r\n      formData.append(\"employeeid\", getEmployeeId);\r\n\r\n      var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      var result = await postDataAndImage(\r\n        \"employees/updateRecord\",\r\n        formData,\r\n        config\r\n      );\r\n      console.log(result);\r\n      if (result) {\r\n        setMsg(\"Record Edited..\");\r\n      } else {\r\n        setMsg(\"Fail To Edit Record...\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n  const handleDialog = () => {\r\n    return (\r\n      <div style={{ height: \"auto\" }}>\r\n        <Dialog\r\n          // fullScreen\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          style={{ height: \"auto\" }}\r\n        >\r\n          {/* <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n           <Typography variant=\"h6\" className={classes.title}>\r\n              Employees [Edit Record]\r\n            </Typography> \r\n          </Toolbar> */}\r\n          <div>\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"panel panel-default no-bd\">\r\n                <div class=\"panel-header bg-dark\">\r\n                  <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                    <strong>Employees Edit Record</strong>\r\n                  </h3>\r\n                </div>\r\n                <div class=\"panel-body bg-white\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <form\r\n                        role=\"form\"\r\n                        class=\"form-validation\"\r\n                        novalidate=\"novalidate\"\r\n                      >\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Employee Id</label>\r\n                              <i\r\n                                class=\"fa fa-check\"\r\n                                style={{ marginLeft: 5 }}\r\n                              ></i>\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Employee Id\"\r\n                                  value={getEmployeeId}\r\n                                />\r\n                                <i class=\"fa fa-edit\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Vendor Id</label>\r\n                              <i\r\n                                class=\"fa fa-check\"\r\n                                style={{ marginLeft: 5 }}\r\n                              ></i>\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Vendor Id\"\r\n                                  value={getVendorId}\r\n                                />\r\n                                <i class=\"fa fa-edit\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Employee Name</label>\r\n                              <img\r\n                                src={getErrEmployeeName}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Employee Name\"\r\n                                  value={getEmployeeName}\r\n                                  onChange={(event) =>\r\n                                    setEmployeeName(event.target.value)\r\n                                  }\r\n                                />\r\n                                <i class=\"fa fa-edit\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Email Id</label>\r\n                              <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Email Id\"\r\n                                  value={getEmail}\r\n                                  onChange={(event) =>\r\n                                    setEmail(event.target.value)\r\n                                  }\r\n                                />\r\n                                <i class=\"fa fa-envelope\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Mobile No</label>\r\n                              <img src={getErrMob} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Mobile No\"\r\n                                  value={getMobile}\r\n                                  onChange={(event) =>\r\n                                    setMobile(event.target.value)\r\n                                  }\r\n                                />\r\n                                <i class=\"fa fa-mobile\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Select State</label>\r\n                              <img src={getErrState} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <Select\r\n                                  fullWidth\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  value={getState}\r\n                                  placeholder=\"State\"\r\n                                  onChange={(event) => handleState(event)}\r\n                                >\r\n                                  {\" \"}\r\n                                  <MenuItem value=\"\">Select State</MenuItem>\r\n                                  {fillStates()}\r\n                                </Select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Select City</label>\r\n                              <img src={getErrCity} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <Select\r\n                                  fullWidth\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  value={getCity}\r\n                                  placeholder=\"City\"\r\n                                  onChange={(event) =>\r\n                                    setCity(event.target.value)\r\n                                  }\r\n                                >\r\n                                  <MenuItem value=\"\">Select City</MenuItem>\r\n                                  {fillCities()}\r\n                                </Select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Address</label>\r\n                              <img src={getErrAddress} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Address\"\r\n                                  value={getAddress}\r\n                                  onChange={(event) =>\r\n                                    setAddress(event.target.value)\r\n                                  }\r\n                                />\r\n                                <i class=\"fa fa-mail\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Date of Birth</label>\r\n                              <img src={getErrDOB} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                  <KeyboardDatePicker\r\n                                    fullWidth\r\n                                    label=\"Date of Birth\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={getDOB}\r\n                                    onChange={(event) => setDOB(event)}\r\n                                    KeyboardButtonProps={{\r\n                                      \"aria-label\": \"change date\",\r\n                                    }}\r\n                                  />\r\n                                </MuiPickersUtilsProvider>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Joining Date</label>\r\n                              <img\r\n                                src={getErrJoinDate}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <div class=\"append-icon\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                  <KeyboardDatePicker\r\n                                    fullWidth\r\n                                    label=\"Joining Date\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={getJoinDate}\r\n                                    onChange={(event) => setJoinDate(event)}\r\n                                    KeyboardButtonProps={{\r\n                                      \"aria-label\": \"change date\",\r\n                                    }}\r\n                                  />\r\n                                </MuiPickersUtilsProvider>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Designation</label>\r\n                              <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  placeholder=\"Designation\"\r\n                                  value={getDesignation}\r\n                                  onChange={(event) =>\r\n                                    setDesignation(event.target.value)\r\n                                  }\r\n                                />\r\n                                <i class=\"fa fa-edit\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-6\">\r\n                            {/* <img src={getErrIcon} width=\"10\" height=\"10\" /> */}\r\n                            <input\r\n                              accept=\"image/*\"\r\n                              style={{ display: \"none\" }}\r\n                              id=\"contained-button-file\"\r\n                              type=\"file\"\r\n                              onChange={(event) =>\r\n                                setPhoto({\r\n                                  photo: event.target.files[0],\r\n                                  file: URL.createObjectURL(\r\n                                    event.target.files[0]\r\n                                  ),\r\n                                })\r\n                              }\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"span\"\r\n                                startIcon={<CloudUploadIcon />}\r\n                                fullWidth\r\n                              >\r\n                                Upload Icon\r\n                              </Button>\r\n                            </label>{\" \"}\r\n                            <img src={getErrPhoto} width=\"10\" height=\"10\" />\r\n                            <Avatar\r\n                              alt=\"Remy Sharp\"\r\n                              variant=\"rounded\"\r\n                              src={getPhoto.file}\r\n                              className={classes.avatortheme}\r\n                            />\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Status</label>\r\n                              <img\r\n                                src={getErrEmployeeName}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              />\r\n                              <Radio\r\n                                checked={getStatus === \"Yes\"}\r\n                                onChange={(event) =>\r\n                                  setStatus(event.target.value)\r\n                                }\r\n                                value=\"Yes\"\r\n                                name=\"radio-button-demo\"\r\n                                color=\"primary\"\r\n                                //inputProps={{ 'aria-label': 'A' }}\r\n                              />\r\n                              Yes\r\n                              <Radio\r\n                                checked={getStatus === \"No\"}\r\n                                onChange={(event) =>\r\n                                  setStatus(event.target.value)\r\n                                }\r\n                                value=\"No\"\r\n                                name=\"radio-button-demo\"\r\n                                color=\"primary\"\r\n                                //inputProps={{ 'aria-label': 'B' }}\r\n                              />\r\n                              No\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"text-center\">\r\n                          <button\r\n                            className=\"btn btn-success btn-transparent\"\r\n                            type=\"submit\"\r\n                            // class=\"btn btn-embossed btn-primary\"\r\n                            onClick={() => handleEdit()}\r\n                          >\r\n                            Save Record\r\n                          </button>\r\n                          <DialogActions>\r\n                            <button\r\n                              // className=\"btn btn-danger btn-rounded btn-transparent\"\r\n                              onClick={handleClose}\r\n                              color=\"primary\"\r\n                            >\r\n                              <i class=\"fa fa-close\"></i>\r\n                            </button>\r\n                          </DialogActions>\r\n                        </div>\r\n                      </form>\r\n                      {getMsg}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <Paper className={classes.paperStyle}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} className={classes.subclass}>\r\n                  <img src=\"/images/tick.png\" width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Employee Id\"\r\n                    value={getEmployeeId}\r\n                    variant=\"standard\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src=\"/images/tick.png\" width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Vendor Id\"\r\n                    value={getVendorId}\r\n                    variant=\"standard\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrEmployeeName} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Employee Name\"\r\n                    value={getEmployeeName}\r\n                    variant=\"standard\"\r\n                    onChange={(event) => setEmployeeName(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrEmail} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Email-Id\"\r\n                    value={getEmail}\r\n                    variant=\"standard\"\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrMob} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Mobile No\"\r\n                    value={getMobile}\r\n                    variant=\"standard\"\r\n                    onChange={(event) => setMobile(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrState} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getState}\r\n                      onChange={(event) => handleState(event)}\r\n                    >\r\n                      {\" \"}\r\n                      <MenuItem value=\"\">Select State</MenuItem>\r\n                      {fillStates()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrCity} width=\"10\" height=\"10\" />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getCity}\r\n                      onChange={(event) => setCity(event.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">Select City</MenuItem>\r\n                      {fillCities()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.subclass}>\r\n                  <img src={getErrAddress} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Address\"\r\n                    value={getAddress}\r\n                    variant=\"standard\"\r\n                    onChange={(event) => setAddress(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrDOB} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      fullWidth\r\n                      label=\"Date of Birth\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={getDOB}\r\n                      onChange={(event) => setDOB(event)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrJoinDate} width=\"10\" height=\"10\" />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      fullWidth\r\n                      label=\"Joining Date\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={getJoinDate}\r\n                      onChange={(event) => setJoinDate(event)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrDes} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Designation\"\r\n                    value={getDesignation}\r\n                    variant=\"standard\"\r\n                    onChange={(event) => setDesignation(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    variant=\"rounded\"\r\n                    src={getPhoto.file}\r\n                    className={classes.avatortheme}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.subclass}>\r\n                  <img src={getErrStatus} width=\"10\" height=\"10\" />\r\n                  <div> Status :</div>\r\n                  <Radio\r\n                    checked={getStatus === \"Yes\"}\r\n                    onChange={(event) => setStatus(event.target.value)}\r\n                    value=\"Yes\"\r\n                    name=\"radio-button-demo\"\r\n                    //inputProps={{ 'aria-label': 'A' }}\r\n                  />\r\n                  Yes\r\n                  <Radio\r\n                    checked={getStatus === \"No\"}\r\n                    onChange={(event) => setStatus(event.target.value)}\r\n                    value=\"No\"\r\n                    name=\"radio-button-demo\"\r\n                    //inputProps={{ 'aria-label': 'B' }}\r\n                  />\r\n                  No\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(event) =>\r\n                      setPhoto({\r\n                        photo: event.target.files[0],\r\n                        file: URL.createObjectURL(event.target.files[0]),\r\n                      })\r\n                    }\r\n                  />\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<CloudUploadIcon />}\r\n                      component=\"span\"\r\n                    >\r\n                      Upload Photo\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => handleEdit()}\r\n                  >\r\n                    Save Record\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.subclass}>\r\n                  <div>\r\n                    <b>Message : {getMsg}</b>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Employees List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n        {handleDialog()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\shift\\DisplayAllShifts.js",["784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from \"clsx\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: window.innerWidth * 0.8,\r\n    height: \"auto\",\r\n  },\r\n  root: {\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 30,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n  },\r\n\r\n  button: {\r\n    width: 200,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n  root2: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction DisplayAllShifts(props) {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: \"Shift Id\", field: \"shiftid\", editable: \"never\" },\r\n      { title: \"Vendor Id\", field: \"vendorid\", editable: \"never\" },\r\n      {\r\n        title: \"Shift Start Time\",\r\n        field: \"shiftstarttime\",\r\n        render: (rowData) => <div>{displayTime(rowData.shiftstarttime)}</div>,\r\n      },\r\n      {\r\n        title: \"Shift End Time\",\r\n        field: \"shiftendtime\",\r\n        render: (rowData) => <div>{displayTime(rowData.shiftendtime)}</div>,\r\n      },\r\n      { title: \"Day Off\", field: \"dayoff\", editable: \"never\" },\r\n      { title: \"Shift Name\", field: \"shiftname\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getShiftId, setShiftId] = useState(\"\");\r\n  const [getShiftName, setShiftName] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [selectedShiftStartTime, setSelectedShiftStartTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [selectedShiftEndTime, setSelectedShiftEndTime] = React.useState(\r\n    new Date()\r\n  );\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrVendorId, setErrVendorId] = useState(\"\");\r\n  const [getErrDayOff, setErrDayOff] = useState(\"\");\r\n  const [\r\n    ErrselectedShiftStartTime,\r\n    setErrSelectedShiftStartTime,\r\n  ] = React.useState(new Date());\r\n  const [ErrselectedShiftEndTime, setErrSelectedShiftEndTime] = React.useState(\r\n    new Date()\r\n  );\r\n\r\n  const fetchData = async () => {\r\n    let list = await getData(\"shifts/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { shiftid: oldData.shiftid };\r\n    await postData(\"shifts/deleteRecord\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    splitString(rowData.dayoff);\r\n\r\n    setShiftId(rowData.shiftid);\r\n    setShiftName(rowData.shiftname);\r\n    setVendorId(rowData.vendorid);\r\n    setSelectedShiftStartTime(rowData.shiftstarttime);\r\n    setSelectedShiftEndTime(rowData.shiftendtime);\r\n  };\r\n\r\n  const splitString = (dayoff) => {\r\n    var res = dayoff.split(\", \");\r\n    var length = res.length;\r\n    // console.log(length)\r\n    var i;\r\n    for (i = 0; i < length - 1; i++) {\r\n      if (res[i] == \"Monday\") {\r\n        setCheckedMonday(true);\r\n        setCheckedMondayValue(\"Monday\");\r\n      } else if (res[i] == \"Tuesday\") {\r\n        setCheckedTuesday(true);\r\n        setCheckedTuesdayValue(\"Tuesday\");\r\n      } else if (res[i] == \"Wednesday\") {\r\n        setCheckedWednesday(true);\r\n        setCheckedWednesdayValue(\"Wednesday\");\r\n      } else if (res[i] == \"Thursday\") {\r\n        setCheckedThursday(true);\r\n        setCheckedThursdayValue(\"Thursday\");\r\n      } else if (res[i] == \"Friday\") {\r\n        setCheckedFriday(true);\r\n        setCheckedFridayValue(\"Friday\");\r\n      } else if (res[i] == \"Saturday\") {\r\n        setCheckedSaturday(true);\r\n        setCheckedSaturdayValue(\"Saturday\");\r\n      } else if (res[i] == \"Sunday\") {\r\n        setCheckedSunday(true);\r\n        setCheckedSundayValue(\"Sunday\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const displayTime = (time) => {\r\n    let tm = new Date(time);\r\n    var h = tm.getHours();\r\n    var m = tm.getMinutes();\r\n    var t = h > 12 ? h - 12 + \":\" + m + \" PM\" : h + \":\" + m + \" AM\";\r\n    return t;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setCheckedMonday(false);\r\n    setCheckedTuesday(false);\r\n    setCheckedWednesday(false);\r\n    setCheckedThursday(false);\r\n    setCheckedFriday(false);\r\n    setCheckedSaturday(false);\r\n    setCheckedSunday(false);\r\n    setErrSelectedShiftEndTime(\"\");\r\n    setErrSelectedShiftStartTime(\"\");\r\n    setErrDayOff(\"\");\r\n    setMsg(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  const handleShiftStartTimeChange = (time) => {\r\n    setSelectedShiftStartTime(time);\r\n  };\r\n  const handleShiftEndTimeChange = (time) => {\r\n    setSelectedShiftEndTime(time);\r\n  };\r\n\r\n  const [checkedMonday, setCheckedMonday] = React.useState(false);\r\n  const [checkedTuesday, setCheckedTuesday] = React.useState(false);\r\n  const [checkedWednesday, setCheckedWednesday] = React.useState(false);\r\n  const [checkedThursday, setCheckedThursday] = React.useState(false);\r\n  const [checkedFriday, setCheckedFriday] = React.useState(false);\r\n  const [checkedSaturday, setCheckedSaturday] = React.useState(false);\r\n  const [checkedSunday, setCheckedSunday] = React.useState(false);\r\n  const [checkedMondayValue, setCheckedMondayValue] = React.useState(\"\");\r\n  const [checkedTuesdayValue, setCheckedTuesdayValue] = React.useState(\"\");\r\n  const [checkedWednesdayValue, setCheckedWednesdayValue] = React.useState(\"\");\r\n  const [checkedThursdayValue, setCheckedThursdayValue] = React.useState(\"\");\r\n  const [checkedFridayValue, setCheckedFridayValue] = React.useState(\"\");\r\n  const [checkedSaturdayValue, setCheckedSaturdayValue] = React.useState(\"\");\r\n  const [checkedSundayValue, setCheckedSundayValue] = React.useState(\"\");\r\n\r\n  const handleChangeMonday = (event) => {\r\n    setCheckedMonday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedMondayValue(\"Monday\");\r\n    } else {\r\n      setCheckedMondayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeTuesday = (event) => {\r\n    setCheckedTuesday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedTuesdayValue(\"Tuesday\");\r\n    } else {\r\n      setCheckedTuesdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeWednesday = (event) => {\r\n    setCheckedWednesday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedWednesdayValue(\"Wednesday\");\r\n    } else {\r\n      setCheckedWednesdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeThursday = (event) => {\r\n    setCheckedThursday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedThursdayValue(\"Thursday\");\r\n    } else {\r\n      setCheckedThursdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeFriday = (event) => {\r\n    setCheckedFriday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedFridayValue(\"Friday\");\r\n    } else {\r\n      setCheckedFridayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeSaturday = (event) => {\r\n    setCheckedSaturday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedSaturdayValue(\"Saturday\");\r\n    } else {\r\n      setCheckedSaturdayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeSunday = (event) => {\r\n    setCheckedSunday(event.target.checked);\r\n    if (event.target.checked) {\r\n      setCheckedSundayValue(\"Sunday\");\r\n    } else {\r\n      setCheckedSundayValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault();\r\n    var err = false;\r\n\r\n    if (!checkRequire(getVendorId)) {\r\n      err = true;\r\n      setErrVendorId(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getVendorId)) {\r\n      setErrVendorId(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedShiftStartTime)) {\r\n      err = true;\r\n      setErrSelectedShiftStartTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedShiftStartTime)) {\r\n      setErrSelectedShiftStartTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(selectedShiftEndTime)) {\r\n      err = true;\r\n      setErrSelectedShiftEndTime(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(selectedShiftEndTime)) {\r\n      setErrSelectedShiftEndTime(\"/images/tick.png\");\r\n    }\r\n\r\n    if (\r\n      checkedMondayValue == \"\" &&\r\n      checkedTuesdayValue == \"\" &&\r\n      checkedWednesdayValue == \"\" &&\r\n      checkedThursdayValue == \"\" &&\r\n      checkedFridayValue == \"\" &&\r\n      checkedSaturdayValue == \"\" &&\r\n      checkedSundayValue == \"\"\r\n    ) {\r\n      err = true;\r\n      setErrDayOff(\"/images/cross.png\");\r\n    } else {\r\n      setErrDayOff(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var days = \"\";\r\n\r\n      if (checkedMondayValue != \"\") {\r\n        days += checkedMondayValue + \", \";\r\n      }\r\n      if (checkedTuesdayValue != \"\") {\r\n        days += checkedTuesdayValue + \", \";\r\n      }\r\n      if (checkedWednesdayValue != \"\") {\r\n        days += checkedWednesdayValue + \", \";\r\n      }\r\n      if (checkedThursdayValue != \"\") {\r\n        days += checkedThursdayValue + \", \";\r\n      }\r\n      if (checkedFridayValue != \"\") {\r\n        days += checkedFridayValue + \", \";\r\n      }\r\n      if (checkedSaturdayValue != \"\") {\r\n        days += checkedSaturdayValue + \", \";\r\n      }\r\n      if (checkedSundayValue != \"\") {\r\n        days += checkedSundayValue + \", \";\r\n      }\r\n\r\n      let body = {\r\n        shiftid: getShiftId,\r\n        vendorid: getVendorId,\r\n        shiftstarttime: selectedShiftStartTime,\r\n        shiftendtime: selectedShiftEndTime,\r\n        dayoff: days,\r\n        shiftname: getShiftName,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"shifts/editRecord\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Edited ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"xl\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">Edit Shifts</DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n              <div class=\"panel-header bg-dark\">\r\n                <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                  <strong>Edit </strong> Shifts\r\n                </h3>\r\n              </div>\r\n              <div class=\"panel-body bg-white\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 \">\r\n                    <form\r\n                      role=\"form\"\r\n                      class=\"form-validation\"\r\n                      novalidate=\"novalidate\"\r\n                      onSubmit={handleEdit}\r\n                    >\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Shift Id</label>\r\n                            <i\r\n                              class=\"fa fa-check\"\r\n                              style={{ marginLeft: 5 }}\r\n                            ></i>\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Shift Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getShiftId}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Vendor Id</label>\r\n                            <img src={getErrVendorId} width=\"10\" height=\"10\" />\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Vendor Id\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getVendorId}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Shift Name</label>\r\n                            {/* <img src={getErrVendorId} width=\"10\" height=\"10\" /> */}\r\n                            <div class=\"append-icon\">\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                minlength=\"3\"\r\n                                placeholder=\"Shift Name\"\r\n                                required=\"\"\r\n                                aria-required=\"true\"\r\n                                value={getShiftName}\r\n                                onChange={(event) => {\r\n                                  setShiftName(event.target.value);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">\r\n                              Shift Start Time\r\n                            </label>\r\n                            <img\r\n                              src={ErrselectedShiftStartTime}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardTimePicker\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  id=\"time-picker\"\r\n                                  label=\"Shift Start Time\"\r\n                                  value={selectedShiftStartTime}\r\n                                  onChange={handleShiftStartTimeChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change time\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Shift End Time</label>\r\n                            <img\r\n                              src={ErrselectedShiftEndTime}\r\n                              width=\"10\"\r\n                              height=\"10\"\r\n                            />\r\n                            <div class=\"append-icon\">\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardTimePicker\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  id=\"time-picker\"\r\n                                  label=\"Shift End Time\"\r\n                                  value={selectedShiftEndTime}\r\n                                  onChange={handleShiftEndTimeChange}\r\n                                  KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change time\",\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"\">\r\n                        <div class=\"col-sm-12\">\r\n                          <h3>\r\n                            <b>Days Off</b>{\" \"}\r\n                            <img src={getErrDayOff} width=\"10\" height=\"10\" />\r\n                          </h3>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Monday</label>\r\n\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedMonday}\r\n                              onChange={handleChangeMonday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Tuesday</label>\r\n\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedTuesday}\r\n                              onChange={handleChangeTuesday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Wednesday</label>\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedWednesday}\r\n                              onChange={handleChangeWednesday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Thursday</label>\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedThursday}\r\n                              onChange={handleChangeThursday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Friday</label>\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedFriday}\r\n                              onChange={handleChangeFriday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Saturday</label>\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedSaturday}\r\n                              onChange={handleChangeSaturday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"form-group\">\r\n                            <label class=\"control-label\">Sunday</label>\r\n                            {/* <div class=\"append-icon\"> */}\r\n                            <Checkbox\r\n                              checked={checkedSunday}\r\n                              onChange={handleChangeSunday}\r\n                              className={classes.root2}\r\n                              disableRipple\r\n                              color=\"default\"\r\n                              checkedIcon={\r\n                                <span\r\n                                  className={clsx(\r\n                                    classes.icon,\r\n                                    classes.checkedIcon\r\n                                  )}\r\n                                />\r\n                              }\r\n                              icon={<span className={classes.icon} />}\r\n                              inputProps={{\r\n                                \"aria-label\": \"decorative checkbox\",\r\n                              }}\r\n                              {...props}\r\n                            />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"text-center  m-t-20\">\r\n                        <button\r\n                          className=\"btn btn-success btn-transparent\"\r\n                          type=\"submit\"\r\n                          // class=\"btn btn-embossed btn-primary\"\r\n                          // onClick={()=>handleEdit()}\r\n                        >\r\n                          Save Record\r\n                        </button>\r\n                      </div>\r\n                      {getMsg}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <Paper className={classes.paperstyle}>    \r\n\r\n    <Grid container spacing={1} >\r\n\r\n       <Grid item xs={12} className={classes.gridStyle} > \r\n       <img src={'/images/tick.png'} width='10' height='10' />\r\n       <TextField fullWidth label='Shift Id' value={getShiftId} variant='standard' />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.gridStyle}>\r\n        <img src={'/images/tick.png'} width='10' height='10' />            \r\n        <TextField id=\"standard-basic\" label=\"Vendor Id\"  fullWidth variant=\"standard\" value={getVendorId}  />\r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedShiftStartTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Shift Start Time\"\r\n          value={selectedShiftStartTime}\r\n          onChange={handleShiftStartTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n        <Grid item xs={6} className={classes.gridStyle}>\r\n        <img src={ErrselectedShiftEndTime} width='10' height='10' />            \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>    \r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Shift End Time\"\r\n          value={selectedShiftEndTime}\r\n          onChange={handleShiftEndTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> \r\n        </Grid> \r\n\r\n       <Grid item xs={12}>\r\n        <h3 style={{paddingLeft:'8px'}}>\r\n        <img src={getErrDayOff} width='10' height='10' />&nbsp;                \r\n        Days Off</h3>\r\n       </Grid>\r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n      Monday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedMonday}\r\n       onChange={handleChangeMonday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n      Tuesday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedTuesday}\r\n       onChange={handleChangeTuesday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Wednesday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedWednesday}\r\n       onChange={handleChangeWednesday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n       Thursday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedThursday}\r\n       onChange={handleChangeThursday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Friday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedFriday}\r\n       onChange={handleChangeFriday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:110}}>\r\n       Saturday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedSaturday}\r\n       onChange={handleChangeSaturday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={4} style={{marginLeft:10}}>\r\n       Sunday\r\n       <div>\r\n       <Checkbox\r\n       checked={checkedSunday}\r\n       onChange={handleChangeSunday}\r\n       color=\"primary\"\r\n       inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n       />\r\n      </div>\r\n      </Grid> \r\n\r\n      <Grid item xs={6} className={classes.container}>\r\n       \r\n      </Grid> \r\n        \r\n        <Grid item xs={6} className={classes.container}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleEdit()} >\r\n         Save Record\r\n        </Button>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} >\r\n       <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n        </Grid>\r\n\r\n  </Grid>\r\n</Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Shifts List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllShifts;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\CardView\\CardView.js",["821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport swal from \"sweetalert\";\r\nimport { postDataAndImage, getData, postData } from \"../FetchNodeServices\";\r\nimport {\r\n  checkRequire,\r\n  checkEmail,\r\n  checkMobile,\r\n  checkPassword,\r\n} from \"../Checks\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { statecity } from \"../statecity/StateCity\";\r\nimport View from \"../CardView/View.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.95,\r\n  },\r\n  avatortheme: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: window.innerWidth * 0.45,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  avatortheme: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 220,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction EmployeeInterface() {\r\n  const classes = useStyles();\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getEmployeeName, setEmployeeName] = useState(\"\");\r\n  const [getEmail, setEmail] = useState(\"\");\r\n  const [getMobile, setMobile] = useState(\"\");\r\n  const [getAddress, setAddress] = useState(\"\");\r\n  const [getState, setState] = useState(\"\");\r\n  const [getCity, setCity] = useState(\"\");\r\n  const [getDesignation, setDesignation] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getPhoto, setPhoto] = useState({ photo: \"\", file: \"\" });\r\n  const [getJoinDate, setJoinDate] = useState(new Date());\r\n  const [getDOB, setDOB] = useState(new Date());\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getErrEmployeeName, setErrEmployeeName] = useState(\"\");\r\n  const [getErrEmail, setErrEmail] = useState(\"\");\r\n  const [getErrJoinDate, setErrJoinDate] = useState(\"\");\r\n  const [getErrDOB, setErrDOB] = useState(\"\");\r\n  const [getErrMob, setErrMob] = useState(\"\");\r\n  const [getErrDes, setErrDes] = useState(\"\");\r\n  const [getErrAddress, setErrAddress] = useState(\"\");\r\n  const [getErrState, setErrState] = useState(\"\");\r\n  const [getErrCity, setErrCity] = useState(\"\");\r\n  const [getErrStatus, setErrStatus] = useState(\"\");\r\n  const [getErrPhoto, setErrPhoto] = useState(\"\");\r\n  const [getStateList, setStateList] = useState([]);\r\n  const [getCityList, setCityList] = useState([]);\r\n\r\n  const handleVendorId = () => {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendorId(vendor.vendorid);\r\n  };\r\n  const fetchStates = async () => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      list[key] = item.state;\r\n    });\r\n    setStateList(list);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchStates();\r\n    handleVendorId();\r\n  }, []);\r\n\r\n  const fillStates = () => {\r\n    return getStateList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleState = (event) => {\r\n    var state = event.target.value;\r\n    setState(state);\r\n    fetchCity(state);\r\n  };\r\n\r\n  const fetchCity = async (selectstate) => {\r\n    var list = [];\r\n    statecity.map(function (item, key) {\r\n      if (item.state == selectstate) {\r\n        item.districts.map(function (data, key) {\r\n          list[key] = data;\r\n        });\r\n      }\r\n    });\r\n    setCityList(list);\r\n  };\r\n\r\n  const fillCities = () => {\r\n    return getCityList.map(function (item, key) {\r\n      return <MenuItem value={item}>{item}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var err = false;\r\n    if (!checkRequire(getEmployeeName)) {\r\n      err = true;\r\n      setErrEmployeeName(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getEmployeeName)) {\r\n      setErrEmployeeName(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDesignation)) {\r\n      err = true;\r\n      setErrDes(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDesignation)) {\r\n      setErrDes(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkMobile(getMobile)) {\r\n      err = true;\r\n      setErrMob(\"/images/cross.png\");\r\n    }\r\n    if (checkMobile(getMobile)) {\r\n      setErrMob(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getAddress)) {\r\n      err = true;\r\n      setErrAddress(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getAddress)) {\r\n      setErrAddress(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getState)) {\r\n      err = true;\r\n      setErrState(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getState)) {\r\n      setErrState(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getStatus)) {\r\n      err = true;\r\n      setErrStatus(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getStatus)) {\r\n      setErrStatus(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getCity)) {\r\n      err = true;\r\n      setErrCity(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getCity)) {\r\n      setErrCity(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getJoinDate)) {\r\n      err = true;\r\n      setErrJoinDate(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getJoinDate)) {\r\n      setErrJoinDate(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getDOB)) {\r\n      err = true;\r\n      setErrDOB(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getDOB)) {\r\n      setErrDOB(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkEmail(getEmail)) {\r\n      err = true;\r\n      setErrEmail(\"/images/cross.png\");\r\n    }\r\n    if (checkEmail(getEmail)) {\r\n      setErrEmail(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!checkRequire(getPhoto.photo)) {\r\n      err = true;\r\n      setErrPhoto(\"/images/cross.png\");\r\n    }\r\n    if (checkRequire(getPhoto.photo)) {\r\n      setErrPhoto(\"/images/tick.png\");\r\n    }\r\n\r\n    if (!err) {\r\n      var formData = new FormData();\r\n      formData.append(\"employeename\", getEmployeeName);\r\n      formData.append(\"vendorid\", getVendorId);\r\n      formData.append(\"mobileno\", getMobile);\r\n      formData.append(\"address\", getAddress);\r\n      formData.append(\"state\", getState);\r\n      formData.append(\"city\", getCity);\r\n      formData.append(\"photo\", getPhoto.photo);\r\n      formData.append(\"email\", getEmail);\r\n      formData.append(\"designation\", getDesignation);\r\n      formData.append(\"joiningdate\", getJoinDate);\r\n      formData.append(\"dateofbirth\", getDOB);\r\n      formData.append(\"status\", getStatus);\r\n      var config = { headers: { \"content-type\": \"multipart/form-data\" } };\r\n      var result = await postDataAndImage(\r\n        \"employees/addnewemployee\",\r\n        formData,\r\n        config\r\n      );\r\n      // console.log(result);\r\n      if (result.status) {\r\n        swal(\"Record Submitted\", \" \", \"success\", {\r\n          buttons: false,\r\n        });\r\n      } else {\r\n        swal(result.message, \" \", \"Error\", {\r\n          buttons: false,\r\n        });\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n    setEmployeeName(\"\");\r\n    setMobile(\"\");\r\n    setAddress(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setPhoto({ photo: \"\", file: \"\" });\r\n    setEmail(\"\");\r\n    setDesignation(\"\");\r\n    setJoinDate(new Date());\r\n    setStatus(\"\");\r\n    setDOB(new Date());\r\n    setErrEmployeeName(\"\");\r\n    setErrDes(\"\");\r\n    setErrMob(\"\");\r\n    setErrPhoto(\"\");\r\n    setErrJoinDate(\"\");\r\n    setErrDOB(\"\");\r\n    setErrStatus(\"\");\r\n    setErrState(\"\");\r\n    setErrCity(\"\");\r\n    setErrEmail(\"\");\r\n    setErrAddress(\"\");\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6\">\r\n          {/* <!-- Daily Feed Widget--> */}\r\n          <div id=\"daily-feeds\" class=\"card updates daily-feeds\">\r\n            <div\r\n              id=\"feeds-header\"\r\n              class=\"card-header d-flex justify-content-between align-items-center\"\r\n            >\r\n              <h2 class=\"h5 display\">\r\n                <a\r\n                  data-toggle=\"collapse\"\r\n                  data-parent=\"#daily-feeds\"\r\n                  href=\"#feeds-box\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"feeds-box\"\r\n                >\r\n                  Your daily Feeds\r\n                </a>\r\n              </h2>\r\n              <div class=\"right-column\">\r\n                <div class=\"badge badge-primary\">10 messages</div>\r\n                <a\r\n                  data-toggle=\"collapse\"\r\n                  data-parent=\"#daily-feeds\"\r\n                  href=\"#feeds-box\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"feeds-box\"\r\n                >\r\n                  <i class=\"fa fa-angle-down\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div id=\"feeds-box\" role=\"tabpanel\" class=\"collapse show\">\r\n              <div class=\"feed-box\">\r\n                <ul class=\"feed-elements list-unstyled\">\r\n                  {/* <!-- List--> */}\r\n                  <li class=\"clearfix\">\r\n                    <div class=\"feed d-flex justify-content-between\">\r\n                      <div class=\"feed-body d-flex justify-content-between\">\r\n                        <a href=\"#\" class=\"feed-profile\">\r\n                          <img\r\n                            src=\"images/avatar-5.jpg\"\r\n                            alt=\"person\"\r\n                            class=\"img-fluid rounded-circle\"\r\n                          />\r\n                        </a>\r\n                        <div class=\"content\">\r\n                          <strong>Aria Smith</strong>\r\n                          <small>Posted a new blog </small>\r\n                          <div class=\"full-date\">\r\n                            <small>Today 5:60 pm - 12.06.2014</small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"date\">\r\n                        <small>5min ago</small>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  {/* <!-- List--> */}\r\n                  <li class=\"clearfix\">\r\n                    <div class=\"feed d-flex justify-content-between\">\r\n                      <div class=\"feed-body d-flex justify-content-between\">\r\n                        <a href=\"#\" class=\"feed-profile\">\r\n                          <img\r\n                            src=\"images/avatar-2.jpg\"\r\n                            alt=\"person\"\r\n                            class=\"img-fluid rounded-circle\"\r\n                          />\r\n                        </a>\r\n                        <div class=\"content\">\r\n                          <strong>Frank Williams</strong>\r\n                          <small>Posted a new blog </small>\r\n                          <div class=\"full-date\">\r\n                            <small>Today 5:60 pm - 12.06.2014</small>\r\n                          </div>\r\n                          <div class=\"CTAs\">\r\n                            <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                              <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                            </a>\r\n                            <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                              <i class=\"fa fa-heart\"> </i>Love\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"date\">\r\n                        <small>5min ago</small>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  {/* <!-- List--> */}\r\n                  <li class=\"clearfix\">\r\n                    <div class=\"feed d-flex justify-content-between\">\r\n                      <div class=\"feed-body d-flex justify-content-between\">\r\n                        <a href=\"#\" class=\"feed-profile\">\r\n                          <img\r\n                            src=\"images/avatar-3.jpg\"\r\n                            alt=\"person\"\r\n                            class=\"img-fluid rounded-circle\"\r\n                          />\r\n                        </a>\r\n                        <div class=\"content\">\r\n                          <strong>Ashley Wood</strong>\r\n                          <small>Posted a new blog </small>\r\n                          <div class=\"full-date\">\r\n                            <small>Today 5:60 pm - 12.06.2014</small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"date\">\r\n                        <small>5min ago</small>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  {/* <!-- List--> */}\r\n                  <li class=\"clearfix\">\r\n                    <div class=\"feed d-flex justify-content-between\">\r\n                      <div class=\"feed-body d-flex justify-content-between\">\r\n                        <a href=\"#\" class=\"feed-profile\">\r\n                          <img\r\n                            src=\"images/avatar-1.jpg\"\r\n                            alt=\"person\"\r\n                            class=\"img-fluid rounded-circle\"\r\n                          />\r\n                        </a>\r\n                        <div class=\"content\">\r\n                          <strong>Jason Doe</strong>\r\n                          <small>Posted a new blog </small>\r\n                          <div class=\"full-date\">\r\n                            <small>Today 5:60 pm - 12.06.2014</small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"date\">\r\n                        <small>5min ago</small>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"message-card\">\r\n                      <small>\r\n                        Lorem Ipsum is simply dummy text of the printing and\r\n                        typesetting industry. Lorem Ipsum has been the\r\n                        industry's standard dummy text ever since the 1500s.\r\n                        Over the years, sometimes by accident, sometimes on\r\n                        purpose (injected humour and the like).\r\n                      </small>\r\n                    </div>\r\n                    <div class=\"CTAs pull-right\">\r\n                      <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                        <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                      </a>\r\n                    </div>\r\n                  </li>\r\n                  {/* <!-- List--> */}\r\n                  <li class=\"clearfix\">\r\n                    <div class=\"feed d-flex justify-content-between\">\r\n                      <div class=\"feed-body d-flex justify-content-between\">\r\n                        <a href=\"#\" class=\"feed-profile\">\r\n                          <img\r\n                            src=\"images/avatar-6.jpg\"\r\n                            alt=\"person\"\r\n                            class=\"img-fluid rounded-circle\"\r\n                          />\r\n                        </a>\r\n                        <div class=\"content\">\r\n                          <strong>Sam Martinez</strong>\r\n                          <small>Posted a new blog </small>\r\n                          <div class=\"full-date\">\r\n                            <small>Today 5:60 pm - 12.06.2014</small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"date\">\r\n                        <small>5min ago</small>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Daily Feed Widget End--> */}\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n          <div class=\"col-lg-4 col-md-6\">\r\n            {/* <!-- Daily Feed Widget--> */}\r\n            <div id=\"daily-feeds\" class=\"card updates daily-feeds\">\r\n              <div\r\n                id=\"feeds-header\"\r\n                class=\"card-header d-flex justify-content-between align-items-center\"\r\n              >\r\n                <h2 class=\"h5 display\">\r\n                  <a\r\n                    data-toggle=\"collapse\"\r\n                    data-parent=\"#daily-feeds\"\r\n                    href=\"#feeds-box\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"feeds-box\"\r\n                  >\r\n                    Your daily Feeds\r\n                  </a>\r\n                </h2>\r\n                <div class=\"right-column\">\r\n                  <div class=\"badge badge-primary\">10 messages</div>\r\n                  <a\r\n                    data-toggle=\"collapse\"\r\n                    data-parent=\"#daily-feeds\"\r\n                    href=\"#feeds-box\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"feeds-box\"\r\n                  >\r\n                    <i class=\"fa fa-angle-down\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div id=\"feeds-box\" role=\"tabpanel\" class=\"collapse show\">\r\n                <div class=\"feed-box\">\r\n                  <ul class=\"feed-elements list-unstyled\">\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-5.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Aria Smith</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-2.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Frank Williams</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                            <div class=\"CTAs\">\r\n                              <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                                <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                              </a>\r\n                              <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                                <i class=\"fa fa-heart\"> </i>Love\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-3.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Ashley Wood</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-1.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Jason Doe</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"message-card\">\r\n                        <small>\r\n                          Lorem Ipsum is simply dummy text of the printing and\r\n                          typesetting industry. Lorem Ipsum has been the\r\n                          industry's standard dummy text ever since the 1500s.\r\n                          Over the years, sometimes by accident, sometimes on\r\n                          purpose (injected humour and the like).\r\n                        </small>\r\n                      </div>\r\n                      <div class=\"CTAs pull-right\">\r\n                        <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                          <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                        </a>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-6.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Sam Martinez</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- Daily Feed Widget End--> */}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col\">\r\n          <div class=\"col-lg-4 col-md-6\">\r\n            {/* <!-- Daily Feed Widget--> */}\r\n            <div id=\"daily-feeds\" class=\"card updates daily-feeds\">\r\n              <div\r\n                id=\"feeds-header\"\r\n                class=\"card-header d-flex justify-content-between align-items-center\"\r\n              >\r\n                <h2 class=\"h5 display\">\r\n                  <a\r\n                    data-toggle=\"collapse\"\r\n                    data-parent=\"#daily-feeds\"\r\n                    href=\"#feeds-box\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"feeds-box\"\r\n                  >\r\n                    Your daily Feeds\r\n                  </a>\r\n                </h2>\r\n                <div class=\"right-column\">\r\n                  <div class=\"badge badge-primary\">10 messages</div>\r\n                  <a\r\n                    data-toggle=\"collapse\"\r\n                    data-parent=\"#daily-feeds\"\r\n                    href=\"#feeds-box\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"feeds-box\"\r\n                  >\r\n                    <i class=\"fa fa-angle-down\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div id=\"feeds-box\" role=\"tabpanel\" class=\"collapse show\">\r\n                <div class=\"feed-box\">\r\n                  <ul class=\"feed-elements list-unstyled\">\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-5.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Aria Smith</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-2.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Frank Williams</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                            <div class=\"CTAs\">\r\n                              <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                                <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                              </a>\r\n                              <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                                <i class=\"fa fa-heart\"> </i>Love\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-3.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Ashley Wood</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-1.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Jason Doe</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"message-card\">\r\n                        <small>\r\n                          Lorem Ipsum is simply dummy text of the printing and\r\n                          typesetting industry. Lorem Ipsum has been the\r\n                          industry's standard dummy text ever since the 1500s.\r\n                          Over the years, sometimes by accident, sometimes on\r\n                          purpose (injected humour and the like).\r\n                        </small>\r\n                      </div>\r\n                      <div class=\"CTAs pull-right\">\r\n                        <a href=\"#\" class=\"btn btn-xs btn-dark\">\r\n                          <i class=\"fa fa-thumbs-up\"> </i>Like\r\n                        </a>\r\n                      </div>\r\n                    </li>\r\n                    {/* <!-- List--> */}\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"feed d-flex justify-content-between\">\r\n                        <div class=\"feed-body d-flex justify-content-between\">\r\n                          <a href=\"#\" class=\"feed-profile\">\r\n                            <img\r\n                              src=\"images/avatar-6.jpg\"\r\n                              alt=\"person\"\r\n                              class=\"img-fluid rounded-circle\"\r\n                            />\r\n                          </a>\r\n                          <div class=\"content\">\r\n                            <strong>Sam Martinez</strong>\r\n                            <small>Posted a new blog </small>\r\n                            <div class=\"full-date\">\r\n                              <small>Today 5:60 pm - 12.06.2014</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"date\">\r\n                          <small>5min ago</small>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- Daily Feed Widget End--> */}\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      {/* <Paper className={classes.paperStyle}>\r\n     <Paper  elevation={1} className={classes.paperHeading} >\r\n    <Typography variant=\"h6\" gutterBottom>\r\n    Add New Employee\r\n      </Typography>\r\n     </Paper>\r\n        <Grid container spacing={1}>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src='/images/tick.png' width='10' height='10' />\r\n         <TextField fullWidth label=\"Vendor Id\" value={getVendorId} variant='standard'  /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrEmployeeName} width='10' height='10' />\r\n         <TextField fullWidth label='Employee Name' value={getEmployeeName} variant='standard' onChange={(event)=>setEmployeeName(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrEmail} width='10' height='10' />\r\n         <TextField fullWidth label='Email-Id' value={getEmail} variant='standard'  onChange={(event)=>setEmail(event.target.value)}/> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrMob} width='10' height='10' />\r\n         <TextField fullWidth label='Mobile No' value={getMobile} variant='standard' onChange={(event)=>setMobile(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrState} width='10' height='10' />\r\n         <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">State</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getState}\r\n          onChange={(event)=>handleState(event)}\r\n        >  <MenuItem value=\"\">Select State</MenuItem>\r\n         {fillStates()}\r\n        </Select>\r\n      </FormControl>\r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrCity} width='10' height='10' />\r\n         <FormControl fullWidth >\r\n        <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={getCity}\r\n          onChange={(event)=>setCity(event.target.value)}\r\n        >\r\n           <MenuItem value=\"\">Select City</MenuItem>\r\n           {fillCities()}\r\n        </Select>\r\n      </FormControl>\r\n         </Grid>\r\n         <Grid item xs={12} className={classes.subclass}>\r\n         <img src={getErrAddress} width='10' height='10' />\r\n         <TextField fullWidth label='Address'value={getAddress}  variant='standard' onChange={(event)=>setAddress(event.target.value)} /> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrDOB} width='10' height='10' />\r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n         fullWidth\r\n          label=\"Date of Birth\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getDOB}\r\n          onChange={(event)=>setDOB(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrJoinDate} width='10' height='10' />\r\n         <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <KeyboardDatePicker\r\n         fullWidth\r\n          label=\"Joining Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={getJoinDate}\r\n          onChange={(event)=>setJoinDate(event)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider> </Grid>\r\n         <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrDes} width='10' height='10' />\r\n         <TextField fullWidth label='Designation' value={getDesignation} variant='standard'  onChange={(event)=>setDesignation(event.target.value)}/> \r\n         </Grid>\r\n         <Grid item xs={6} className={classes.center} >\r\n         <img src={getErrPhoto} width='10' height='10' />\r\n         <Avatar alt=\"Remy Sharp\" variant='rounded' src={getPhoto.file} className={classes.avatortheme}/>\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.subclass}>\r\n         <img src={getErrStatus} width='10' height='10' />\r\n         <div> Status :</div>\r\n       <Radio\r\n        checked={getStatus === 'Yes'}\r\n        onChange={(event)=>setStatus(event.target.value)}\r\n        value=\"Yes\"\r\n        name=\"radio-button-demo\"\r\n        //inputProps={{ 'aria-label': 'A' }}\r\n      />Yes\r\n      <Radio\r\n        checked={getStatus === 'No'}\r\n        onChange={(event)=>setStatus(event.target.value)}\r\n        value=\"No\"\r\n        name=\"radio-button-demo\"\r\n        //inputProps={{ 'aria-label': 'B' }}\r\n      />No\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.center}>\r\n         <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={(event)=>setPhoto({photo:event.target.files[0],file:URL.createObjectURL(event.target.files[0])})}\r\n       />\r\n       <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\"   className={classes.button} startIcon={<CloudUploadIcon />} component=\"span\">\r\n          Upload Photo\r\n        </Button>\r\n        </label>\r\n         </Grid>\r\n     \r\n        <Grid item xs={6} className={classes.center}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>handleSubmit()} > \r\n          Submit Record\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={6}className={classes.center} >\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>ClearData()}>\r\n          Reset\r\n         </Button>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.subclass}>\r\n          <div><b>Message : {getMsg}</b>\r\n          </div>\r\n        </Grid>\r\n        </Grid>\r\n        </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeInterface;\r\n\r\n// import React, {useState, useEffect} from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Card from \"@material-ui/core/Card\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import { getData } from \"../FetchNodeServices\";\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     minWidth: 275,\r\n//   },\r\n//   bullet: {\r\n//     display: \"inline-block\",\r\n//     margin: \"0 2px\",\r\n//     transform: \"scale(0.8)\",\r\n//   },\r\n//   title: {\r\n//     fontSize: 14,\r\n//   },\r\n//   pos: {\r\n//     marginBottom: 12,\r\n//   },\r\n// });\r\n\r\n// function CardView() {\r\n//   const classes = useStyles();\r\n//   const [getList, setList] = useState([]);\r\n//   const bull = <span className={classes.bullet}>•</span>;\r\n\r\n//   const fetchData = async () => {\r\n//     var list = await getData(\"employees/displayall\");\r\n//     setList(list.data);\r\n//   };\r\n\r\n//   useEffect(function () {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const ShowProfile = () => {\r\n//     return (\r\n//       <div>\r\n//         <Card className={classes.root} variant=\"outlined\">\r\n//           <CardContent>\r\n//             <div>\r\n\r\n//             </div>\r\n//             <Typography variant=\"h5\" component=\"h2\">\r\n//               be{bull}nev{bull}o{bull}lent\r\n//             </Typography>\r\n//             <Typography className={classes.pos} color=\"textSecondary\">\r\n//               adjective\r\n//             </Typography>\r\n//             <Typography variant=\"body2\" component=\"p\">\r\n//               well meaning and kindly.\r\n//               <br />\r\n//               {'\"a benevolent smile\"'}\r\n//             </Typography>\r\n//           </CardContent>\r\n//           <CardActions>\r\n//             <Button size=\"small\">Learn More</Button>\r\n//           </CardActions>\r\n//         </Card>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return(\r\n//     <div>{ShowProfile()}</div>\r\n//   )\r\n// }\r\n// export default CardView;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\VendorDashboard.js",["885"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable default-case */\r\n/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-fallthrough */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ListItems from \"./ListItems\";\r\nimport { getData, ServerURL } from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport EmployeeInterface from \"../employees/EmployeeInterface\";\r\nimport DisplayAllAttendence from \"../attendence/DisplayAllAttendence\";\r\nimport DisplayAllEmployees from \"../employees/DisplayAllEmployees\";\r\nimport DisplayAllExpenses from \"../expenses/DisplayAllExpenses\";\r\nimport Task from \"../task/Task\";\r\nimport DisplayAllTask from \"../task/DisplayAllTask\";\r\nimport Client from \"../client/Client\";\r\nimport DisplayAllClient from \"../client/DisplayAllClient\";\r\nimport Shifts from \"../shift/Shifts\";\r\nimport DisplayAllShifts from \"../shift/DisplayAllShifts\";\r\nimport DisplayAllAssignShift from \"../assignshift/DisplayAllAssignShift\";\r\nimport AssignShift from \"../assignshift/AssignShift\";\r\nimport DisplayAllAssignTask from \"../assigntask/DisplayAllAssignTask\";\r\nimport AssignTask from \"../assigntask/AssignTask\";\r\nimport DisplayAllLeaveApproval from \"../leaveaproval/DisplayAllLeaveApproval\";\r\nimport Leaves from \"../leaves/Leaves\";\r\nimport DisplayAllLeaves from \"../leaves/DisplayAllLeaves\";\r\nimport DashOne from \"../superadmin/DashOne\";\r\nimport DisplayScreenshot from \"../displayform/DisplayScreenshot\";\r\nimport DisplayPhoneCall from \"../displayform/DisplayPhoneCall\";\r\nimport Display from \"../displayform/Display\";\r\nimport AddProfile from \"../profile/AddProfile\";\r\nimport TrackEmployee from \"./TrackEmployee\";\r\nimport TrackAllEmployee from \"./TrackAllEmployee\";\r\nimport RoadMap from \"./RoadMap\";\r\nimport DisplayAllOrder from \"../orders/DisplayAllOrder\";\r\nimport VendorEmployeeId from \"./VendorEmployeeId\";\r\nimport DashOneVend from \"./DashOneVend\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [vendor, setVendor] = useState([]);\r\n  const [ShowComponent, setComponent] = useState(<DashOne />);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const CheckSession = async () => {\r\n    //var  result=await getData('vendorlogin/checktoken')\r\n    // console.log(result)\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    //console.log(vendor)\r\n    setVendor(vendor);\r\n    //console.log(props.history.location.vendor)\r\n  };\r\n\r\n  useEffect(function () {\r\n    CheckSession();\r\n  }, []);\r\n\r\n  const handleComponents = async (opt) => {\r\n    switch (opt) {\r\n      case 1:\r\n        setComponent(<EmployeeInterface />);\r\n        break;\r\n      case 2:\r\n        setComponent(<DisplayAllEmployees />);\r\n        break;\r\n      case 3:\r\n        setComponent(<Client />);\r\n        break;\r\n      case 4:\r\n        setComponent(<DisplayAllClient />);\r\n        break;\r\n      case 5:\r\n        setComponent(<Task />);\r\n        break;\r\n      case 6:\r\n        setComponent(<DisplayAllTask />);\r\n        break;\r\n      case 7:\r\n        setComponent(<Shifts />);\r\n        break;\r\n      case 8:\r\n        setComponent(<DisplayAllShifts />);\r\n        break;\r\n      case 9:\r\n        setComponent(<DisplayAllExpenses />);\r\n        break;\r\n      case 10:\r\n        setComponent(<DisplayAllAttendence />);\r\n        break;\r\n      case 11:\r\n        setComponent(<AssignTask />);\r\n        break;\r\n      case 12:\r\n        setComponent(<DisplayAllAssignTask />);\r\n        break;\r\n      case 13:\r\n        setComponent(<AssignShift />);\r\n        break;\r\n      case 14:\r\n        setComponent(<DisplayAllAssignShift />);\r\n        break;\r\n      case 15:\r\n        setComponent(<Leaves />);\r\n        break;\r\n      case 16:\r\n        setComponent(<DisplayAllLeaves />);\r\n        break;\r\n      case 17:\r\n        setComponent(<DisplayAllLeaveApproval />);\r\n        break;\r\n      case 18:\r\n        // localStorage.removeItem('vendor')\r\n        var result = await getData(\"vendorlogin/logout\");\r\n        if (result) {\r\n          props.history.replace({ pathname: `/VendorLogin` });\r\n        }\r\n      case 19:\r\n        setComponent(<DashOneVend />);\r\n        break;\r\n      case 20:\r\n        setComponent(<DisplayScreenshot />);\r\n        break;\r\n      case 21:\r\n        setComponent(<DisplayPhoneCall />);\r\n        break;\r\n      case 22:\r\n        setComponent(<Display />);\r\n        break;\r\n      case 23:\r\n        setComponent(<AddProfile />);\r\n        break;\r\n      case 24:\r\n        setComponent(\"#\");\r\n        break;\r\n      case 25:\r\n        setComponent(<TrackEmployee />);\r\n        break;\r\n      case 26:\r\n        setComponent(<TrackAllEmployee />);\r\n        break;\r\n      case 27:\r\n        // setComponent(<VendorEmployeeId />);\r\n        setComponent(<RoadMap />);\r\n        break;\r\n      case 28:\r\n        setComponent(<DisplayAllOrder />);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div>\r\n      {/*  className={classes.root} */}\r\n      {/* <CssBaseline /> */}\r\n      <div class=\"sidebar\">\r\n        <div class=\"logopanel\">\r\n          <h1>\r\n            <img src=\"/images/logo.png\" style={{ width: \"100%\" }} />\r\n          </h1>\r\n        </div>\r\n        <div class=\"sidebar-inner\">\r\n          <div class=\"sidebar-top big-img\">\r\n            <div class=\"user-image\">\r\n              {/* <img\r\n                src={`${ServerURL}/images/${vendor.companylogo}`}\r\n                class=\"img-responsive img-circle\"\r\n                alt=\"friend 8\"\r\n                style={{ width: 124, height: 124 }}\r\n              /> */}\r\n              <img\r\n                src=\"/images/admin.png\"\r\n                class=\"img-responsive img-circle\"\r\n                alt=\"friend 8\"\r\n              />\r\n            </div>\r\n            <h4 style={{ fontFamily: \"Calibri\" }}>{vendor.companyname}</h4>\r\n            <div class=\"dropdown user-login\">\r\n              <button\r\n                class=\"btn btn-xs dropdown-toggle btn-rounded\"\r\n                type=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                data-hover=\"dropdown\"\r\n                data-close-others=\"true\"\r\n                data-delay=\"300\"\r\n              >\r\n                <i class=\"online\"></i>\r\n                <span style={{ fontFamily: \"Calibri\" }}>Available</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <ul class=\"nav nav-sidebar\">\r\n            <br />\r\n            <List style={{ color: \"#fff\", fontFamily: \"Calibri\" }}>\r\n              <ListItems\r\n                style={{ color: \"#fff\", fontFamily: \"Calibri\" }}\r\n                handleComponentsReference={handleComponents}\r\n              />\r\n            </List>\r\n          </ul>\r\n\r\n          <div class=\"sidebar-footer clearfix\">\r\n            <a\r\n              style={{ width: \"100%\" }}\r\n              class=\"pull-left btn-effect\"\r\n              href=\"VendorLogin\"\r\n              data-modal=\"modal-1\"\r\n              data-rel=\"tooltip\"\r\n              data-placement=\"top\"\r\n              data-original-title=\"Logout\"\r\n            >\r\n              <i class=\"icon-power\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-content\">\r\n        <div class=\"topbar\">\r\n          <div class=\"header-left\">\r\n            <div class=\"topnav\">\r\n              <a class=\"menutoggle\" href=\"#\" data-toggle=\"sidebar-collapsed\">\r\n                <span class=\"menu__handle\">\r\n                  <span>Menu</span>\r\n                </span>\r\n              </a>\r\n              <ul class=\"nav nav-icons\">\r\n                <li>\r\n                  <a href=\"#\" class=\"toggle-sidebar-top\">\r\n                    <span class=\"icon-user-following\"></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-around\">\r\n            <header class=\"header-left\">\r\n              <nav class=\"navbar\">\r\n                <div class=\"container-fluid\">\r\n                  <div class=\"navbar-holder d-flex align-items-center justify-content-between\">\r\n                    <ul\r\n                      class=\"nav-menu list-unstyled d-flex flex-md-row align-items-md-center\"\r\n                      style={{ display: \"flex\", padding: 10 }}\r\n                    >\r\n                      {/* <!-- Notifications dropdown--> */}\r\n                      <li class=\"nav-item dropdown\">\r\n                        {/* <a\r\n                          id=\"notifications\"\r\n                          rel=\"nofollow\"\r\n                          data-target=\"#\"\r\n                          href=\"#\"\r\n                          data-toggle=\"dropdown\"\r\n                          aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\"\r\n                          class=\"nav-link\"\r\n                        > */}\r\n                        <i class=\"fa fa-bell\"></i>\r\n                        <span\r\n                          class=\"badge badge-warning\"\r\n                          style={{ marginLeft: 5 }}\r\n                        >\r\n                          12\r\n                        </span>\r\n                        {/* </a> */}\r\n                        <ul\r\n                          aria-labelledby=\"notifications\"\r\n                          class=\"dropdown-menu\"\r\n                        >\r\n                          <li>\r\n                            <a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\">\r\n                              <div class=\"notification d-flex justify-content-between\">\r\n                                <div class=\"notification-content\">\r\n                                  <i class=\"fa fa-envelope\"></i>You have 6 new\r\n                                  messages\r\n                                </div>\r\n                                <div class=\"notification-time\">\r\n                                  <small>4 minutes ago</small>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\">\r\n                              <div class=\"notification d-flex justify-content-between\">\r\n                                <div class=\"notification-content\">\r\n                                  <i class=\"fa fa-twitter\"></i>You have 2\r\n                                  followers\r\n                                </div>\r\n                                <div class=\"notification-time\">\r\n                                  <small>4 minutes ago</small>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\">\r\n                              <div class=\"notification d-flex justify-content-between\">\r\n                                <div class=\"notification-content\">\r\n                                  <i class=\"fa fa-upload\"></i>Server Rebooted\r\n                                </div>\r\n                                <div class=\"notification-time\">\r\n                                  <small>4 minutes ago</small>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\">\r\n                              <div class=\"notification d-flex justify-content-between\">\r\n                                <div class=\"notification-content\">\r\n                                  <i class=\"fa fa-twitter\"></i>You have 2\r\n                                  followers\r\n                                </div>\r\n                                <div class=\"notification-time\">\r\n                                  <small>10 minutes ago</small>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a\r\n                              rel=\"nofollow\"\r\n                              href=\"#\"\r\n                              class=\"dropdown-item all-notifications text-center\"\r\n                            >\r\n                              <strong>\r\n                                <i class=\"fa fa-bell\"></i>view all notifications\r\n                              </strong>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </li>\r\n                      {/* <!-- Messages dropdown--> */}\r\n                      <li class=\"nav-item dropdown\" style={{ marginLeft: 10 }}>\r\n                        <a\r\n                          id=\"messages\"\r\n                          rel=\"nofollow\"\r\n                          data-target=\"#\"\r\n                          href=\"#\"\r\n                          data-toggle=\"dropdown\"\r\n                          aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\"\r\n                          class=\"nav-link\"\r\n                        >\r\n                          <i class=\"fa fa-envelope\"></i>\r\n                          <span\r\n                            class=\"badge badge-info\"\r\n                            style={{ marginLeft: 5 }}\r\n                          >\r\n                            10\r\n                          </span>\r\n                        </a>\r\n                        <ul\r\n                          aria-labelledby=\"notifications\"\r\n                          class=\"dropdown-menu\"\r\n                        >\r\n                          <li>\r\n                            <a\r\n                              rel=\"nofollow\"\r\n                              href=\"#\"\r\n                              class=\"dropdown-item d-flex\"\r\n                            >\r\n                              <div class=\"msg-profile\">\r\n                                <img\r\n                                  src=\"img/avatar-1.jpg\"\r\n                                  alt=\"...\"\r\n                                  class=\"img-fluid rounded-circle\"\r\n                                />\r\n                              </div>\r\n                              <div class=\"msg-body\">\r\n                                <h3 class=\"h5\">Jason Doe</h3>\r\n                                <span>sent you a direct message</span>\r\n                                <small>\r\n                                  3 days ago at 7:58 pm - 10.06.2014\r\n                                </small>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a\r\n                              rel=\"nofollow\"\r\n                              href=\"#\"\r\n                              class=\"dropdown-item d-flex\"\r\n                            >\r\n                              <div class=\"msg-profile\">\r\n                                <img\r\n                                  src=\"img/avatar-2.jpg\"\r\n                                  alt=\"...\"\r\n                                  class=\"img-fluid rounded-circle\"\r\n                                />\r\n                              </div>\r\n                              <div class=\"msg-body\">\r\n                                <h3 class=\"h5\">Frank Williams</h3>\r\n                                <span>sent you a direct message</span>\r\n                                <small>\r\n                                  3 days ago at 7:58 pm - 10.06.2014\r\n                                </small>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a\r\n                              rel=\"nofollow\"\r\n                              href=\"#\"\r\n                              class=\"dropdown-item d-flex\"\r\n                            >\r\n                              <div class=\"msg-profile\">\r\n                                <img\r\n                                  src=\"img/avatar-3.jpg\"\r\n                                  alt=\"...\"\r\n                                  class=\"img-fluid rounded-circle\"\r\n                                />\r\n                              </div>\r\n                              <div class=\"msg-body\">\r\n                                <h3 class=\"h5\">Ashley Wood</h3>\r\n                                <span>sent you a direct message</span>\r\n                                <small>\r\n                                  3 days ago at 7:58 pm - 10.06.2014\r\n                                </small>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            <a\r\n                              rel=\"nofollow\"\r\n                              href=\"#\"\r\n                              class=\"dropdown-item all-notifications text-center\"\r\n                            >\r\n                              <strong>\r\n                                <i class=\"fa fa-envelope\"></i>Read all messages\r\n                              </strong>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </nav>\r\n            </header>\r\n          </div>\r\n\r\n          <div class=\"header-right\">\r\n            <ul class=\"header-menu nav navbar-nav\">\r\n              {/* BEGIN USER DROPDOWN */}\r\n              <li class=\"dropdown\" id=\"user-header\">\r\n                <a\r\n                  href=\"#\"\r\n                  data-toggle=\"dropdown\"\r\n                  data-hover=\"dropdown\"\r\n                  data-close-others=\"true\"\r\n                >\r\n                  <img\r\n                    // src={`${ServerURL}/images/${vendor.companylogo}`}\r\n                    src=\"/images/admin.png\"\r\n                    class=\"img-responsive img-circle\"\r\n                    alt=\"friend 8\"\r\n                  />\r\n                  <span class=\"username\">Hi, {vendor.companyname}</span>\r\n                </a>\r\n                <ul class=\"dropdown-menu\">\r\n                  <li>\r\n                    <a href=\"VendorLogin\">\r\n                      <i class=\"icon-logout\"></i>\r\n                      <span>Logout</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              {/* END USER DROPDOWN */}\r\n              {/* CHAT BAR ICON */}\r\n            </ul>\r\n          </div>\r\n          {/* header-right */}\r\n        </div>\r\n        {/* END TOPBAR */}\r\n        {/* BEGIN PAGE CONTENT */}\r\n\r\n        <div class=\"page-content\">\r\n          <div class=\"header\">\r\n            <div class=\"col-lg-12\">{ShowComponent}</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12\" style={{ height: \"720px\" }}>\r\n                {/* HERE COMES YOUR CONTENT  */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            <div class=\"copyright\">\r\n              <p class=\"pull-left sm-pull-reset\"></p>\r\n              <p class=\"pull-right sm-pull-reset\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* END PAGE CONTENT */}\r\n      </div>\r\n      {/* END MAIN CONTENT */}\r\n      {/* BEGIN BUILDER */}\r\n      <div class=\"builder hidden-sm hidden-xs\" id=\"builder\">\r\n        <a class=\"builder-toggle\">\r\n          <i class=\"icon-wrench\"></i>\r\n        </a>\r\n        <div class=\"inner\">\r\n          <div class=\"builder-container\">\r\n            <a href=\"#\" class=\"btn btn-sm btn-default\" id=\"reset-style\">\r\n              reset default style\r\n            </a>\r\n            <h4>Layout options</h4>\r\n            <div class=\"layout-option\">\r\n              <span> Fixed Sidebar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar\"\r\n                  id=\"switch-sidebar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Sidebar on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar-hover\"\r\n                  id=\"switch-sidebar-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Submenu on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"submenu-hover\"\r\n                  id=\"switch-submenu-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Fixed Topbar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"topbar\"\r\n                  id=\"switch-topbar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Boxed Layout</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"boxed\"\r\n                  id=\"switch-boxed\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <h4 class=\"border-top\">Color</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"theme-color bg-dark\"\r\n                  data-main=\"default\"\r\n                  data-color=\"#2B2E33\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color background-primary\"\r\n                  data-main=\"primary\"\r\n                  data-color=\"#319DB5\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-red\"\r\n                  data-main=\"red\"\r\n                  data-color=\"#C75757\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-green\"\r\n                  data-main=\"green\"\r\n                  data-color=\"#1DA079\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-orange\"\r\n                  data-main=\"orange\"\r\n                  data-color=\"#D28857\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-purple\"\r\n                  data-main=\"purple\"\r\n                  data-color=\"#B179D7\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-blue\"\r\n                  data-main=\"blue\"\r\n                  data-color=\"#4A89DC\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Theme</h4>\r\n            <div class=\"row row-sm\">\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtl\" data-theme=\"sdtl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltd\" data-theme=\"sltd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtd\" data-theme=\"sdtd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltl\" data-theme=\"sltl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Background</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"bg-color bg-clean\"\r\n                  data-bg=\"clean\"\r\n                  data-color=\"#F8F8F8\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-lighter\"\r\n                  data-bg=\"lighter\"\r\n                  data-color=\"#EFEFEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-default\"\r\n                  data-bg=\"light-default\"\r\n                  data-color=\"#E9E9E9\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-blue\"\r\n                  data-bg=\"light-blue\"\r\n                  data-color=\"#E2EBEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-purple\"\r\n                  data-bg=\"light-purple\"\r\n                  data-color=\"#E9ECF5\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-dark\"\r\n                  data-bg=\"light-dark\"\r\n                  data-color=\"#DCE1E4\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n      {/* END BUILDER */}\r\n      {/* </section> */}\r\n      {/* BEGIN QUICKVIEW SIDEBAR */}\r\n      <div id=\"quickview-sidebar\">\r\n        <div class=\"quickview-header\">\r\n          <ul class=\"nav nav-tabs\">\r\n            <li class=\"active\">\r\n              <a href=\"#chat\" data-toggle=\"tab\">\r\n                Chat\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#notes\" data-toggle=\"tab\">\r\n                Notes\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#settings\" data-toggle=\"tab\" class=\"settings-tab\">\r\n                Settings\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"quickview\">\r\n          <div class=\"tab-content\">\r\n            <div class=\"tab-pane fade\" id=\"settings\">\r\n              <div class=\"settings\">\r\n                <div class=\"title\">ACCOUNT SETTINGS</div>\r\n                <div class=\"setting\">\r\n                  <span> Show Personal Statut</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Picture</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"title\">CHAT</div>\r\n                <div class=\"setting\">\r\n                  <span> Show User Image</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Fullname</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Unread Count</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"m-t-30\" style={{ width: \"100%\" }}>\r\n                  <canvas id=\"setting-chart\" height=\"300\"></canvas>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* END QUICKVIEW SIDEBAR */}\r\n      {/* BEGIN SEARCH */}\r\n    </div>\r\n    // <div className={classes.root}>\r\n    //   <CssBaseline />\r\n    //   <AppBar\r\n    //     position=\"absolute\"\r\n    //     className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    //   >\r\n    //     <Toolbar className={classes.toolbar}>\r\n    //       <IconButton\r\n    //         edge=\"start\"\r\n    //         color=\"inherit\"\r\n    //         aria-label=\"open drawer\"\r\n    //         onClick={handleDrawerOpen}\r\n    //         className={clsx(\r\n    //           classes.menuButton,\r\n    //           open && classes.menuButtonHidden\r\n    //         )}\r\n    //       >\r\n    //         <MenuIcon />\r\n    //       </IconButton>\r\n    //       <Typography\r\n    //         component=\"h1\"\r\n    //         variant=\"h6\"\r\n    //         color=\"inherit\"\r\n    //         noWrap\r\n    //         className={classes.title}\r\n    //       >\r\n    //         <div>{vendor.companyname}</div>\r\n    //       </Typography>\r\n    //       <div>\r\n    //         <Avatar\r\n    //           alt=\"Remy Sharp\"\r\n    //           src={`${ServerURL}/images/${vendor.companylogo}`}\r\n    //           variant=\"rounded\"\r\n    //           className={classes.large}\r\n    //         />\r\n    //       </div>\r\n    //     </Toolbar>\r\n    //   </AppBar>\r\n    //   <Drawer\r\n    //     variant=\"permanent\"\r\n    //     classes={{\r\n    //       paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n    //     }}\r\n    //     open={open}\r\n    //   >\r\n    //     <div className={classes.toolbarIcon}>\r\n    //       <img src=\"/images/logo.png\" width=\"150\" />\r\n    //       <IconButton onClick={handleDrawerClose}>\r\n    //         <ChevronLeftIcon />\r\n    //       </IconButton>\r\n    //     </div>\r\n    //     <Divider />\r\n    //     <List>\r\n    //       <ListItems handleComponentsReference={handleComponents} />\r\n    //     </List>\r\n    //     <Divider />\r\n    //   </Drawer>\r\n    //   <main className={classes.content}>\r\n    //     <div className={classes.appBarSpacer} />\r\n    //     <Container maxWidth=\"lg\" className={classes.container}>\r\n    //       {ShowComponent}\r\n    //     </Container>\r\n    //   </main>\r\n    // </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\DashOne.js",["886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ListItems from \"./ListItems\";\r\nimport { getData, postData, ServerURL } from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PackageInterface from \"../packages/PackageInterface\";\r\nimport DisplayAllPackages from \"../packages/DisplayAllPackages\";\r\nimport DisplayAllVendors from \"../vendor/DisplayAllVendors\";\r\nimport DisplayAllFeaturesPackages from \"../feature packages/DisplayAllFeaturesPackages\";\r\nimport Vendors from \"../vendor/Vendors\";\r\nimport FeaturesPackages from \"../feature packages/FeaturesPackages\";\r\nimport AnalogueClock from \"react-analogue-clock\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n\r\n  toproot: {\r\n    // backgroundColor:'#81ecec',\r\n    // borderRadius:15,\r\n    maxHeight:350,\r\n    padding:3,\r\n    width:400,\r\n    // height:450,\r\n    // margin:20,\r\n    display:'flex',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    // border:'1px solid #dcdde1'\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function DashOne(props) {\r\n  const classes = useStyles();\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n/// For Slider...\r\n  var settings = {\r\n    arrows:false,\r\n    autoplay:true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    autoplaySpeed: 2000\r\n    // nextArrow: <SampleNextArrow />,\r\n    // prevArrow: <SamplePrevArrow />\r\n    // nextArrow:false,\r\n    // prevArrow:false\r\n  };\r\n\r\n  const clockOptions = {\r\n    baseColor: \"#ffffff\",\r\n    borderColor: \"#000000\",\r\n    borderWidth: 5,\r\n    centerColor: \"#000000\",\r\n    handColors: {\r\n      hour: \"#000000\",\r\n      minute: \"#000000\",\r\n      second: \"#000000\",\r\n    },\r\n    notchColor: \"#000000\",\r\n    numbersColor: \"#000000\",\r\n    showNumbers: true,\r\n    size: 250,\r\n  };\r\n\r\n  const [getVendor, setVendor] = useState([]);\r\n  const [VendorsCount, setVendorsCount] = useState('')\r\n  const [PackagesCount, setPackagesCount] = useState('')\r\n  const [getTotalEmp, setTotalEmp] = useState(100);\r\n  const [getCountEmp, setCountEmp] = useState(10);\r\n  const [getPackageName, setPackageName] = useState(\"Gold\");\r\n\r\n  useEffect(() => {\r\n    // var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    // setVendor(vendor);\r\n    // fetchLicenceRecord(vendor.vendorid);\r\n    // fetchCountEmp(vendor.vendorid);\r\n    fetchVendorsList();\r\n    fetchPackageCounts();\r\n  }, []);\r\n\r\n  // const fetchLicenceRecord = async (V_id) => {\r\n  //   let body = {\r\n  //     vendorid: V_id,\r\n  //   };\r\n  //   let result = await postData(\"packagecustomer/displayPackage\", body);\r\n  //   if (result.status) {\r\n  //     // setPackageId(result.result[0].packageid);\r\n  //     fetchTotalLicence(result.result[0].packageid);\r\n  //   }\r\n  // };\r\n\r\n  // const fetchTotalLicence = async (pack_id) => {\r\n  //   let body = {\r\n  //     packageid: pack_id,\r\n  //   };\r\n  //   let result = await postData(\"packages/displayPackageTotal\", body);\r\n  //   if (result.status) {\r\n  //     setTotalEmp(result.result[0].noofusers);\r\n  //     setPackageName(result.result[0].packagename);\r\n  //   }\r\n  // };\r\n\r\n  // const fetchCountEmp = async (V_id) => {\r\n  //   var body = {\r\n  //     vendorid: V_id,\r\n  //   };\r\n  //   var rslt = await postData(\"employees/countemployee\", body);\r\n  //   if (rslt.status) {\r\n  //     setCountEmp(rslt.data[0].num);\r\n  //   }\r\n  // };\r\n\r\n\r\n  const fetchVendorsList=async()=>{\r\n    var result = await getData('vendors/displayall')\r\n    console.log('resultttttttttttttttttTTTTTTTT',result);\r\n    // console.log('VendorsCount',result.data.length)\r\n    if(result)\r\n    {     \r\n      setVendor(result.data)\r\n      setVendorsCount(result.data.length)\r\n\r\n    }\r\n  }\r\n\r\n  const renderItem=()=>{\r\n    return(\r\n    getVendor.map((item)=>{\r\n      return(\r\n        \r\n        <div className={classes.toproot}>\r\n        <div class=\"panel widget-member\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xs-3\">\r\n              <img\r\n               // src=\"/images/avatar-4.jpg\"\r\n                src={`${ServerURL}/images/${item.companylogo}`}\r\n                alt=\"avatar 12\"\r\n                class=\"pull-left img-responsive\"\r\n              />\r\n            </div>\r\n            <div class=\"col-xs-9\">\r\n              <h3 class=\"m-t-0 member-name\">\r\n                <strong>{item.vendorname}</strong>\r\n              </h3>\r\n              <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                Accu Track{\" \"}\r\n                <i\r\n                  class=\"fa fa-book\"\r\n                  style={{\r\n                    color: \"blue\",\r\n                    fontSize: 17,\r\n                    marginLeft: 5,\r\n                  }}\r\n                ></i>\r\n                {/*  */}\r\n              </p>\r\n              <p class=\"member-jobV\">{item.mobileno}</p>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"col-lg-3\">\r\n                    <p>\r\n                      <i\r\n                        class=\"fa fa-wifi\"\r\n                        style={{ color: \"green\", fontSize: 17 }}\r\n                      ></i>\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <p>\r\n                      <i\r\n                        class=\"fa fa-battery-half\"\r\n                        style={{ color: \"black\", fontSize: 17 }}\r\n                      ></i>\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <p style={{ display: \"flex\" }}>\r\n                      <i\r\n                        class=\"fa fa-percent\"\r\n                        style={{ color: \"green\", fontSize: 17 }}\r\n                      ></i>\r\n                      50\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <p>\r\n                      <i\r\n                        class=\"fa fa-map-marker\"\r\n                        style={{ color: \"red\", fontSize: 17 }}\r\n                      ></i>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"vikramsub\">\r\n              <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n              <span class=\"locationV\">\r\n                <i\r\n                  class=\"fa fa-map-marker\"\r\n                  style={{ color: \"white\", marginRight: 4 }}\r\n                ></i>\r\n                Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n              </span>\r\n            </div>\r\n            <div class=\"card-bodyV\">\r\n              <span class=\"dataV\">\r\n                <span class=\"textV\">Tasks Completed</span>\r\n                <span class=\"countV\">0</span>\r\n              </span>\r\n              <span class=\"dataV\">\r\n                <span class=\"textV\">Tasks not started</span>\r\n                <span class=\"countV\">0</span>\r\n              </span>\r\n            </div>\r\n            <div\r\n              class=\"footerV\"\r\n              style={{ backgroundColor: \"white\", color: \"black\" }}\r\n            >\r\n              <span class=\"text\">No active Task</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      )\r\n    }\r\n    )\r\n    \r\n    )\r\n  }\r\n\r\n\r\n  const fetchPackageCounts=async()=>{\r\n    var counts = await getData('packages/displayall')\r\n    console.log('packagesCounts',counts)\r\n    if(counts)\r\n    {\r\n      setPackagesCount(counts.data.length)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*  className={classes.root} */}\r\n      {/* <CssBaseline /> */}\r\n\r\n      <div class=\"\">\r\n        {/* BEGIN PAGE CONTENT */}\r\n        <div class=\"\">\r\n          <div>\r\n              <div >\r\n                {/* <div class=\"col-md-12 portlets\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-header panel-controls\">\r\n                      <h3>\r\n                        Colored <strong>version</strong>\r\n                      </h3>\r\n                    </div>\r\n                    <div class=\"panel-content\">\r\n                      <ul class=\"nav nav-tabs nav-primary\">\r\n                        <li class=\"\">\r\n                          <a href=\"#tab2_1\" data-toggle=\"tab\">\r\n                            <i class=\"icon-home\"></i> Home\r\n                          </a>\r\n                        </li>\r\n                        <li class=\"active\">\r\n                          <a href=\"#tab2_2\" data-toggle=\"tab\">\r\n                            <i class=\"icon-user\"></i> Profile\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#tab2_3\" data-toggle=\"tab\">\r\n                            <i class=\"icon-cloud-download\"></i> Other Tab\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                      <div class=\"tab-content\">\r\n                        <div class=\"tab-pane fade\" id=\"tab2_1\">\r\n                          <div class=\"row column-seperation\">\r\n                            <div class=\"col-md-6 line-separator\">\r\n                              <h3>\r\n                                <strong>Big</strong> Title for your tab\r\n                              </h3>\r\n                              <h4>Customize your tab as you want easily</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                              <p class=\"light\">\r\n                                default, the textarea element comes with a\r\n                                vertical scrollbar (and maybe even a horizontal\r\n                                scrollbar). This vertical scrollbar enables the\r\n                                user to continue entering and reviewing their\r\n                                text (by scrolling up and down).\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"tab-pane fade active in\" id=\"tab2_2\">\r\n                          <h3>\r\n                            \"Sooner or later, those who win are those who think\r\n                            they <strong>can</strong>.\"\r\n                          </h3>\r\n                          <p>\r\n                            Food truck fixie locavore, accusamus mcsweeney's\r\n                            marfa nulla single-origin coffee squid. Exercitation\r\n                            +1 labore velit, blog sartorial.\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"tab-pane fade\" id=\"tab2_3\">\r\n                          <p>\r\n                            Etsy mixtape wayfarers, ethical wes anderson tofu\r\n                            before they sold out mcsweeney's organic lomo retro\r\n                            fanny pack lo-fi farm-to-table readymade. Messenger\r\n                            bag gentrify pitchfork tattooed craft beer, iphone\r\n                            skateboard locavore carles etsy salvia banksy hoodie\r\n                            helvetica. DIY synth PBR banksy irony. Leggings\r\n                            gentrify squid 8-bit cred pitchfork. Williamsburg\r\n                            banh mi whatever gluten-free, carles pitchfork\r\n                            biodiesel fixie etsy retro mlkshk vice blog.\r\n                            Scenester cred you probably haven't heard of them,\r\n                            vinyl craft beer blog stumptown. Pitchfork\r\n                            sustainable tofu synth chambray yr.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n\r\n{/* \r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-2.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>NIVRATI JAIN</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+919303533532</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-6.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>Prashant Rana</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+917773883041</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-2.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>NIVRATI JAIN</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+919303533532</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n                   <Slider {...settings}>        \r\n                   {renderItem()}\r\n                   </Slider>\r\n              </div>\r\n\r\n              {/* aaa */}\r\n              <div class=\"row m-t-10\">\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-umbrella bg-green\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"0\"\r\n                            // data-to=\"5200\"\r\n                          >\r\n                            {VendorsCount}\r\n                          </p>\r\n                          <p class=\"text\">Vendors</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-bug bg-blue\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"1234\"\r\n                            // data-to=\"575\"\r\n                            // data-suffix=\"k\"\r\n                          >\r\n                            {PackagesCount}\r\n                          </p>\r\n                          <p class=\"text\">Packages</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-fire-extinguisher bg-red\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"222\"\r\n                            // data-to=\"463\"\r\n                            // data-suffix=\"k\"\r\n                          >\r\n                            {getTotalEmp - getCountEmp}\r\n                          </p>\r\n                          <p class=\"text\">Remaining Licences</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"icon-microphone bg-purple\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"0\"\r\n                            // data-to=\"1210\"\r\n                          >\r\n                            {getPackageName}\r\n                          </p>\r\n                          <p class=\"text\">Package Name</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div class=\"row\">\r\n        \r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-red\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-primary\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-dark\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n              {/* \r\n              <div class=\"m-b-30\">\r\n                <div class=\"panel panel-default\">\r\n                  <div class=\"panel-body p-10\">\r\n                    <div class=\"text-center col-xs-4\">\r\n                      <img\r\n                        src=\"/images/1.png\"\r\n                        class=\"img-responsive\"\r\n                        alt=\"avatar 4\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"clearfix col-xs-8\">\r\n                      <h2 class=\"c-dark w-600\">Winston Bowman</h2>\r\n                      <p class=\"c-gray f-16\">Photographer</p>\r\n                      <p class=\"c-gray\">\r\n                        <i class=\"fa fa-map-marker p-r-10\"></i> Trade Business\r\n                        Park, Ohio\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"panel-footer p-t-0 p-b-0\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-4 bg-blue p-20\">\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 icon-speech\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">1568</div>\r\n                      </div>\r\n                      <div class=\"col-xs-4 bg-purple p-20\">\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 icon-users\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">866</div>\r\n                      </div>\r\n                      <div class=\"col-xs-4 bg-primary\" style={{ padding: 15 }}>\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 fa icon-heart\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">254</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            */}\r\n             </div>\r\n\r\n          <section class=\"dashboard-header section-padding\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row d-flex align-items-md-stretch\">\r\n                {/* <!-- To Do List--> */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card to-do\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">To do List</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <ul class=\"check-lists list-unstyled\">\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-1\"\r\n                          name=\"list-1\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-1\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-2\"\r\n                          name=\"list-2\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-2\">\r\n                          Ed ut perspiciatis unde omnis iste\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-3\"\r\n                          name=\"list-3\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-3\">\r\n                          At vero eos et accusamus et iusto\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-4\"\r\n                          name=\"list-4\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-4\">\r\n                          Explicabo Nemo ipsam voluptatem\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-5\"\r\n                          name=\"list-5\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-5\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-6\"\r\n                          name=\"list-6\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-6\">\r\n                          At vero eos et accusamus et iusto\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-7\"\r\n                          name=\"list-7\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-7\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-8\"\r\n                          name=\"list-8\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-8\">\r\n                          Ed ut perspiciatis unde omnis iste\r\n                        </label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Pie Chart--> */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card project-progress\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">Project Beta progress</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <div class=\"pie-chart\">\r\n                      <canvas id=\"pieChart\" style={{ width: 300, height: 300 }}>\r\n                        {\" \"}\r\n                      </canvas>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Line Chart --> */}\r\n                {/* <div\r\n              class=\"col-lg-6 col-md-12 flex-lg-last flex-md-first align-self-baseline\"\r\n            > */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card sales-report\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">Sales marketing report</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <div class=\"line-chart\">\r\n                      <canvas id=\"lineCahrt\"></canvas>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\" style={{ height: \"720px\" }}></div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            <div class=\"copyright\">\r\n              <p class=\"pull-left sm-pull-reset\">\r\n                {/* <span>\r\n                  Copyright <span class=\"copyright\">©</span> 2016{\" \"}\r\n                </span>\r\n                <span>THEMES LAB</span>.<span>All rights reserved. </span> */}\r\n              </p>\r\n              <p class=\"pull-right sm-pull-reset\">\r\n                {/* <span>\r\n                  <a href=\"#\" class=\"m-r-10\">\r\n                    Support\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10 m-r-10\">\r\n                    Terms of use\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10\">\r\n                    Privacy Policy\r\n                  </a>\r\n                </span> */}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* END PAGE CONTENT */}\r\n      </div>\r\n      {/* END MAIN CONTENT */}\r\n      {/* BEGIN BUILDER */}\r\n      <div class=\"builder hidden-sm hidden-xs\" id=\"builder\">\r\n        <a class=\"builder-toggle\">\r\n          <i class=\"icon-wrench\"></i>\r\n        </a>\r\n        <div class=\"inner\">\r\n          <div class=\"builder-container\">\r\n            <a href=\"#\" class=\"btn btn-sm btn-default\" id=\"reset-style\">\r\n              reset default style\r\n            </a>\r\n            <h4>Layout options</h4>\r\n            <div class=\"layout-option\">\r\n              <span> Fixed Sidebar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar\"\r\n                  id=\"switch-sidebar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Sidebar on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar-hover\"\r\n                  id=\"switch-sidebar-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Submenu on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"submenu-hover\"\r\n                  id=\"switch-submenu-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Fixed Topbar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"topbar\"\r\n                  id=\"switch-topbar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Boxed Layout</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"boxed\"\r\n                  id=\"switch-boxed\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <h4 class=\"border-top\">Color</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"theme-color bg-dark\"\r\n                  data-main=\"default\"\r\n                  data-color=\"#2B2E33\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color background-primary\"\r\n                  data-main=\"primary\"\r\n                  data-color=\"#319DB5\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-red\"\r\n                  data-main=\"red\"\r\n                  data-color=\"#C75757\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-green\"\r\n                  data-main=\"green\"\r\n                  data-color=\"#1DA079\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-orange\"\r\n                  data-main=\"orange\"\r\n                  data-color=\"#D28857\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-purple\"\r\n                  data-main=\"purple\"\r\n                  data-color=\"#B179D7\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-blue\"\r\n                  data-main=\"blue\"\r\n                  data-color=\"#4A89DC\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Theme</h4>\r\n            <div class=\"row row-sm\">\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtl\" data-theme=\"sdtl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltd\" data-theme=\"sltd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtd\" data-theme=\"sdtd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltl\" data-theme=\"sltl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Background</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"bg-color bg-clean\"\r\n                  data-bg=\"clean\"\r\n                  data-color=\"#F8F8F8\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-lighter\"\r\n                  data-bg=\"lighter\"\r\n                  data-color=\"#EFEFEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-default\"\r\n                  data-bg=\"light-default\"\r\n                  data-color=\"#E9E9E9\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-blue\"\r\n                  data-bg=\"light-blue\"\r\n                  data-color=\"#E2EBEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-purple\"\r\n                  data-bg=\"light-purple\"\r\n                  data-color=\"#E9ECF5\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-dark\"\r\n                  data-bg=\"light-dark\"\r\n                  data-color=\"#DCE1E4\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n      {/* END BUILDER */}\r\n      {/* </section> */}\r\n      {/* BEGIN QUICKVIEW SIDEBAR */}\r\n      <div id=\"quickview-sidebar\">\r\n        <div class=\"quickview-header\">\r\n          <ul class=\"nav nav-tabs\">\r\n            <li class=\"active\">\r\n              <a href=\"#chat\" data-toggle=\"tab\">\r\n                Chat\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#notes\" data-toggle=\"tab\">\r\n                Notes\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#settings\" data-toggle=\"tab\" class=\"settings-tab\">\r\n                Settings\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"quickview\">\r\n          <div class=\"tab-content\">\r\n            <div class=\"tab-pane fade active in\" id=\"chat\">\r\n              <div class=\"chat-body current\">\r\n                <div class=\"chat-search\">\r\n                  <form class=\"form-inverse\" action=\"#\" role=\"search\">\r\n                    <div class=\"append-icon\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Search contact...\"\r\n                      />\r\n                      <i class=\"icon-magnifier\"></i>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div class=\"chat-groups\">\r\n                  <div class=\"title\">GROUP CHATS</div>\r\n                  <ul>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Favorites\r\n                    </li>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Office Work\r\n                    </li>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Friends\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"chat-list\">\r\n                  <div class=\"title\">FAVORITES</div>\r\n                  <ul>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar13.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Bobby Brown</div>\r\n                        <div class=\"user-txt\">On the road again...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"online\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar5.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                        <div class=\"pull-right badge badge-danger\">3</div>\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Alexa Johnson</div>\r\n                        <div class=\"user-txt\">Still at the beach</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"away\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar10.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Bobby Brown</div>\r\n                        <div class=\"user-txt\">On stage...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"busy\"></i>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"chat-list\">\r\n                  <div class=\"title\">FRIENDS</div>\r\n                  <ul>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar7.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                        <div class=\"pull-right badge badge-danger\">3</div>\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">James Miller</div>\r\n                        <div class=\"user-txt\">At work...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"online\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar11.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Fred Smith</div>\r\n                        <div class=\"user-txt\">Waiting for tonight</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"offline\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar8.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Ben Addams</div>\r\n                        <div class=\"user-txt\">On my way to NYC</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"offline\"></i>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div class=\"chat-conversation\">\r\n                <div class=\"conversation-header\">\r\n                  <div class=\"user clearfix\">\r\n                    <div class=\"chat-back\">\r\n                      <i class=\"icon-action-undo\"></i>\r\n                    </div>\r\n                    <div class=\"user-details\">\r\n                      <div class=\"user-name\">James Miller</div>\r\n                      <div class=\"user-txt\">On the road again...</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"conversation-body\">\r\n                  <ul>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:38pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Hi you!</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:45pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Are you there?</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:51pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Send me a message when you come back.</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"conversation-message\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your message...\"\r\n                    class=\"form-control form-white send-message\"\r\n                  />\r\n                  <div class=\"item-footer clearfix\">\r\n                    <div class=\"footer-actions\">\r\n                      <i class=\"icon-rounded-marker\"></i>\r\n                      <i class=\"icon-rounded-camera\"></i>\r\n                      <i class=\"icon-rounded-paperclip-oblique\"></i>\r\n                      <i class=\"icon-rounded-alarm-clock\"></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"notes\">\r\n              <div class=\"list-notes current withScroll\">\r\n                <div class=\"notes \">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div id=\"add-note\">\r\n                        <i class=\"fa fa-plus\"></i>ADD A NEW NOTE\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"notes-list\">\r\n                    <div class=\"note-item media current fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Reset my account password</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">Break security reasons.</p>\r\n                        <p>\r\n                          <small>Tuesday 6 May, 3:52 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Call John</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">He have my laptop!</p>\r\n                        <p>\r\n                          <small>Thursday 8 May, 2:28 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Buy a car</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I'm done with the bus</p>\r\n                        <p>\r\n                          <small>Monday 12 May, 3:43 am</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Don't forget my notes</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I have to read them...</p>\r\n                        <p>\r\n                          <small>Wednesday 5 May, 6:15 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media current fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Reset my account password</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">Break security reasons.</p>\r\n                        <p>\r\n                          <small>Tuesday 6 May, 3:52 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Call John</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">He have my laptop!</p>\r\n                        <p>\r\n                          <small>Thursday 8 May, 2:28 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Buy a car</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I'm done with the bus</p>\r\n                        <p>\r\n                          <small>Monday 12 May, 3:43 am</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Don't forget my notes</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I have to read them...</p>\r\n                        <p>\r\n                          <small>Wednesday 5 May, 6:15 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"detail-note note-hidden-sm\">\r\n                <div class=\"note-header clearfix\">\r\n                  <div class=\"note-back\">\r\n                    <i class=\"icon-action-undo\"></i>\r\n                  </div>\r\n                  <div class=\"note-edit\">Edit Note</div>\r\n                  <div class=\"note-subtitle\">title on first line</div>\r\n                </div>\r\n                <div id=\"note-detail\">\r\n                  <div class=\"note-write\">\r\n                    <textarea\r\n                      class=\"form-control\"\r\n                      placeholder=\"Type your note here\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"settings\">\r\n              <div class=\"settings\">\r\n                <div class=\"title\">ACCOUNT SETTINGS</div>\r\n                <div class=\"setting\">\r\n                  <span> Show Personal Statut</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Picture</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"title\">CHAT</div>\r\n                <div class=\"setting\">\r\n                  <span> Show User Image</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Fullname</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Unread Count</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"m-t-30\" style={{ width: \"100%\" }}>\r\n                  <canvas id=\"setting-chart\" height=\"300\"></canvas>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* END QUICKVIEW SIDEBAR */}\r\n      {/* BEGIN SEARCH */}\r\n      <div id=\"morphsearch\" class=\"morphsearch\">\r\n        {/* /morphsearch-content */}\r\n        <span class=\"morphsearch-close\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\FetchNodeServices.js",["922","923","924","925"],"var axios = require(\"axios\");\r\nconst GKey = \"AIzaSyCeL-_o98r7DE5H-BxKAYTSupPnio4M3Rs\";\r\nconst ServerURL = \"http://164.52.195.173:2000\";\r\nconst SocketURL = \"http://164.52.195.173:2000\";\r\n\r\n//To read Data from Node\r\n// const SocketURL = \"http://122.168.199.205:3000\";\r\n// const axios = require('axios');\r\n\r\n// const ServerURL = \"http://localhost:3001\";\r\n// const SocketURL = \"http://localhost:3001\";\r\n\r\n// const ServerURL = \"http://122.168.1.52:3001\";\r\n// const SocketURL = \"http://192.168.1.52:3001\";\r\n//const SocketURL='http://10.0.2.2:8002'\r\n\r\nconst getData = async (url) => {\r\n  try {\r\n    const response = await fetch(`${ServerURL}/${url}`);\r\n    const result = await response.json();\r\n    if (result == \"Session has Expired Please Login Again\") {\r\n      alert(\"Session has Expired Please Login Again\");\r\n      return [];\r\n    } else {\r\n      console.log(result);\r\n      return result;\r\n    }\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\n//To send data in node\r\nconst postData = async (url, body) => {\r\n  try {\r\n    const response = await fetch(`${ServerURL}/${url}`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json;charset=utf-8\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n    const result = await response.json();\r\n    if (result == \"Session has Expired Please Login Again\") {\r\n      alert(\"Session has Expired Please Login Again\");\r\n      return false;\r\n    } else {\r\n      console.log(result);\r\n      return result;\r\n    }\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\n//To send data with image in node\r\nconst postDataAndImage = async (url, formData, config) => {\r\n  try {\r\n    console.log(formData);\r\n    var response = await axios.post(`${ServerURL}/${url}`, formData, config);\r\n    if (response.data == \"Session has Expired Please Login Again\") {\r\n      alert(\"Session has Expired Please Login Again\");\r\n      return false;\r\n    } else {\r\n      console.log(result);\r\n      var result = response.data.RESULT;\r\n      return result;\r\n    }\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { postData, postDataAndImage, getData, ServerURL, SocketURL, GKey };\r\n\r\n/*.then((response)=>{\r\n                const result=response.data.Result\r\n                console.log(result)\r\n                 return result\r\n              } )\r\n        .catch(function(err){\r\n            console.log(err)\r\n            return false;\r\n        })*/\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Checks.js",["926","927","928","929","930","931","932","933","934","935","936"],"function checkRequire(txt){\r\n    console.log(\"txt\",txt)\r\n    if(txt.length==0)\r\n    { console.log(\"txt\",txt)\r\n    return false }\r\n    else\r\n    { console.log(\"txt\",txt)\r\n    return true}\r\n}\r\n\r\nfunction checkPassword(txt){\r\n    if(txt.length<=5)\r\n    return false\r\n    else\r\n    return true\r\n}\r\n\r\nfunction checkUserPassword(txt){\r\n    var reg=/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/\r\n    if(reg.test(txt)==false)\r\n    return false\r\n    else\r\n    return true\r\n}\r\n\r\nfunction checkPin(txt){\r\n    var reg=/[0-9]{6}/\r\n    //Alert.alert('cc '+reg.test(txt))\r\n    if(reg.test(txt)==false)\r\n     return false\r\n     else\r\n     return true\r\n}\r\n\r\n\r\nfunction checkMobile(txt){\r\n  var reg=/[0-9]{10}/\r\n       //Alert.alert('cc '+reg.test(txt))\r\n       if(reg.test(txt)==false)\r\n        return false\r\n        else\r\n        return true\r\n    \r\n    }\r\n\r\n function checkPhone(txt){\r\n        var reg=/^[0-9]+$/\r\n             //Alert.alert('cc '+reg.test(txt))\r\n             if(reg.test(txt)==false)\r\n              return false\r\n              else\r\n              return true\r\n          \r\n      }\r\n\r\n      function checkGst(txt){\r\n        var reg=/[a-zA-Z0-9]{15}/\r\n             //Alert.alert('cc '+reg.test(txt))\r\n             if(reg.test(txt)==false)\r\n              return false\r\n              else\r\n              return true\r\n          \r\n          }\r\n\r\nfunction checkEmail(txt)\r\n{if(checkRequire(txt))\r\n { var reg= /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n    if(reg.test(txt)==false)\r\n    {return false}\r\n    else\r\n    {return true}\r\n}\r\nelse\r\n{return false}\r\n\r\n }\r\n\r\n\r\nexport {checkRequire,checkMobile,checkEmail,checkPassword,checkPhone,checkGst,checkPin,checkUserPassword}","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Package customer\\PackageCustomer.js",["937","938","939","940","941","942","943","944","945","946","947","948","949"],"import React, { useEffect, useState } from \"react\";\r\nimport { postData, getData, ServerURL } from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Day } from \"@material-ui/pickers\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    // marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 160,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nfunction PackageCustomer() {\r\n  const classes = useStyles();\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getdate, setdate] = useState(\"\");\r\n  const [getPaymentstatus, setPaymentstatus] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getExpiredate, setExpiredate] = useState(\"\");\r\n  //   const [getErrPackageId, setErrPackageId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getList, setList] = useState([]);\r\n  const [getVendorList, setVendorList] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    var err = false;\r\n    // if (!checkRequire(getPackageId)) {\r\n    //   err = true;\r\n    //   setErrPackageId(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageId)) {\r\n    //   setErrPackageId(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageTime)) {\r\n    //   err = true;\r\n    //   setErrPackageTime(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageTime)) {\r\n    //   setErrPackageTime(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageDistance)) {\r\n    //   err = true;\r\n    //   setErrPackageDistance(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageDistance)) {\r\n    //   setErrPackageDistance(\"/images/tick.png\");\r\n    // }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        vendorid: getVendorId,\r\n        packageid: getPackageId,\r\n        date: getdate,\r\n        expiredate: getExpiredate,\r\n        paymentstatus: getPaymentstatus,\r\n        status: getStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"packagecustomer/add\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n    setVendorId(\"\");\r\n    setPackageId(\"\");\r\n    setdate(\"\");\r\n    setPaymentstatus(\"\");\r\n    setStatus(\"\");\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const fetchAllPackages = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  const fetchAllVendors = async () => {\r\n    var list = await getData(\"vendors/displayall\");\r\n    setVendorList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchAllPackages();\r\n    fetchAllVendors();\r\n    console.log(getdate);\r\n  }, []);\r\n\r\n  const handlePackageChange = (event) => {\r\n    setPackageId(event.target.value);\r\n  };\r\n\r\n  const handleVendorChange = (event) => {\r\n    setVendorId(event.target.value);\r\n  };\r\n\r\n  const fillPackageItem = () => {\r\n    return getList.map((item, key) => {\r\n      return <MenuItem value={item.packageid}>{item.packagename}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const fillVendorItem = () => {\r\n    return getVendorList.map((item, key) => {\r\n      return <MenuItem value={item.vendorid}>{item.vendorname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const OnchangeDate=(date)=>{\r\n    setdate(date);\r\n    const today = new Date(date);\r\n    // alert(today)\r\n    const expireDate = new Date(today);\r\n    expireDate.setDate(expireDate.getDate() + 90);\r\n    setExpiredate(expireDate.toString().substr(0,16))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"\">\r\n        <div class=\"panel panel-default no-bd\">\r\n          <div class=\"panel-header bg-dark\">\r\n            <h3 class=\"panel-title\">\r\n              <strong>Add Package Customer</strong>\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body bg-white\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 \">\r\n                <form\r\n                  role=\"form\"\r\n                  class=\"form-validation\"\r\n                  novalidate=\"novalidate\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Vendors</label>\r\n                        {/* <img src={getErrPackageId} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          {/* <FormControl fullWidth> */}\r\n\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getVendorId}\r\n                            fullWidth=\"true\"\r\n                            onChange={(event) => handleVendorChange(event)}\r\n                          >\r\n                            {fillVendorItem()}\r\n                          </Select>\r\n                          {/* </FormControl> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Packages</label>\r\n                        {/* <img src={getErrPackageId} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          {/* <FormControl fullWidth> */}\r\n\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getPackageId}\r\n                            fullWidth=\"true\"\r\n                            onChange={(event) => handlePackageChange(event)}\r\n                          >\r\n                            {fillPackageItem()}\r\n                          </Select>\r\n                          {/* </FormControl> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Date</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                        <DatePicker                       \r\n                         className=\"form-control\"\r\n                        selected={getdate}\r\n                        value={getdate}\r\n                         onChange={(date) => OnchangeDate(date)} \r\n                         minDate={new Date()}\r\n                         aria-required=\"true\"\r\n                         placeholderText=\"Date\"\r\n                        \r\n                         />\r\n                          {/* <input\r\n                            type=\"date\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Date\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getdate}\r\n                            onChange={(e) => todayDate(e)}\r\n                            \r\n                          /> */}\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Expire Date</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            // type=\"date\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Expire Date\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getExpiredate}\r\n                            readOnly\r\n                            // onChange={(e) => alert(e.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">PaymentStatus</label>\r\n                        <select\r\n                          class=\"form-control\"\r\n                          value={getPaymentstatus}\r\n                          onChange={(event) =>\r\n                            setPaymentstatus(event.target.value)\r\n                          }\r\n                        >\r\n                          <option>----Payement Status----</option>\r\n                          <option value=\"Pending\">Pending</option>\r\n                          <option value=\"Done\">Done</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        value={getStatus}\r\n                        onChange={(event) => setStatus(event.target.value)}\r\n                      >\r\n                        <option>----Status----</option>\r\n                        <option value=\"Activate\">Activate</option>\r\n                        <option value=\"Deactivate\">Deactivate</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // class=\"btn btn-embossed btn-primary\"\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                  {getMsg}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Paper className={classes.mainpaper}>\r\n        <Paper elevation={1} className={classes.headingstyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <b>&nbsp;&nbsp;&nbsp;Add Features Packages </b>\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} className={classes.center}>\r\n            <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Packages</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={getPackageId}\r\n                fullWidth=\"true\"\r\n                onChange={(event) => handlePackageChange(event)}\r\n              >\r\n                {fillPackageItem()}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Time\"\r\n              variant=\"standard\"\r\n              value={getPackageTime}\r\n              onChange={(event) => {\r\n                setPackageTime(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageDistance} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Distance\"\r\n              variant=\"standard\"\r\n              value={getPackageDistance}\r\n              onChange={(event) => {\r\n                setPackageDistance(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                ClearData();\r\n              }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PackageCustomer;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\statecity\\StateCity.js",[],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\Package customer\\DisplayPackageCustomer.js",["950","951","952","953","954","955","956","957","958","959","960","961","962","963","964"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  postData,\r\n  getData,\r\n  postDataAndImage,\r\n  ServerURL,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootx: {\r\n    display: \"flex\",\r\n    // marginTop: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tablediv: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 240,\r\n    fullWidth: \"true\",\r\n  },\r\n  root: {\r\n    // marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 15,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 120,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 15,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10\",\r\n  },\r\n}));\r\n\r\nfunction DisplayAllFeaturesPackages() {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        title: \"Package Customer\",\r\n        field: \"packagecustomerid\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Vendor\", field: \"vendorname\", editable: \"never\" },\r\n      { title: \"Package \", field: \"packagename\", editable: \"never\" },\r\n      { title: \"Date\", field: \"date\", editable: \"never\" },\r\n      { title: \"Expire Date\", field: \"expiredate\", editable: \"never\" },\r\n      { title: \"Payment Status\", field: \"paymentstatus\", editable: \"never\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getList, setList] = useState([]);\r\n  const [getPackageList, setPackageList] = useState([]);\r\n  const [getOpen, setOpen] = useState(false);\r\n  const [getPackageCustomerid, setPackageCustomerid] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getdate, setdate] = useState(\"\");\r\n  const [getPaymentstatus, setPaymentstatus] = useState(\"\");\r\n  const [getStatus, setStatus] = useState(\"\");\r\n  const [getExpiredate, setExpiredate] = useState(\"\");\r\n  //   const [getErrPackageId, setErrPackageId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getVendorList, setVendorList] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    let list = await getData(\"packagecustomer/display\");\r\n    setList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchData();\r\n    fetchAllPackages();\r\n    fetchAllVendors();\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { packagecustomerid: oldData.packagecustomerid };\r\n    await postData(\"packagecustomer/delete\", body);\r\n  };\r\n\r\n  const handleClickOpen = async (rowData) => {\r\n    setOpen(true);\r\n    fetchPackageInEditform(rowData.packagecustomerid);\r\n    setPackageCustomerid(rowData.packagecustomerid);\r\n    setVendorId(rowData.vendorid);\r\n    setPackageId(rowData.packageid);\r\n    setdate(rowData.date);\r\n    setExpiredate(rowData.expiredate);\r\n    setPaymentstatus(rowData.paymentstatus);\r\n    setStatus(rowData.status);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchData();\r\n    setMsg(\"\");\r\n    // setErrPackageDistance(\"\");\r\n    // setErrPackageId(\"\");\r\n    // setErrPackageTime(\"\");\r\n  };\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault();\r\n    var err = false;\r\n    // if (!checkRequire(getPackageId)) {\r\n    //   err = true;\r\n    //   setErrPackageId(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageId)) {\r\n    //   setErrPackageId(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageTime)) {\r\n    //   err = true;\r\n    //   setErrPackageTime(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageTime)) {\r\n    //   setErrPackageTime(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageDistance)) {\r\n    //   err = true;\r\n    //   setErrPackageDistance(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageDistance)) {\r\n    //   setErrPackageDistance(\"/images/tick.png\");\r\n    // }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        packagecustomerid: getPackageCustomerid,\r\n        vendorid: getVendorId,\r\n        packageid: getPackageId,\r\n        date: getdate,\r\n        expiredate: getExpiredate,\r\n        paymentstatus: getPaymentstatus,\r\n        status: getStatus,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"packagecustomer/update\", body);\r\n      if (result) {\r\n        setMsg(\"Record Edited ...\");\r\n      } else {\r\n        setMsg(\"Fail to Edit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n  };\r\n\r\n  const fetchPackageInEditform = async (packagecustomerid) => {\r\n    var body = { packagecustomerid: packagecustomerid };\r\n    //console.log(brandid)\r\n    var list = await postData(\r\n      \"featurespackages/displayPackageInEditform\",\r\n      body\r\n    );\r\n    //console.log('nidhi',list[0].packageid)\r\n    // setPackageId(list[0].packageid);\r\n  };\r\n\r\n  const fetchAllPackages = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setPackageList(list.data);\r\n  };\r\n\r\n  const fetchAllVendors = async () => {\r\n    var list = await getData(\"vendors/displayall\");\r\n    setVendorList(list.data);\r\n  };\r\n\r\n  const handlePackageChange = (event) => {\r\n    setPackageId(event.target.value);\r\n  };\r\n\r\n  const handleVendorChange = (event) => {\r\n    setVendorId(event.target.value);\r\n  };\r\n\r\n  const fillPackageItem = () => {\r\n    return getPackageList.map((item, key) => {\r\n      return <MenuItem value={item.packageid}>{item.packagename}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const fillVendorItem = () => {\r\n    return getVendorList.map((item, key) => {\r\n      return <MenuItem value={item.vendorid}>{item.vendorname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const todayDate = (e) => {\r\n    setdate(e.target.value);\r\n    const today = new Date(e.target.value);\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    setExpiredate(tomorrow.toString().substr(0, 16));\r\n  };\r\n\r\n  const editDialog = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={getOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          {/* <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Feature Packages Edit\"}\r\n          </DialogTitle> */}\r\n\r\n          <div>\r\n            <div class=\"\">\r\n              <div class=\"panel panel-default no-bd\">\r\n                <div class=\"panel-header bg-dark\">\r\n                  <h3 class=\"panel-title\" style={{ padding: 10 }}>\r\n                    <strong>Package Customer Packages</strong>\r\n                  </h3>\r\n                </div>\r\n                <div class=\"panel-body bg-white\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                      <form\r\n                        role=\"form\"\r\n                        class=\"form-validation\"\r\n                        novalidate=\"novalidate\"\r\n                        onSubmit={handleEdit}\r\n                      >\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">\r\n                                PackageCustomer\r\n                              </label>\r\n                              <i\r\n                                class=\"fa fa-check\"\r\n                                style={{ color: \"green\", marginLeft: 10 }}\r\n                              ></i>\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  placeholder=\"package customer\"\r\n                                  required=\"\"\r\n                                  aria-required=\"true\"\r\n                                  value={getPackageCustomerid}\r\n                                />\r\n                                <i class=\"fa fa-clock\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Packages</label>\r\n                              {/* <img\r\n                                src={getErrPackageId}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              /> */}\r\n                              <div class=\"append-icon\">\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  placeholder=\"Select Packages\"\r\n                                  value={getPackageId}\r\n                                  fullWidth=\"true\"\r\n                                  onChange={(event) =>\r\n                                    handlePackageChange(event)\r\n                                  }\r\n                                >\r\n                                  {fillPackageItem()}\r\n                                </Select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Vendors</label>\r\n                              {/* <img\r\n                                src={getErrPackageId}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              /> */}\r\n                              <div class=\"append-icon\">\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  placeholder=\"Select Vendor\"\r\n                                  value={getVendorId}\r\n                                  fullWidth=\"true\"\r\n                                  onChange={(event) =>\r\n                                    handleVendorChange(event)\r\n                                  }\r\n                                >\r\n                                  {fillVendorItem()}\r\n                                </Select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Date</label>\r\n                              {/* <img\r\n                                src={getErrPackageDistance}\r\n                                width=\"10\"\r\n                                height=\"10\"\r\n                              /> */}\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"4\"\r\n                                  placeholder=\"Date\"\r\n                                  required=\"\"\r\n                                  disabled=\"false\"\r\n                                  aria-required=\"true\"\r\n                                  value={getdate.toString().substr(0, 16)}\r\n                                  onChange={(e) => todayDate(e)}\r\n                                  // onChange={(event) => {\r\n                                  //   setdate(event.target.value);\r\n                                  // }}\r\n                                />\r\n                                <i class=\"fa fa-map\"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">Expire Date</label>\r\n                              {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                              <div class=\"append-icon\">\r\n                                <input\r\n                                  // type=\"date\"\r\n                                  class=\"form-control\"\r\n                                  minlength=\"3\"\r\n                                  placeholder=\"Date\"\r\n                                  required=\"\"\r\n                                  disabled=\"false\"\r\n                                  aria-required=\"true\"\r\n                                  value={getExpiredate}\r\n                                  onChange={(e) => alert(e.target.value)}\r\n                                />\r\n                                <i class=\"fa fa-clock \"></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                              <label class=\"control-label\">PaymentStatus</label>\r\n                              <select\r\n                                class=\"form-control\"\r\n                                value={getPaymentstatus}\r\n                                onChange={(event) =>\r\n                                  setPaymentstatus(event.target.value)\r\n                                }\r\n                              >\r\n                                <option>----Payement Status----</option>\r\n                                <option value=\"Pending\">Pending</option>\r\n                                <option value=\"Done\">Done</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-12\">\r\n                            <label class=\"control-label\">Status</label>\r\n                            <select\r\n                              class=\"form-control\"\r\n                              value={getStatus}\r\n                              onChange={(event) =>\r\n                                setStatus(event.target.value)\r\n                              }\r\n                            >\r\n                              <option>----Status----</option>\r\n                              <option value=\"Activate\">Activate</option>\r\n                              <option value=\"Deactivate\">Deactivate</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"text-center  m-t-20\">\r\n                          <button\r\n                            className=\"btn btn-primary btn-transparent\"\r\n                            type=\"submit\"\r\n                            // class=\"btn btn-embossed btn-primary\"\r\n                            // onClick={(event) => {\r\n                            //   handleEdit();\r\n                            // }}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                        </div>\r\n                        {getMsg}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <Paper className={classes.mainpaper}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={\"/images/tick.png\"} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Feature Id\"\r\n                    value={getFeatureId}\r\n                    style={{ width: 250, marginTop: 10 }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Packages\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={getPackageId}\r\n                      fullWidth=\"true\"\r\n                      onChange={(event) => handlePackageChange(event)}\r\n                    >\r\n                      {fillPackageItem()}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Package Time\"\r\n                    value={getPackageTime}\r\n                    onChange={(event) => {\r\n                      setPackageTime(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.center}>\r\n                  <img src={getErrPackageDistance} width=\"10\" height=\"10\" />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Package Distance\"\r\n                    value={getPackageDistance}\r\n                    onChange={(event) => {\r\n                      setPackageDistance(event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.container}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                    onClick={(event) => {\r\n                      handleEdit();\r\n                    }}\r\n                  >\r\n                    Save Record\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper> */}\r\n          </div>\r\n\r\n          <DialogActions>\r\n            <Button\r\n              className=\"btn btn-danger btn-rounded btn-transparent\"\r\n              onClick={handleClose}\r\n              // color=\"primary\"\r\n            >\r\n              CANCEL\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.rootx}>\r\n      <div className={classes.tablediv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Display Package Customer</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={state.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n      {editDialog()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayAllFeaturesPackages;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\VendorEmployeeId.js",["965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],"/* eslint-disable jsx-a11y/no-redundant-roles */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {\r\n  postDataAndImage,\r\n  getData,\r\n  postData,\r\n  GKey,\r\n} from \"../FetchNodeServices\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Geocode from \"react-geocode\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { checkRequire } from \"../Checks\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 30,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  paperstyle: {\r\n    width: 600,\r\n    margin: 5,\r\n    padding: 30,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  headingstyle: {\r\n    margin: 5,\r\n    padding: 13,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 17,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 380,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    width: 160,\r\n  },\r\n  uploadbutton: {\r\n    width: 250,\r\n  },\r\n\r\n  gridStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nexport default function VendorEmployeeId(props) {\r\n  const classes = useStyles();\r\n  var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n  console.log(vendor);\r\n  const [getEmpList, setEmpList] = useState([]);\r\n  const [getEmpId, setEmpId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n\r\n  const [getFromSelectedDate, setFromSelectedDate] = useState();\r\n  const [getToSelectedDate, setToSelectedDate] = useState();\r\n  const [getFromSelectedTime, setFromSelectedTime] = useState();\r\n  const [getToSelectedTime, setToSelectedTime] = useState();\r\n  const [getTrack, setTrack] = useState([]);\r\n\r\n  useEffect(function () {\r\n    setVendorId(vendor.vendorid);\r\n    fetchEmp(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchEmp = async (V_id) => {\r\n    let body = {\r\n      vendorid: vendor.vendorid,\r\n    };\r\n    let list = await postData(\"employees/displayall\", body);\r\n    console.log(list);\r\n    if (list.status) {\r\n      setEmpList(list.data);\r\n    }\r\n  };\r\n\r\n  // const fillEmp = async () => {\r\n  //   return getEmpList.map((item, key) => (\r\n\r\n  //   ));\r\n  // };\r\n\r\n  const handleTracking = async (e) => {\r\n    e.preventDefault();\r\n    // alert(getEmpId);\r\n    // alert(getVendorId);\r\n    let body = {\r\n      previousdate: getFromSelectedDate,\r\n      nextdate: getToSelectedDate,\r\n      previousTime: getFromSelectedTime,\r\n      nextTime: getToSelectedTime,\r\n      employeeid: getEmpId,\r\n    };\r\n    console.log(body);\r\n    let result = await postData(\"tracking/fetchLatLng\", body);\r\n    if (result.status) {\r\n      setTrack(result.data);\r\n    }\r\n  };\r\n\r\n  const ClearData = () => {\r\n    setEmpId(\"\");\r\n  };\r\n\r\n  // const searchByDate = async () => {\r\n  //   let body = {\r\n  //     previousdate: getFromSelectedDate,\r\n  //     nextdate: getToSelectedDate,\r\n  //     previousTime: getFromSelectedTime,\r\n  //     nextTime: getToSelectedTime,\r\n  //   };\r\n  //   console.log(body);\r\n  //   // let list = await postData(\"tracking/searchByDateTime\", body);\r\n  //   // setTrackingList(list);\r\n  // };\r\n\r\n  const handleNextTime = (event) => {\r\n    setToSelectedTime(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\">\r\n            <strong>Add Task</strong>\r\n          </h3>\r\n        </div>\r\n        <div class=\"panel-body bg-white\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 \">\r\n              <form\r\n                role=\"form\"\r\n                class=\"form-validation\"\r\n                novalidate=\"novalidate\"\r\n                // onSubmit={handleSubmit}\r\n              >\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                      <label class=\"control-label\">Client</label>\r\n                      <div class=\"append-icon\">\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={getEmpId}\r\n                          placeholder=\"Employee Id\"\r\n                          onChange={(event) => setEmpId(event.target.value)}\r\n                        >\r\n                          {\" \"}\r\n                          {/* <MenuItem value=\"\">Select State</MenuItem> */}\r\n                          {getEmpList.map((item) => (\r\n                            <MenuItem value={item.employeeid}>\r\n                              {item.employeename}&nbsp;&nbsp;{item.mobileno}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <Grid container spacing={2}>\r\n                  <Grid\r\n                    container\r\n                    xs={12}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginRight: 10,\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        id=\"date\"\r\n                        label=\"Search From Date\"\r\n                        type=\"date\"\r\n                        fullWidth\r\n                        defaultValue=\"2017-05-24\"\r\n                        value={getFromSelectedDate}\r\n                        onChange={(event) =>\r\n                          setFromSelectedDate(event.target.value)\r\n                        }\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: 10,\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        id=\"date\"\r\n                        label=\"Search To Date\"\r\n                        type=\"date\"\r\n                        fullWidth\r\n                        defaultValue=\"2017-05-24\"\r\n                        value={getToSelectedDate}\r\n                        onChange={(event) =>\r\n                          setToSelectedDate(event.target.value)\r\n                        }\r\n                        // className={classes.textField}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      {/* <Button\r\n                        variant=\"contained\"\r\n                        component=\"span\"\r\n                        // className={classes.button}\r\n                        className=\"btn btn-success btn-rounded btn-transparent\"\r\n                        startIcon={<SearchIcon />}\r\n                        onClick={searchByDate}\r\n                      >\r\n                        Search\r\n                      </Button> */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    xs={12}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      marginTop: 30,\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginRight: 10,\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        id=\"time\"\r\n                        label=\"Search From Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        defaultValue=\"07:30\"\r\n                        value={getFromSelectedTime}\r\n                        onChange={(event) =>\r\n                          setFromSelectedTime(event.target.value)\r\n                        }\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{\r\n                          step: 300, // 5 min\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: 10,\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        id=\"time\"\r\n                        label=\"Search To Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        defaultValue=\"07:30\"\r\n                        value={getToSelectedTime}\r\n                        onChange={handleNextTime}\r\n                        // onChange={(event) => setToSelectedTime(event.target.value)}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{\r\n                          step: 300, // 5 min\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      item\r\n                      xs={12}\r\n                      sm={4}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      {/* <Button\r\n                        variant=\"contained\"\r\n                        component=\"span\"\r\n                        // className={classes.button}\r\n                        className=\"btn btn-success btn-rounded btn-transparent\"\r\n                        startIcon={<SearchIcon />}\r\n                        // onClick={() => searchByTime()}\r\n                      >\r\n                        Search\r\n                      </Button> */}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <div class=\"text-center  m-t-20\">\r\n                  <button\r\n                    className=\"btn btn-success btn-transparent\"\r\n                    // type=\"submit\"\r\n                    onClick={(e) => handleTracking(e)}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-transparent\"\r\n                    type=\"reset\"\r\n                    onClick={(event) => {\r\n                      ClearData();\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\superadmin\\ListItems.js",[],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\DashOneVend.js",["988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ListItems from \"./ListItems\";\r\nimport { getData, postData, ServerURL } from \"../FetchNodeServices\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PackageInterface from \"../packages/PackageInterface\";\r\nimport DisplayAllPackages from \"../packages/DisplayAllPackages\";\r\nimport DisplayAllVendors from \"../vendor/DisplayAllVendors\";\r\nimport DisplayAllFeaturesPackages from \"../feature packages/DisplayAllFeaturesPackages\";\r\nimport Vendors from \"../vendor/Vendors\";\r\nimport FeaturesPackages from \"../feature packages/FeaturesPackages\";\r\nimport AnalogueClock from \"react-analogue-clock\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nexport default function DashOneVend(props) {\r\n  const classes = useStyles();\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const clockOptions = {\r\n    baseColor: \"#ffffff\",\r\n    borderColor: \"#000000\",\r\n    borderWidth: 5,\r\n    centerColor: \"#000000\",\r\n    handColors: {\r\n      hour: \"#000000\",\r\n      minute: \"#000000\",\r\n      second: \"#000000\",\r\n    },\r\n    notchColor: \"#000000\",\r\n    numbersColor: \"#000000\",\r\n    showNumbers: true,\r\n    size: 250,\r\n  };\r\n\r\n  const [getVendor, setVendor] = useState([]);\r\n  // const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getTotalEmp, setTotalEmp] = useState(\"\");\r\n  const [getCountEmp, setCountEmp] = useState(\"\");\r\n  const [getPackageName, setPackageName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    setVendor(vendor);\r\n    fetchLicenceRecord(vendor.vendorid);\r\n    fetchCountEmp(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchLicenceRecord = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let result = await postData(\"packagecustomer/displayPackage\", body);\r\n    if (result.status) {\r\n      // setPackageId(result.result[0].packageid);\r\n      fetchTotalLicence(result.result[0].packageid);\r\n    }\r\n  };\r\n\r\n  const fetchTotalLicence = async (pack_id) => {\r\n    let body = {\r\n      packageid: pack_id,\r\n    };\r\n    let result = await postData(\"packages/displayPackageTotal\", body);\r\n    if (result.status) {\r\n      setTotalEmp(result.result[0].noofusers);\r\n      setPackageName(result.result[0].packagename);\r\n    }\r\n  };\r\n\r\n  const fetchCountEmp = async (V_id) => {\r\n    var body = {\r\n      vendorid: V_id,\r\n    };\r\n    var rslt = await postData(\"employees/countemployee\", body);\r\n    if (rslt.status) {\r\n      setCountEmp(rslt.data[0].num);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*  className={classes.root} */}\r\n      {/* <CssBaseline /> */}\r\n\r\n      <div class=\"\">\r\n        {/* BEGIN PAGE CONTENT */}\r\n        <div class=\"\">\r\n          <div class=\"\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"row\">\r\n                {/* <div class=\"col-md-12 portlets\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-header panel-controls\">\r\n                      <h3>\r\n                        Colored <strong>version</strong>\r\n                      </h3>\r\n                    </div>\r\n                    <div class=\"panel-content\">\r\n                      <ul class=\"nav nav-tabs nav-primary\">\r\n                        <li class=\"\">\r\n                          <a href=\"#tab2_1\" data-toggle=\"tab\">\r\n                            <i class=\"icon-home\"></i> Home\r\n                          </a>\r\n                        </li>\r\n                        <li class=\"active\">\r\n                          <a href=\"#tab2_2\" data-toggle=\"tab\">\r\n                            <i class=\"icon-user\"></i> Profile\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#tab2_3\" data-toggle=\"tab\">\r\n                            <i class=\"icon-cloud-download\"></i> Other Tab\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                      <div class=\"tab-content\">\r\n                        <div class=\"tab-pane fade\" id=\"tab2_1\">\r\n                          <div class=\"row column-seperation\">\r\n                            <div class=\"col-md-6 line-separator\">\r\n                              <h3>\r\n                                <strong>Big</strong> Title for your tab\r\n                              </h3>\r\n                              <h4>Customize your tab as you want easily</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                              <p class=\"light\">\r\n                                default, the textarea element comes with a\r\n                                vertical scrollbar (and maybe even a horizontal\r\n                                scrollbar). This vertical scrollbar enables the\r\n                                user to continue entering and reviewing their\r\n                                text (by scrolling up and down).\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"tab-pane fade active in\" id=\"tab2_2\">\r\n                          <h3>\r\n                            \"Sooner or later, those who win are those who think\r\n                            they <strong>can</strong>.\"\r\n                          </h3>\r\n                          <p>\r\n                            Food truck fixie locavore, accusamus mcsweeney's\r\n                            marfa nulla single-origin coffee squid. Exercitation\r\n                            +1 labore velit, blog sartorial.\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"tab-pane fade\" id=\"tab2_3\">\r\n                          <p>\r\n                            Etsy mixtape wayfarers, ethical wes anderson tofu\r\n                            before they sold out mcsweeney's organic lomo retro\r\n                            fanny pack lo-fi farm-to-table readymade. Messenger\r\n                            bag gentrify pitchfork tattooed craft beer, iphone\r\n                            skateboard locavore carles etsy salvia banksy hoodie\r\n                            helvetica. DIY synth PBR banksy irony. Leggings\r\n                            gentrify squid 8-bit cred pitchfork. Williamsburg\r\n                            banh mi whatever gluten-free, carles pitchfork\r\n                            biodiesel fixie etsy retro mlkshk vice blog.\r\n                            Scenester cred you probably haven't heard of them,\r\n                            vinyl craft beer blog stumptown. Pitchfork\r\n                            sustainable tofu synth chambray yr.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-4.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>SALIL BHATNAGAR</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+919893214874</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-2.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>NIVRATI JAIN</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+919303533532</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-6.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>Prashant Rana</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+917773883041</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel widget-member\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-3\">\r\n                        <img\r\n                          src=\"/images/avatar-2.jpg\"\r\n                          alt=\"avatar 12\"\r\n                          class=\"pull-left img-responsive\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"col-xs-9\">\r\n                        <h3 class=\"m-t-0 member-name\">\r\n                          <strong>NIVRATI JAIN</strong>\r\n                        </h3>\r\n                        <p class=\"member-jobV\" style={{ margin: 2 }}>\r\n                          Accu Track{\" \"}\r\n                          <i\r\n                            class=\"fa fa-book\"\r\n                            style={{\r\n                              color: \"blue\",\r\n                              fontSize: 17,\r\n                              marginLeft: 5,\r\n                            }}\r\n                          ></i>\r\n                        </p>\r\n                        <p class=\"member-jobV\">+919303533532</p>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12\">\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-wifi\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-battery-half\"\r\n                                  style={{ color: \"black\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p style={{ display: \"flex\" }}>\r\n                                <i\r\n                                  class=\"fa fa-percent\"\r\n                                  style={{ color: \"green\", fontSize: 17 }}\r\n                                ></i>\r\n                                50\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-lg-3\">\r\n                              <p>\r\n                                <i\r\n                                  class=\"fa fa-map-marker\"\r\n                                  style={{ color: \"red\", fontSize: 17 }}\r\n                                ></i>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"vikramsub\">\r\n                        <p class=\"bAelFa\">Attendance IN : 04/08/2021</p>\r\n                        <span class=\"locationV\">\r\n                          <i\r\n                            class=\"fa fa-map-marker\"\r\n                            style={{ color: \"white\", marginRight: 4 }}\r\n                          ></i>\r\n                          Gwalior Tahsil, Gwalior, M.P, 474001, India\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"card-bodyV\">\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks Completed</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                        <span class=\"dataV\">\r\n                          <span class=\"textV\">Tasks not started</span>\r\n                          <span class=\"countV\">0</span>\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        class=\"footerV\"\r\n                        style={{ backgroundColor: \"white\", color: \"black\" }}\r\n                      >\r\n                        <span class=\"text\">No active Task</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* aaa */}\r\n              <div class=\"row m-t-10\">\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-umbrella bg-green\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"0\"\r\n                            // data-to=\"5200\"\r\n                          >\r\n                            {getTotalEmp}\r\n                          </p>\r\n                          <p class=\"text\">Issued Licences</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-bug bg-blue\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"1234\"\r\n                            // data-to=\"575\"\r\n                            // data-suffix=\"k\"\r\n                          >\r\n                            {getCountEmp}\r\n                          </p>\r\n                          <p class=\"text\">Licences</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"fa fa-fire-extinguisher bg-red\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"222\"\r\n                            // data-to=\"463\"\r\n                            // data-suffix=\"k\"\r\n                          >\r\n                            {getTotalEmp - getCountEmp}\r\n                          </p>\r\n                          <p class=\"text\">Remaining Licences</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"panel\">\r\n                    <div class=\"panel-content widget-info\">\r\n                      <div class=\"row\">\r\n                        <div class=\"left\">\r\n                          <i class=\"icon-microphone bg-purple\"></i>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                          <p\r\n                            class=\"number\"\r\n                            // data-from=\"0\"\r\n                            // data-to=\"1210\"\r\n                          >\r\n                            {getPackageName}\r\n                          </p>\r\n                          <p class=\"text\">Package Name</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div class=\"row\">\r\n        \r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-red\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-primary\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"widget widget_calendar bg-dark\">\r\n            <div class=\"multidatepicker\"></div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n              {/* \r\n              <div class=\"m-b-30\">\r\n                <div class=\"panel panel-default\">\r\n                  <div class=\"panel-body p-10\">\r\n                    <div class=\"text-center col-xs-4\">\r\n                      <img\r\n                        src=\"/images/1.png\"\r\n                        class=\"img-responsive\"\r\n                        alt=\"avatar 4\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"clearfix col-xs-8\">\r\n                      <h2 class=\"c-dark w-600\">Winston Bowman</h2>\r\n                      <p class=\"c-gray f-16\">Photographer</p>\r\n                      <p class=\"c-gray\">\r\n                        <i class=\"fa fa-map-marker p-r-10\"></i> Trade Business\r\n                        Park, Ohio\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"panel-footer p-t-0 p-b-0\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-4 bg-blue p-20\">\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 icon-speech\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">1568</div>\r\n                      </div>\r\n                      <div class=\"col-xs-4 bg-purple p-20\">\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 icon-users\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">866</div>\r\n                      </div>\r\n                      <div class=\"col-xs-4 bg-primary\" style={{ padding: 15 }}>\r\n                        <div class=\"text-center m-b-10\">\r\n                          <i class=\"f-24 fa icon-heart\"></i>\r\n                        </div>\r\n                        <div class=\"text-center f-16\">254</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            */}\r\n            </div>\r\n          </div>\r\n\r\n          <section class=\"dashboard-header section-padding\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row d-flex align-items-md-stretch\">\r\n                {/* <!-- To Do List--> */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card to-do\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">To do List</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <ul class=\"check-lists list-unstyled\">\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-1\"\r\n                          name=\"list-1\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-1\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-2\"\r\n                          name=\"list-2\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-2\">\r\n                          Ed ut perspiciatis unde omnis iste\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-3\"\r\n                          name=\"list-3\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-3\">\r\n                          At vero eos et accusamus et iusto\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-4\"\r\n                          name=\"list-4\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-4\">\r\n                          Explicabo Nemo ipsam voluptatem\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-5\"\r\n                          name=\"list-5\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-5\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-6\"\r\n                          name=\"list-6\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-6\">\r\n                          At vero eos et accusamus et iusto\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-7\"\r\n                          name=\"list-7\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-7\">\r\n                          Similique sunt in culpa qui officia\r\n                        </label>\r\n                      </li>\r\n                      <li class=\"d-flex align-items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"list-8\"\r\n                          name=\"list-8\"\r\n                          class=\"form-control-custom\"\r\n                        />\r\n                        <label for=\"list-8\">\r\n                          Ed ut perspiciatis unde omnis iste\r\n                        </label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Pie Chart--> */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card project-progress\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">Project Beta progress</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <div class=\"pie-chart\">\r\n                      <canvas id=\"pieChart\" style={{ width: 300, height: 300 }}>\r\n                        {\" \"}\r\n                      </canvas>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Line Chart --> */}\r\n                {/* <div\r\n              class=\"col-lg-6 col-md-12 flex-lg-last flex-md-first align-self-baseline\"\r\n            > */}\r\n                <div class=\"col-lg-4\">\r\n                  <div\r\n                    class=\"card sales-report\"\r\n                    style={{ padding: 10, backgroundColor: \"white\" }}\r\n                  >\r\n                    <h2 class=\"display h4\">Sales marketing report</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    </p>\r\n                    <div class=\"line-chart\">\r\n                      <canvas id=\"lineCahrt\"></canvas>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\" style={{ height: \"720px\" }}></div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            <div class=\"copyright\">\r\n              <p class=\"pull-left sm-pull-reset\">\r\n                {/* <span>\r\n                  Copyright <span class=\"copyright\">©</span> 2016{\" \"}\r\n                </span>\r\n                <span>THEMES LAB</span>.<span>All rights reserved. </span> */}\r\n              </p>\r\n              <p class=\"pull-right sm-pull-reset\">\r\n                {/* <span>\r\n                  <a href=\"#\" class=\"m-r-10\">\r\n                    Support\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10 m-r-10\">\r\n                    Terms of use\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"#\" class=\"m-l-10\">\r\n                    Privacy Policy\r\n                  </a>\r\n                </span> */}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* END PAGE CONTENT */}\r\n      </div>\r\n      {/* END MAIN CONTENT */}\r\n      {/* BEGIN BUILDER */}\r\n      <div class=\"builder hidden-sm hidden-xs\" id=\"builder\">\r\n        <a class=\"builder-toggle\">\r\n          <i class=\"icon-wrench\"></i>\r\n        </a>\r\n        <div class=\"inner\">\r\n          <div class=\"builder-container\">\r\n            <a href=\"#\" class=\"btn btn-sm btn-default\" id=\"reset-style\">\r\n              reset default style\r\n            </a>\r\n            <h4>Layout options</h4>\r\n            <div class=\"layout-option\">\r\n              <span> Fixed Sidebar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar\"\r\n                  id=\"switch-sidebar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Sidebar on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"sidebar-hover\"\r\n                  id=\"switch-sidebar-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span> Submenu on Hover</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"submenu-hover\"\r\n                  id=\"switch-submenu-hover\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Fixed Topbar</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"topbar\"\r\n                  id=\"switch-topbar\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                  checked\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <div class=\"layout-option\">\r\n              <span>Boxed Layout</span>\r\n              <label class=\"switch pull-right\">\r\n                <input\r\n                  data-layout=\"boxed\"\r\n                  id=\"switch-boxed\"\r\n                  type=\"checkbox\"\r\n                  class=\"switch-input\"\r\n                />\r\n                <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\r\n                <span class=\"switch-handle\"></span>\r\n              </label>\r\n            </div>\r\n            <h4 class=\"border-top\">Color</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"theme-color bg-dark\"\r\n                  data-main=\"default\"\r\n                  data-color=\"#2B2E33\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color background-primary\"\r\n                  data-main=\"primary\"\r\n                  data-color=\"#319DB5\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-red\"\r\n                  data-main=\"red\"\r\n                  data-color=\"#C75757\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-green\"\r\n                  data-main=\"green\"\r\n                  data-color=\"#1DA079\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-orange\"\r\n                  data-main=\"orange\"\r\n                  data-color=\"#D28857\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-purple\"\r\n                  data-main=\"purple\"\r\n                  data-color=\"#B179D7\"\r\n                ></div>\r\n                <div\r\n                  class=\"theme-color bg-blue\"\r\n                  data-main=\"blue\"\r\n                  data-color=\"#4A89DC\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Theme</h4>\r\n            <div class=\"row row-sm\">\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtl\" data-theme=\"sdtl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltd\" data-theme=\"sltd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sdtd\" data-theme=\"sdtd\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-dark\"></div>\r\n                  <div class=\"theme-sidebar-dark\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6\">\r\n                <div class=\"theme clearfix sltl\" data-theme=\"sltl\">\r\n                  <div class=\"header theme-left\"></div>\r\n                  <div class=\"header theme-right-light\"></div>\r\n                  <div class=\"theme-sidebar-light\"></div>\r\n                  <div class=\"bg-light\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h4 class=\"border-top\">Background</h4>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div\r\n                  class=\"bg-color bg-clean\"\r\n                  data-bg=\"clean\"\r\n                  data-color=\"#F8F8F8\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-lighter\"\r\n                  data-bg=\"lighter\"\r\n                  data-color=\"#EFEFEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-default\"\r\n                  data-bg=\"light-default\"\r\n                  data-color=\"#E9E9E9\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-blue\"\r\n                  data-bg=\"light-blue\"\r\n                  data-color=\"#E2EBEF\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-purple\"\r\n                  data-bg=\"light-purple\"\r\n                  data-color=\"#E9ECF5\"\r\n                ></div>\r\n                <div\r\n                  class=\"bg-color bg-light-dark\"\r\n                  data-bg=\"light-dark\"\r\n                  data-color=\"#DCE1E4\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n      {/* END BUILDER */}\r\n      {/* </section> */}\r\n      {/* BEGIN QUICKVIEW SIDEBAR */}\r\n      <div id=\"quickview-sidebar\">\r\n        <div class=\"quickview-header\">\r\n          <ul class=\"nav nav-tabs\">\r\n            <li class=\"active\">\r\n              <a href=\"#chat\" data-toggle=\"tab\">\r\n                Chat\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#notes\" data-toggle=\"tab\">\r\n                Notes\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#settings\" data-toggle=\"tab\" class=\"settings-tab\">\r\n                Settings\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"quickview\">\r\n          <div class=\"tab-content\">\r\n            <div class=\"tab-pane fade active in\" id=\"chat\">\r\n              <div class=\"chat-body current\">\r\n                <div class=\"chat-search\">\r\n                  <form class=\"form-inverse\" action=\"#\" role=\"search\">\r\n                    <div class=\"append-icon\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Search contact...\"\r\n                      />\r\n                      <i class=\"icon-magnifier\"></i>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div class=\"chat-groups\">\r\n                  <div class=\"title\">GROUP CHATS</div>\r\n                  <ul>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Favorites\r\n                    </li>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Office Work\r\n                    </li>\r\n                    <li>\r\n                      <i class=\"turquoise\"></i> Friends\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"chat-list\">\r\n                  <div class=\"title\">FAVORITES</div>\r\n                  <ul>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar13.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Bobby Brown</div>\r\n                        <div class=\"user-txt\">On the road again...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"online\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar5.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                        <div class=\"pull-right badge badge-danger\">3</div>\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Alexa Johnson</div>\r\n                        <div class=\"user-txt\">Still at the beach</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"away\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar10.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Bobby Brown</div>\r\n                        <div class=\"user-txt\">On stage...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"busy\"></i>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"chat-list\">\r\n                  <div class=\"title\">FRIENDS</div>\r\n                  <ul>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar7.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                        <div class=\"pull-right badge badge-danger\">3</div>\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">James Miller</div>\r\n                        <div class=\"user-txt\">At work...</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"online\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar11.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Fred Smith</div>\r\n                        <div class=\"user-txt\">Waiting for tonight</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"offline\"></i>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"clearfix\">\r\n                      <div class=\"user-img\">\r\n                        <img\r\n                          src=\"../assets/global/images/avatars/avatar8.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-details\">\r\n                        <div class=\"user-name\">Ben Addams</div>\r\n                        <div class=\"user-txt\">On my way to NYC</div>\r\n                      </div>\r\n                      <div class=\"user-status\">\r\n                        <i class=\"offline\"></i>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div class=\"chat-conversation\">\r\n                <div class=\"conversation-header\">\r\n                  <div class=\"user clearfix\">\r\n                    <div class=\"chat-back\">\r\n                      <i class=\"icon-action-undo\"></i>\r\n                    </div>\r\n                    <div class=\"user-details\">\r\n                      <div class=\"user-name\">James Miller</div>\r\n                      <div class=\"user-txt\">On the road again...</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"conversation-body\">\r\n                  <ul>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:38pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Hi you!</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:45pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Are you there?</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"img\">\r\n                      <div class=\"chat-detail\">\r\n                        <span class=\"chat-date\">today, 10:51pm</span>\r\n                        <div class=\"conversation-img\">\r\n                          <img\r\n                            src=\"../assets/global/images/avatars/avatar4.png\"\r\n                            alt=\"avatar 4\"\r\n                          />\r\n                        </div>\r\n                        <div class=\"chat-bubble\">\r\n                          <span>Send me a message when you come back.</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"conversation-message\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your message...\"\r\n                    class=\"form-control form-white send-message\"\r\n                  />\r\n                  <div class=\"item-footer clearfix\">\r\n                    <div class=\"footer-actions\">\r\n                      <i class=\"icon-rounded-marker\"></i>\r\n                      <i class=\"icon-rounded-camera\"></i>\r\n                      <i class=\"icon-rounded-paperclip-oblique\"></i>\r\n                      <i class=\"icon-rounded-alarm-clock\"></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"notes\">\r\n              <div class=\"list-notes current withScroll\">\r\n                <div class=\"notes \">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div id=\"add-note\">\r\n                        <i class=\"fa fa-plus\"></i>ADD A NEW NOTE\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"notes-list\">\r\n                    <div class=\"note-item media current fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Reset my account password</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">Break security reasons.</p>\r\n                        <p>\r\n                          <small>Tuesday 6 May, 3:52 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Call John</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">He have my laptop!</p>\r\n                        <p>\r\n                          <small>Thursday 8 May, 2:28 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Buy a car</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I'm done with the bus</p>\r\n                        <p>\r\n                          <small>Monday 12 May, 3:43 am</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Don't forget my notes</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I have to read them...</p>\r\n                        <p>\r\n                          <small>Wednesday 5 May, 6:15 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media current fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Reset my account password</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">Break security reasons.</p>\r\n                        <p>\r\n                          <small>Tuesday 6 May, 3:52 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Call John</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">He have my laptop!</p>\r\n                        <p>\r\n                          <small>Thursday 8 May, 2:28 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Buy a car</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I'm done with the bus</p>\r\n                        <p>\r\n                          <small>Monday 12 May, 3:43 am</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"note-item media fade in\">\r\n                      <button class=\"close\">×</button>\r\n                      <div>\r\n                        <div>\r\n                          <p class=\"note-name\">Don't forget my notes</p>\r\n                        </div>\r\n                        <p class=\"note-desc hidden\">I have to read them...</p>\r\n                        <p>\r\n                          <small>Wednesday 5 May, 6:15 pm</small>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"detail-note note-hidden-sm\">\r\n                <div class=\"note-header clearfix\">\r\n                  <div class=\"note-back\">\r\n                    <i class=\"icon-action-undo\"></i>\r\n                  </div>\r\n                  <div class=\"note-edit\">Edit Note</div>\r\n                  <div class=\"note-subtitle\">title on first line</div>\r\n                </div>\r\n                <div id=\"note-detail\">\r\n                  <div class=\"note-write\">\r\n                    <textarea\r\n                      class=\"form-control\"\r\n                      placeholder=\"Type your note here\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"settings\">\r\n              <div class=\"settings\">\r\n                <div class=\"title\">ACCOUNT SETTINGS</div>\r\n                <div class=\"setting\">\r\n                  <span> Show Personal Statut</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Picture</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show my Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                  <p class=\"setting-info\">\r\n                    Lorem ipsum dolor sit amet consectetuer.\r\n                  </p>\r\n                </div>\r\n                <div class=\"title\">CHAT</div>\r\n                <div class=\"setting\">\r\n                  <span> Show User Image</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Fullname</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Location</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"setting\">\r\n                  <span> Show Unread Count</span>\r\n                  <label class=\"switch pull-right\">\r\n                    <input type=\"checkbox\" class=\"switch-input\" checked />\r\n                    <span\r\n                      class=\"switch-label\"\r\n                      data-on=\"On\"\r\n                      data-off=\"Off\"\r\n                    ></span>\r\n                    <span class=\"switch-handle\"></span>\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"m-t-30\" style={{ width: \"100%\" }}>\r\n                  <canvas id=\"setting-chart\" height=\"300\"></canvas>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* END QUICKVIEW SIDEBAR */}\r\n      {/* BEGIN SEARCH */}\r\n      <div id=\"morphsearch\" class=\"morphsearch\">\r\n        {/* /morphsearch-content */}\r\n        <span class=\"morphsearch-close\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["1022","1023"],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\TrackAllEmployee.js",["1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  SocketURL,\r\n  GKey,\r\n  postData,\r\n  ServerURL,\r\n  getData,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport io from \"socket.io-client\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport RoadMap from \"./RoadMap\";\r\nimport AutocompleteTextField from \"./AutoCompleteTextField\";\r\nconst AnyReactComponent = ({ text }) => (\r\n  <div\r\n    style={{\r\n      flexDirection: \"column\",\r\n      // display: \"flex\",\r\n      marginTop: 20,\r\n    }}\r\n  >\r\n    <img src=\"/pin1.gif\" width=\"32\" height=\"32\" />\r\n    <div\r\n      style={{\r\n        padding: 2,\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#2980b9\",\r\n        border: \"solid 3px #2980b9\",\r\n        borderRadius: \"20%\",\r\n        width: \"auto\",\r\n        alignItem: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        width: 25,\r\n        fontWeight: \"bold\",\r\n        fontSize: 6,\r\n      }}\r\n    >\r\n      {text}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nfunction TrackEmployee() {\r\n  const data = {\r\n    latitude: 26.215,\r\n    longitude: 78.2074,\r\n    date: \"1/1/1\",\r\n    time: \"0:0:0\",\r\n    battery: \"1\",\r\n    employee_id: 1,\r\n    vendor_id: 100,\r\n  };\r\n\r\n  const socket = io(SocketURL);\r\n  const [getLocData, setLocData] = useState(data);\r\n  const [getEmployee, setEmployee] = useState([]);\r\n  const [getName, setName] = useState(\"\");\r\n  const [getList, setList] = useState([]);\r\n  const [getEmployeeid, setEmployeeid] = useState({ id: \"\", name: \"\" });\r\n  var ac = useRef();\r\n\r\n  const fetchDataById = async () => {\r\n    var list = await postData(`employee/searchbyid/${getName}`);\r\n    setEmployee(list);\r\n  };\r\n\r\n  const fetchData = async (v_id) => {\r\n    var list = await postData(\"tracking/alllocation\", { vendor_id: v_id });\r\n    setList(list);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // alert(getName);\r\n    var employee = getName.split(\",\");\r\n    setEmployeeid({ id: employee[1], name: employee[0] });\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    // fetchData();\r\n  }, []);\r\n  const show = async (data) => {\r\n    console.log(\"MESSAGE: \", data);\r\n    const obj = {};\r\n\r\n    setLocData(data);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 15,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: window.screen.height * 0.65,\r\n          width: window.screen.width * 0.8,\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        {/* {getList != null ? (\r\n          <AutocompleteTextField\r\n            getName={getName}\r\n            getEmployeeid={getEmployeeid}\r\n            getList={getList}\r\n            setName={setName}\r\n            handleClick={handleClick}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )} */}\r\n\r\n        {getList.length > 0 ? (\r\n          <>\r\n            <GoogleMapReact\r\n              apiKey={GKey}\r\n              center={[getLocData.latitude, getLocData.longitude]}\r\n              zoom={15}\r\n            >\r\n              {getList.map((item) => (\r\n                <AnyReactComponent\r\n                  lat={item.latitude}\r\n                  lng={item.longitude}\r\n                  text={item.employeename}\r\n                />\r\n              ))}\r\n            </GoogleMapReact>\r\n          </>\r\n        ) : (\r\n          <GoogleMapReact\r\n            apiKey={GKey}\r\n            center={[getLocData.latitude, getLocData.longitude]}\r\n            zoom={18}\r\n          >\r\n            {/* <AnyReactComponent\r\n              lat={getLocData.latitude}\r\n              lng={getLocData.longitude}\r\n              text={\"pls wait..\"}\r\n            /> */}\r\n          </GoogleMapReact>\r\n        )}\r\n        <div>{/*  <RoadMap />*/}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackEmployee;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\TrackEmployee.js",["1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  SocketURL,\r\n  GKey,\r\n  postData,\r\n  ServerURL,\r\n  getData,\r\n} from \"../FetchNodeServices\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport io from \"socket.io-client\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport RoadMap from \"./RoadMap\";\r\nimport AutocompleteTextField from \"./AutoCompleteTextField\";\r\nconst AnyReactComponent = ({ text }) => (\r\n  <div\r\n    style={{\r\n      flexDirection: \"column\",\r\n      // display: \"flex\",\r\n      marginTop: 20,\r\n    }}\r\n  >\r\n    <img src=\"/pin1.gif\" width=\"32\" height=\"32\" />\r\n    <div\r\n      style={{\r\n        padding: 2,\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#2980b9\",\r\n        border: \"solid 3px #2980b9\",\r\n        borderRadius: \"20%\",\r\n        width: \"auto\",\r\n        alignItem: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        width: 25,\r\n        fontWeight: \"bold\",\r\n        fontSize: 6,\r\n      }}\r\n    >\r\n      {text}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nfunction TrackEmployee() {\r\n  const data = {\r\n    latitude: 26.215,\r\n    longitude: 78.2074,\r\n    date: \"1/1/1\",\r\n    time: \"0:0:0\",\r\n    battery: \"1\",\r\n    employee_id: 1,\r\n    vendor_id: 100,\r\n  };\r\n\r\n  const socket = io(SocketURL);\r\n  const [getLocData, setLocData] = useState(data);\r\n  // const [getEmployee, setEmployee] = useState([]);\r\n  const [getName, setName] = useState(\"\");\r\n  const [getList, setList] = useState([]);\r\n  const [getEmployeeid, setEmployeeid] = useState({ id: \"\", name: \"\" });\r\n  var ac = useRef();\r\n\r\n  // const fetchDataById = async () => {\r\n  //   var list = await postData(`employee/searchbyid/${getName}`);\r\n  //   setEmployee(list);\r\n  // };\r\n\r\n  // const fetchData = async () => {\r\n  //   var list = await getData(\"employee/displayall\");\r\n  //   console.log(list);\r\n\r\n  //   setList(list.data);\r\n  // };\r\n\r\n  const fetchData = async (V_id) => {\r\n    let body = {\r\n      vendorid: V_id,\r\n    };\r\n    let list = await postData(\"employee/displayByVid\", body);\r\n\r\n    setList(list.data);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // alert(getName);\r\n    var employee = getName.split(\",\");\r\n    setEmployeeid({ id: employee[1], name: employee[0] });\r\n  };\r\n\r\n  const setupEmitListener = () => {\r\n    socket.on(\"messenger\", (client) => {\r\n      console.log(client);\r\n      show(client);\r\n    });\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n    // fetchData();\r\n    setupEmitListener();\r\n  }, []);\r\n\r\n  const show = async (data) => {\r\n    console.log(\"MESSAGE: \", data);\r\n    setLocData(data);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        // padding: 15,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: window.screen.height * 0.55,\r\n          width: window.screen.width * 0.7,\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        {getList != null ? (\r\n          <AutocompleteTextField\r\n            getName={getName}\r\n            getEmployeeid={getEmployeeid}\r\n            getList={getList}\r\n            setName={setName}\r\n            handleClick={handleClick}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {getEmployeeid.id == getLocData.employee_id ? (\r\n          <>\r\n            Battery: {getLocData.battery}\r\n            <br />\r\n            Last Update:{\" \"}\r\n            {new Date(getLocData.date).toLocaleString(undefined, {\r\n              timeZone: \"Asia/Kolkata\",\r\n            })}\r\n            <GoogleMapReact\r\n              apiKey={GKey}\r\n              center={[getLocData.latitude, getLocData.longitude]}\r\n              zoom={18}\r\n            >\r\n              <AnyReactComponent\r\n                lat={getLocData.latitude}\r\n                lng={getLocData.longitude}\r\n                text={getEmployeeid.name}\r\n              />\r\n            </GoogleMapReact>\r\n          </>\r\n        ) : (\r\n          <GoogleMapReact\r\n            apiKey={GKey}\r\n            center={[getLocData.latitude, getLocData.longitude]}\r\n            zoom={18}\r\n          >\r\n            {/* <AnyReactComponent\r\n              lat={getLocData.latitude}\r\n              lng={getLocData.longitude}\r\n              text={\"pls wait..\"}\r\n            /> */}\r\n          </GoogleMapReact>\r\n        )}\r\n        <div>{/*  <RoadMap />*/}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackEmployee;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\RoadMap.js",["1053","1054","1055","1056","1057","1058"],"/* eslint-disable import/no-anonymous-default-export */\nimport { Grid, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Polyline,\n  Marker,\n} from \"react-google-maps\";\nimport {\n  SocketURL,\n  GKey,\n  postData,\n  ServerURL,\n  getData,\n} from \"../FetchNodeServices\";\nclass Map extends React.Component {\n  vendor = JSON.parse(localStorage.getItem(\"vendor\"));\n  state = {\n    progress: [],\n    path: [\n      { lat: 18.558908, lng: -68.389916 },\n      { lat: 18.558853, lng: -68.389922 },\n      { lat: 18.558375, lng: -68.389729 },\n      { lat: 18.558032, lng: -68.389182 },\n      { lat: 18.55805, lng: -68.388613 },\n      { lat: 18.558256, lng: -68.388213 },\n      { lat: 18.558744, lng: -68.387929 },\n    ],\n    index: 0,\n    emplist: [],\n    empid: \"\",\n    fromselectdate: \"\",\n    toselectdate: \"\",\n    fromtime: \"\",\n    totime: \"\",\n  };\n\n  velocity = 5;\n  initialDate = new Date();\n\n  fetchEmp = async () => {\n    let body = {\n      vendorid: this.vendor.vendorid,\n    };\n    let list = await postData(\"employees/displayall\", body);\n    console.log(list);\n    if (list.status) {\n      this.setState({ emplist: list.data });\n    }\n  };\n\n  getDistance = () => {\n    // seconds between when the component loaded and now\n    const differentInTime = (new Date() - this.initialDate) / 1000; // pass to seconds\n    return differentInTime * this.velocity; // d = v*t -- thanks Newton!\n  };\n\n  componentDidMount = () => {\n    this.interval = window.setInterval(this.moveObject, 300);\n  };\n\n  componentWillUnmount = () => {\n    window.clearInterval(this.interval);\n  };\n\n  moveObject = () => {\n    const distance = this.getDistance();\n    if (!distance) {\n      return;\n    }\n\n    let progress = this.state.path.filter((coordinates, index) => {\n      return coordinates.distance < distance;\n    });\n\n    // const nextLine = this.state.path.find(\n    //   (coordinates) => coordinates.distance > distance\n    // );\n    const nextLine = this.state.path[this.state.index];\n    this.setState({ index: this.state.index + 1 });\n    console.log(\"nextLine\", this.state.index, nextLine);\n    if (!nextLine) {\n      // this.setState({ progress });\n      return; // it's the end!\n    }\n    this.setState({ progress: [...this.state.progress, nextLine] });\n  };\n\n  componentWillMount = () => {\n    this.fetchEmp();\n  };\n\n  handleTracking = async (e) => {\n    e.preventDefault();\n    this.setState({\n      progress: [],\n      // defaultCenter: { lat: res[0].lat, lng: res[0].lng },\n    });\n    let body = {\n      previousdate: this.state.fromselectdate,\n      nextdate: this.state.toselectdate,\n      previousTime: this.state.fromtime,\n      nextTime: this.state.totime,\n      employeeid: this.state.empid,\n    };\n    // console.log(body);\n    let result = await postData(\"tracking/fetchLatLng\", body);\n    if (result.status) {\n      this.setState({\n        path: result.data,\n        // defaultCenter: { lat: res[0].lat, lng: res[0].lng },\n      });\n      let path = this.state.path.map((coordinates, i, array) => {\n        if (i === 0) {\n          return { ...coordinates, distance: 0 }; // it begins here!\n        }\n        const { lat: lat1, lng: lng1 } = coordinates;\n        const latLong1 = new window.google.maps.LatLng(lat1, lng1);\n\n        const { lat: lat2, lng: lng2 } = array[0];\n        const latLong2 = new window.google.maps.LatLng(lat2, lng2);\n\n        // in meters:\n        const distance = window.google.maps.geometry.spherical.computeDistanceBetween(\n          latLong1,\n          latLong2\n        );\n\n        return { ...coordinates, distance };\n      });\n\n      this.setState({ path });\n    }\n  };\n\n  render = () => {\n    return (\n      <>\n        <div>\n          <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\n            <div class=\"panel-header bg-dark\">\n              <h3 class=\"panel-title\">\n                <strong>Add Task</strong>\n              </h3>\n            </div>\n            <div class=\"panel-body bg-white\">\n              <div class=\"row\">\n                <div class=\"col-md-12 \">\n                  <form\n                    role=\"form\"\n                    class=\"form-validation\"\n                    novalidate=\"novalidate\"\n                    // onSubmit={handleSubmit}\n                  >\n                    <div class=\"row\">\n                      <div class=\"col-sm-12\">\n                        <div class=\"form-group\">\n                          <label class=\"control-label\">Client</label>\n                          <div class=\"append-icon\">\n                            <Select\n                              fullWidth\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              value={this.state.empid}\n                              placeholder=\"Employee Id\"\n                              onChange={(event) =>\n                                this.setState({ empid: event.target.value })\n                              }\n                            >\n                              {\" \"}\n                              {/* <MenuItem value=\"\">Select State</MenuItem> */}\n                              {this.state.emplist.map((item) => (\n                                <MenuItem value={item.employeeid}>\n                                  {item.employeename}&nbsp;&nbsp;{item.mobileno}\n                                </MenuItem>\n                              ))}\n                            </Select>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                              <div class=\"form-group\">\n                                <label class=\"control-label\">From Date</label>\n                                {/* <img src={getErrClientName} width=\"10\" height=\"10\" /> */}\n                                <div class=\"append-icon\">\n                                  <TextField\n                                    id=\"date\"\n                                    label=\"Search From Date\"\n                                    type=\"date\"\n                                    fullWidth\n                                    defaultValue=\"2017-05-24\"\n                                    value={this.state.fromselectdate}\n                                    onChange={(event) =>\n                                      this.setState({\n                                        fromselectdate: event.target.value,\n                                      })\n                                    }\n                                    // className={classes.textField}\n                                    InputLabelProps={{\n                                      shrink: true,\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"col-sm-6\">\n                              <div class=\"form-group\">\n                                <label class=\"control-label\">To Date:</label>\n                                {/* <img src={getErrClientAddress} width=\"10\" height=\"10\" /> */}\n                                <div class=\"append-icon\">\n                                  <TextField\n                                    id=\"date\"\n                                    label=\"Search To Date\"\n                                    type=\"date\"\n                                    fullWidth\n                                    defaultValue=\"2017-05-24\"\n                                    value={this.state.toselectdate}\n                                    onChange={(event) =>\n                                      this.setState({\n                                        toselectdate: event.target.value,\n                                      })\n                                    }\n                                    // className={classes.textField}\n                                    InputLabelProps={{\n                                      shrink: true,\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                              <div class=\"form-group\">\n                                <label class=\"control-label\">From Time:</label>\n                                {/* <img src={getErrClientName} width=\"10\" height=\"10\" /> */}\n                                <div class=\"append-icon\">\n                                  <TextField\n                                    id=\"time\"\n                                    label=\"Search From Time\"\n                                    type=\"time\"\n                                    fullWidth\n                                    defaultValue=\"07:30\"\n                                    value={this.state.fromtime}\n                                    onChange={(event) =>\n                                      this.setState({\n                                        fromtime: event.target.value,\n                                      })\n                                    }\n                                    InputLabelProps={{\n                                      shrink: true,\n                                    }}\n                                    inputProps={{\n                                      step: 300, // 5 min\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"col-sm-6\">\n                              <div class=\"form-group\">\n                                <label class=\"control-label\">To Time:</label>\n                                {/* <img src={getErrClientAddress} width=\"10\" height=\"10\" /> */}\n                                <div class=\"append-icon\">\n                                  <TextField\n                                    id=\"time\"\n                                    label=\"Search To Time\"\n                                    type=\"time\"\n                                    fullWidth\n                                    defaultValue=\"07:30\"\n                                    value={this.state.totime}\n                                    onChange={(event) =>\n                                      this.setState({\n                                        totime: event.target.value,\n                                      })\n                                    }\n                                    // onChange={(event) => setToSelectedTime(event.target.value)}\n                                    InputLabelProps={{\n                                      shrink: true,\n                                    }}\n                                    inputProps={{\n                                      step: 300, // 5 min\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\"></div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"text-center  m-t-20\">\n                      <button\n                        className=\"btn btn-success btn-transparent\"\n                        // type=\"submit\"\n                        onClick={(e) => this.handleTracking(e)}\n                      >\n                        Submit\n                      </button>\n                      <button\n                        className=\"btn btn-danger btn-transparent\"\n                        type=\"reset\"\n                        onClick={(event) => {\n                          this.ClearData();\n                        }}\n                      >\n                        Reset\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <GoogleMap\n          defaultZoom={14}\n          // defaultCenter={{ lat: 18.559008, lng: -68.388881 }}\n          center={{ lat: 26.2162063, lng: 78.2021085 }}\n          apiKey={GKey}\n        >\n          {this.state.progress && (\n            <>\n              <Polyline\n                path={this.state.progress}\n                options={{ strokeColor: \"#FF0000 \" }}\n              />\n              <Marker\n                position={this.state.progress[this.state.progress.length - 1]}\n              />\n            </>\n          )}\n        </GoogleMap>\n      </>\n    );\n  };\n}\n\nconst MapComponent = withScriptjs(withGoogleMap(Map));\n\nexport default () => (\n  <MapComponent\n    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GKey}&v=3.exp&libraries=geometry,drawing,places`}\n    loadingElement={<div style={{ height: `100%` }} />}\n    containerElement={<div style={{ height: `400px`, width: \"100%\" }} />}\n    mapElement={<div style={{ height: `100%` }} />}\n  />\n);\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\ListItems.js",[],"C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\orders\\DisplayAllOrder.js",["1059","1060"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getData, ServerURL, postData } from \"../FetchNodeServices\";\r\nimport swal from \"sweetalert\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import Radio from \"@material-ui/core/Radio\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import { checkRequire } from \"../Checks\";\r\n// import Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogActions from \"@material-ui/core/DialogActions\";\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\n// import DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  tableDiv: {\r\n    width: window.innerWidth * 0.8,\r\n  },\r\n  avatortheme: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  main: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperStyle: {\r\n    width: 520,\r\n    padding: 20,\r\n    margin: 20,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  paperHeading: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n  },\r\n  subclass: {\r\n    marginTop: 3,\r\n    marginBottom: 4,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: 160,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayAllOrder() {\r\n  const classes = useStyles();\r\n  const [getList, setList] = useState([]);\r\n\r\n  const [getColumn, setColumn] = useState({\r\n    columns: [\r\n      { title: \"Order \", field: \"orderid\" },\r\n      { title: \"Client Id\", field: \"clientid\" },\r\n      { title: \"Employee Id\", field: \"employeeid\" },\r\n      { title: \"Description\", field: \"description\" },\r\n      { title: \"Order Date\", field: \"orderdate\" },\r\n      { title: \"Order Time\", field: \"ordertime\" },\r\n      {\r\n        title: \"Image\",\r\n        field: \"uploadorder\",\r\n        render: (rowData) => (\r\n          <div>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              variant=\"rounded\"\r\n              src={`${ServerURL}/images/${rowData.uploadorder}`}\r\n              className={classes.avatortheme}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  });\r\n\r\n  const fetchData = async (v_id) => {\r\n    let body = {\r\n      vendorid: v_id,\r\n    };\r\n    var list = await postData(\"order/displayById\", body);\r\n    setList(list.data);\r\n    // console.log(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchData(vendor.vendorid);\r\n  }, []);\r\n\r\n  const handleDelete = async (oldData) => {\r\n    let body = { orderid: oldData.orderid };\r\n    let result = await postData(\"order/deleteById\", body);\r\n    if (result.status) {\r\n      // alert(\"Record Deleted\");\r\n      swal(\"Record Deleted\", \"\", \"success\");\r\n    }\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableDiv}>\r\n        <div class=\"panel-header bg-dark\">\r\n          <h3 class=\"panel-title\" style={{ color: \"#FFF\", padding: 17 }}>\r\n            <strong>Orders List</strong>\r\n          </h3>\r\n        </div>\r\n        <MaterialTable\r\n          style={{ backgroundColor: \"#FFF\" }}\r\n          title=\" \"\r\n          columns={getColumn.columns}\r\n          data={getList}\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: \"azure\",\r\n              color: \"#309c87\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n            },\r\n            rowStyle: {\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Calibri\",\r\n              lineHeight: \"none\",\r\n              fontSize: 12,\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit\",\r\n              // onClick: (event, rowData) => handleClickOpen(rowData),\r\n            },\r\n          ]}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  const data = [...getList];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  setList(data);\r\n                  handleDelete(oldData);\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n        {/* {handleDialog()} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\DisplayScreenshot.js",["1061","1062","1063","1064","1065","1066","1067","1068"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MaterialTable from \"material-table\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  maincontainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    //  justifyContent:'center'\r\n    // margin:40,\r\n  },\r\n\r\n  mainpaper: {\r\n    // borderRadius: 10,\r\n    width: \"100%\",\r\n    // height: 530,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n\r\n  head: {\r\n    width: \"100%\",\r\n    // height: 50,\r\n    backgroundImage:\r\n      \"linear-gradient(to left, black 5px , #2979ff 600px ,black)\",\r\n    // backgroundColor:'#ececec',\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n  },\r\n\r\n  mainheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n    padding: \"5px 0px 0px 0px\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  modalheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: 20,\r\n    //  fontWeight:'bold',\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function DisplayScreenshot() {\r\n  const classes = useStyles();\r\n  const [getColumn, setColumn] = useState({\r\n    columns: [\r\n      { title: \"Transation Id\", field: \"transaction_id\", editable: \"never\" },\r\n      { title: \"Employee Id\", field: \"employee_id\", editable: \"never\" },\r\n      { title: \"Vendor Id\", field: \"vender_id\", editable: \"never\" },\r\n      { title: \"Image Name\", field: \"image_name\", editable: \"never\" },\r\n      // { title: 'Image', render: rowData => <img src={`${BaseURL}/images/${rowData.product_image}`} style={{height:40,width:40, borderRadius: '30%'}}/>},\r\n      { title: \"Date\", field: \"date\", editable: \"never\" },\r\n      { title: \"Time\", field: \"time\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getScreenShotList, setScreenShotList] = useState([]);\r\n\r\n  useEffect(function () {\r\n    fetchScreenShotData();\r\n  }, []);\r\n\r\n  const fetchScreenShotData = async () => {\r\n    let list = await postData(\"screenshot/displayAll\");\r\n    setScreenShotList(list);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div className={classes.maincontainer}>\r\n        <div style={{ backgroundColor: \"#FFF\", width: \"100%\" }}>\r\n          <div class=\"\" style={{ width: \"100%\" }}>\r\n            <div class=\"panel-header bg-dark\" style={{ padding: 17 }}>\r\n              <h3 class=\"panel-title\">\r\n                <strong>Screenshot Record</strong>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n\r\n          <MaterialTable\r\n            title=\"\"\r\n            columns={getColumn.columns}\r\n            data={getScreenShotList}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"azure\",\r\n                color: \"#309c87\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n              },\r\n              rowStyle: {\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n                fontSize: 12,\r\n              },\r\n            }}\r\n            // actions={[\r\n            //   {\r\n            //     icon: 'edit',\r\n            //     tooltip: 'Edit',\r\n            //     onClick: (event,rowData)=>handleDialogOpen(rowData)\r\n            //   }\r\n            // ]}\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    setColumn((prevState) => {\r\n                      const data = [...prevState.data];\r\n                      data.push(newData);\r\n                      return { ...prevState, data };\r\n                    });\r\n                  }, 600);\r\n                }),\r\n              onRowDelete: (oldData) =>\r\n                new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    // const data=[...getCategoryList]\r\n                    // data.slice(data.indexOf(oldData),1)\r\n                    // setCategoryList(data)\r\n                    // handleDelete(oldData)\r\n                  }, 600);\r\n                }),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\Display.js",["1069","1070","1071"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MaterialTable from \"material-table\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  maincontainer: {\r\n    // display: \"flex\",\r\n    alignItems: \"center\",\r\n    //  justifyContent:'center'\r\n    // margin:40,\r\n  },\r\n\r\n  mainpaper: {\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: 530,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n\r\n  head: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    backgroundImage:\r\n      \"linear-gradient(to left, black 5px , #2979ff 600px ,black)\",\r\n    // backgroundColor:'#ececec',\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n  },\r\n\r\n  mainheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n    padding: \"5px 0px 0px 0px\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //  border: '3px solid #000',\r\n    height: 350,\r\n    width: 800,\r\n    boxShadow: theme.shadows[20],\r\n    padding: theme.spacing(3, 3, 3),\r\n  },\r\n\r\n  modalheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: 20,\r\n    //  fontWeight:'bold',\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function Display() {\r\n  const classes = useStyles();\r\n  const [getColumn, setColumn] = useState({\r\n    columns: [\r\n      { title: \"Transation Id\", field: \"transaction_id\", editable: \"never\" },\r\n      { title: \"Employee Id\", field: \"employee_id\", editable: \"never\" },\r\n      { title: \"Vender Id\", field: \"vender_id\", editable: \"never\" },\r\n      { title: \"Longitude\", field: \"longitude\", editable: \"never\" },\r\n      { title: \"Latitude\", field: \"latitude\", editable: \"never\" },\r\n      { title: \"Time\", field: \"time\", editable: \"never\" },\r\n      { title: \"Date\", field: \"date\", editable: \"never\" },\r\n      { title: \"Battery(%)\", field: \"battery\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getTrackingList, setTrackingList] = useState([]);\r\n  const [getFromSelectedDate, setFromSelectedDate] = useState();\r\n  const [getToSelectedDate, setToSelectedDate] = useState();\r\n  const [getFromSelectedTime, setFromSelectedTime] = useState();\r\n  const [getToSelectedTime, setToSelectedTime] = useState();\r\n\r\n  useEffect(function () {\r\n    fetchtrackingData();\r\n  }, []);\r\n\r\n  const fetchtrackingData = async () => {\r\n    let list = await getData(\"tracking/displayAll\");\r\n    setTrackingList(list);\r\n  };\r\n\r\n  const searchByDate = async () => {\r\n    let body = {\r\n      previousdate: getFromSelectedDate,\r\n      nextdate: getToSelectedDate,\r\n    };\r\n    let list = await postData(\"tracking/searchByDate\", body);\r\n    setTrackingList(list);\r\n  };\r\n\r\n  const searchByTime = async () => {\r\n    let body = {\r\n      previousTime: getFromSelectedTime,\r\n      nextTime: getToSelectedTime,\r\n    };\r\n    alert(\"time\");\r\n    console.log(body);\r\n    let list = await postData(\"tracking/searchByTime\", body);\r\n    setTrackingList(list);\r\n  };\r\n\r\n  const handleNextTime = (event) => {\r\n    setToSelectedTime(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.maincontainer}>\r\n        <div style={{ backgroundColor: \"#FFF\" }}>\r\n          {/* <div className={classes.head}> */}\r\n          <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n            <div class=\"panel-header bg-dark\">\r\n              <h3 class=\"panel-title\">\r\n                <strong>Tracking Record</strong>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          {/* </div> */}\r\n          <div style={{ margin: 30 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Search From Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    defaultValue=\"2017-05-24\"\r\n                    value={getFromSelectedDate}\r\n                    onChange={(event) =>\r\n                      setFromSelectedDate(event.target.value)\r\n                    }\r\n                    // className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Search From Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    defaultValue=\"2017-05-24\"\r\n                    value={getToSelectedDate}\r\n                    onChange={(event) => setToSelectedDate(event.target.value)}\r\n                    // className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    // className={classes.button}\r\n                    className=\"btn btn-success btn-rounded btn-transparent\"\r\n                    startIcon={<SearchIcon />}\r\n                    onClick={searchByDate}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: 30,\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Search From Time\"\r\n                    type=\"time\"\r\n                    fullWidth\r\n                    defaultValue=\"07:30\"\r\n                    value={getFromSelectedTime}\r\n                    onChange={(event) =>\r\n                      setFromSelectedTime(event.target.value)\r\n                    }\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Search To Time\"\r\n                    type=\"time\"\r\n                    fullWidth\r\n                    defaultValue=\"07:30\"\r\n                    value={getToSelectedTime}\r\n                    onChange={handleNextTime}\r\n                    // onChange={(event) => setToSelectedTime(event.target.value)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    // className={classes.button}\r\n                    className=\"btn btn-success btn-rounded btn-transparent\"\r\n                    startIcon={<SearchIcon />}\r\n                    onClick={() => searchByTime()}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <MaterialTable\r\n            title=\"Tracking List\"\r\n            columns={getColumn.columns}\r\n            data={getTrackingList}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"azure\",\r\n                color: \"#309c87\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n              },\r\n              rowStyle: {\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n                fontSize: 12,\r\n              },\r\n            }}\r\n            // actions={[\r\n            //   {\r\n            //     icon: 'edit',\r\n            //     tooltip: 'Edit',\r\n            //     onClick: (event,rowData)=>handleDialogOpen(rowData)\r\n            //   }\r\n            // ]}\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    setColumn((prevState) => {\r\n                      const data = [...prevState.data];\r\n                      data.push(newData);\r\n                      return { ...prevState, data };\r\n                    });\r\n                  }, 600);\r\n                }),\r\n              onRowDelete: (oldData) =>\r\n                new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    // const data=[...getCategoryList]\r\n                    // data.slice(data.indexOf(oldData),1)\r\n                    // setCategoryList(data)\r\n                    // handleDelete(oldData)\r\n                  }, 600);\r\n                }),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\profile\\AddProfile.js",["1072","1073","1074","1075","1076"],"import React, { useEffect, useState } from \"react\";\r\nimport { postData, getData, ServerURL } from \"../FetchNodeServices\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    // marginTop: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  mainpaper: {\r\n    width: 500,\r\n    margin: 7,\r\n    padding: 15,\r\n    backgroundColor: \"#f1f2f6\",\r\n  },\r\n  button: {\r\n    width: 160,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  headingstyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    width: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#dfe4ea\",\r\n    marginBottom: 10,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n}));\r\n\r\nfunction PackageCustomer() {\r\n  const classes = useStyles();\r\n  const [getVendorId, setVendorId] = useState(\"\");\r\n  const [getPackageId, setPackageId] = useState(\"\");\r\n  const [getdate, setdate] = useState(\"\");\r\n  const [getAssign, setAssign] = useState(\"\");\r\n  const [getAssignDate, setAssignDate] = useState(\"\");\r\n  //   const [getErrPackageId, setErrPackageId] = useState(\"\");\r\n  const [getMsg, setMsg] = useState(\"\");\r\n  const [getList, setList] = useState([]);\r\n  const [getVendorList, setVendorList] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    var err = false;\r\n    // if (!checkRequire(getPackageId)) {\r\n    //   err = true;\r\n    //   setErrPackageId(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageId)) {\r\n    //   setErrPackageId(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageTime)) {\r\n    //   err = true;\r\n    //   setErrPackageTime(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageTime)) {\r\n    //   setErrPackageTime(\"/images/tick.png\");\r\n    // }\r\n\r\n    // if (!checkRequire(getPackageDistance)) {\r\n    //   err = true;\r\n    //   setErrPackageDistance(\"/images/cross.png\");\r\n    // }\r\n    // if (checkRequire(getPackageDistance)) {\r\n    //   setErrPackageDistance(\"/images/tick.png\");\r\n    // }\r\n\r\n    if (!err) {\r\n      let body = {\r\n        packageid: getPackageId,\r\n        vendorid: getVendorId,\r\n        assignby: getAssign,\r\n        assigndate: getAssignDate,\r\n      };\r\n      console.log(body);\r\n      var result = await postData(\"profile/add\", body);\r\n\r\n      if (result) {\r\n        setMsg(\"Record Submitted ...\");\r\n      } else {\r\n        setMsg(\"Fail to submit Record ..\");\r\n      }\r\n    } else {\r\n      setMsg(\"Error in Input\");\r\n    }\r\n    setPackageId(\"\");\r\n    setVendorId(\"\");\r\n    setAssign(\"\");\r\n    setAssignDate(\"\");\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const fetchAllPackages = async () => {\r\n    var list = await getData(\"packages/displayall\");\r\n    setList(list.data);\r\n  };\r\n\r\n  const fetchAllVendors = async () => {\r\n    var list = await getData(\"vendors/displayall\");\r\n    setVendorList(list.data);\r\n  };\r\n\r\n  useEffect(function () {\r\n    fetchAllPackages();\r\n    fetchAllVendors();\r\n  }, []);\r\n\r\n  const handlePackageChange = (event) => {\r\n    setPackageId(event.target.value);\r\n  };\r\n\r\n  const handleVendorChange = (event) => {\r\n    setVendorId(event.target.value);\r\n  };\r\n\r\n  const fillPackageItem = () => {\r\n    return getList.map((item, key) => {\r\n      return <MenuItem value={item.packageid}>{item.packagename}</MenuItem>;\r\n    });\r\n  };\r\n\r\n  const fillVendorItem = () => {\r\n    return getVendorList.map((item, key) => {\r\n      return <MenuItem value={item.vendorid}>{item.vendorname}</MenuItem>;\r\n    });\r\n  };\r\n\r\n//   const todayDate = (e) => {\r\n//     setdate(e.target.value);\r\n//     const today = new Date(e.target.value);\r\n//     const tomorrow = new Date(today);\r\n//     tomorrow.setDate(tomorrow.getDate() + 1);\r\n//     setExpiredate(tomorrow.toString().substr(0,16))\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"\">\r\n        <div class=\"panel panel-default no-bd\">\r\n          <div class=\"panel-header bg-dark\">\r\n            <h3 class=\"panel-title\">\r\n              <strong>Add Profile</strong>\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body bg-white\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 \">\r\n                <form\r\n                  role=\"form\"\r\n                  class=\"form-validation\"\r\n                  novalidate=\"novalidate\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Package</label>\r\n                        {/* <img src={getErrPackageId} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          {/* <FormControl fullWidth> */}\r\n\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getPackageId}\r\n                            fullWidth=\"true\"\r\n                            onChange={(event) => handlePackageChange(event)}\r\n                          >\r\n                            {fillPackageItem()}\r\n                          </Select>\r\n                          {/* </FormControl> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Vendors</label>\r\n                        {/* <img src={getErrPackageId} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          {/* <FormControl fullWidth> */}\r\n\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={getVendorId}\r\n                            fullWidth=\"true\"\r\n                            onChange={(event) => handleVendorChange(event)}\r\n                          >\r\n                            {fillVendorItem()}\r\n                          </Select>\r\n                          {/* </FormControl> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Assign By</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Assign By\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getAssign}\r\n                            // onChange={(e) => todayDate(e)}\r\n                            onChange={(event) => {\r\n                              // today(event);\r\n                              setAssign(event.target.value);\r\n                            }}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">Assign Date</label>\r\n                        {/* <img src={getErrPackageTime} width=\"10\" height=\"10\" /> */}\r\n                        <div class=\"append-icon\">\r\n                          <input\r\n                            type=\"date\"\r\n                            class=\"form-control\"\r\n                            minlength=\"3\"\r\n                            placeholder=\"Date\"\r\n                            required=\"\"\r\n                            aria-required=\"true\"\r\n                            value={getAssignDate}\r\n                            onChange={(e) => setAssignDate(e.target.value)}\r\n                          />\r\n                          <i class=\"fa fa-clock \"></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* <div class=\"col-sm-6\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"control-label\">PaymentStatus</label>\r\n                        <select\r\n                          class=\"form-control\"\r\n                          value={getPaymentstatus}\r\n                          onChange={(event) =>\r\n                            setPaymentstatus(event.target.value)\r\n                          }\r\n                        >\r\n                          <option>----Payement Status----</option>\r\n                          <option value=\"Pending\">Pending</option>\r\n                          <option value=\"Done\">Done</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                      <label class=\"control-label\">Status</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        value={getStatus}\r\n                        onChange={(event) => setStatus(event.target.value)}\r\n                      >\r\n                        <option>----Status----</option>\r\n                        <option value=\"Activate\">Activate</option>\r\n                        <option value=\"Deactivate\">Deactivate</option>\r\n                      </select>\r\n                    </div> */}\r\n                  </div>\r\n\r\n                  <div class=\"text-center  m-t-20\">\r\n                    <button\r\n                      className=\"btn btn-success btn-transparent\"\r\n                      type=\"submit\"\r\n                      // class=\"btn btn-embossed btn-primary\"\r\n                      // onSubmit={handleSubmit}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger btn-transparent\"\r\n                      type=\"reset\"\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                  {getMsg}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Paper className={classes.mainpaper}>\r\n        <Paper elevation={1} className={classes.headingstyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <b>&nbsp;&nbsp;&nbsp;Add Features Packages </b>\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} className={classes.center}>\r\n            <img src={getErrPackageId} width=\"10\" height=\"10\" />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Packages</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={getPackageId}\r\n                fullWidth=\"true\"\r\n                onChange={(event) => handlePackageChange(event)}\r\n              >\r\n                {fillPackageItem()}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageTime} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Time\"\r\n              variant=\"standard\"\r\n              value={getPackageTime}\r\n              onChange={(event) => {\r\n                setPackageTime(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.center}>\r\n            <img src={getErrPackageDistance} width=\"10\" height=\"10\" />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Package Distance\"\r\n              variant=\"standard\"\r\n              value={getPackageDistance}\r\n              onChange={(event) => {\r\n                setPackageDistance(event.target.value);\r\n              }}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.container}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={(event) => {\r\n                ClearData();\r\n              }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <b>Message:&nbsp;&nbsp;{getMsg}</b>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PackageCustomer;\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\displayform\\DisplayPhoneCall.js",["1077","1078","1079","1080","1081","1082","1083","1084","1085"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport {\r\n  getData,\r\n  ServerURL,\r\n  postData,\r\n  postDataAndImage,\r\n} from \"../FetchNodeServices\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  maincontainer: {\r\n    // display: \"flex\",\r\n    alignItems: \"center\",\r\n    //  justifyContent:'center'\r\n    // margin:40,\r\n  },\r\n\r\n  mainpaper: {\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: 550,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n\r\n  head: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    backgroundImage:\r\n      \"linear-gradient(to left, black 5px , #2979ff 600px ,black)\",\r\n    // backgroundColor:'#ececec',\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n  },\r\n\r\n  mainheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n    padding: \"5px 0px 0px 0px\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //  border: '3px solid #000',\r\n    height: 350,\r\n    width: 800,\r\n    boxShadow: theme.shadows[20],\r\n    padding: theme.spacing(3, 3, 3),\r\n  },\r\n\r\n  modalheading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: 20,\r\n    //  fontWeight:'bold',\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function Display() {\r\n  const classes = useStyles();\r\n  const [getColumn, setColumn] = useState({\r\n    columns: [\r\n      { title: \"Transation Id\", field: \"transaction_id\", editable: \"never\" },\r\n      { title: \"Employee Id\", field: \"employee_id\", editable: \"never\" },\r\n      { title: \"Vendor Id\", field: \"vender_id\", editable: \"never\" },\r\n      { title: \"Name\", field: \"name\", editable: \"never\" },\r\n      { title: \"Date\", field: \"date\", editable: \"never\" },\r\n      { title: \"Time\", field: \"time\", editable: \"never\" },\r\n      { title: \"Time\", field: \"duration\", editable: \"never\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n      { title: \"Phone No\", field: \"phone_no\", editable: \"never\" },\r\n      { title: \"Pik Status\", field: \"pick_status\", editable: \"never\" },\r\n    ],\r\n  });\r\n\r\n  const [getPhoneCallList, setPhoneCallList] = useState([]);\r\n  const [getFromSelectedDate, setFromSelectedDate] = useState();\r\n  const [getToSelectedDate, setToSelectedDate] = useState();\r\n  const [getFromSelectedTime, setFromSelectedTime] = useState();\r\n  const [getToSelectedTime, setToSelectedTime] = useState();\r\n\r\n  useEffect(function () {\r\n    var vendor = JSON.parse(localStorage.getItem(\"vendor\"));\r\n    fetchPhoneCall(vendor.vendorid);\r\n  }, []);\r\n\r\n  const fetchPhoneCall = async (v_id) => {\r\n    let body = {\r\n      vendorid: v_id,\r\n    };\r\n    let list = await postData(\"phonecall/displayById\", body);\r\n    setPhoneCallList(list.result);\r\n  };\r\n\r\n  const searchByDate = async () => {\r\n    let body = {\r\n      previousdate: getFromSelectedDate,\r\n      nextdate: getToSelectedDate,\r\n    };\r\n    let list = await postData(\"phonecall/searchByDate\", body);\r\n    setPhoneCallList(list);\r\n  };\r\n\r\n  const searchByTime = async () => {\r\n    let body = {\r\n      previousTime: getFromSelectedTime,\r\n      nextTime: getToSelectedTime,\r\n    };\r\n    let list = await postData(\"phonecall/searchByTime\", body);\r\n    setPhoneCallList(list);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.maincontainer}>\r\n        <div style={{ backgroundColor: \"#FFF\" }}>\r\n          <div class=\"panel panel-default no-bd\" style={{ width: \"100%\" }}>\r\n            <div class=\"panel-header bg-dark\">\r\n              <h3 class=\"panel-title\">\r\n                <strong>Phone Call Record</strong>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div style={{ margin: 30 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Search From Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    defaultValue=\"2017-05-24\"\r\n                    value={getFromSelectedDate}\r\n                    onChange={(event) =>\r\n                      setFromSelectedDate(event.target.value)\r\n                    }\r\n                    // className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Search From Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    defaultValue=\"2017-05-24\"\r\n                    value={getToSelectedDate}\r\n                    onChange={(event) => setToSelectedDate(event.target.value)}\r\n                    // className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    className=\"btn btn-success btn-rounded btn-transparent\"\r\n                    startIcon={<SearchIcon />}\r\n                    onClick={() => searchByDate()}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: 30,\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Search From Time\"\r\n                    type=\"time\"\r\n                    fullWidth\r\n                    defaultValue=\"07:30\"\r\n                    value={getFromSelectedTime}\r\n                    onChange={(event) =>\r\n                      setFromSelectedTime(event.target.value)\r\n                    }\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Search To Time\"\r\n                    type=\"time\"\r\n                    fullWidth\r\n                    defaultValue=\"07:30\"\r\n                    value={getToSelectedTime}\r\n                    onChange={(event) => setToSelectedTime(event.target.value)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                      step: 300, // 5 min\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  item\r\n                  xs={12}\r\n                  sm={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    className=\"btn btn-success btn-rounded btn-transparent\"\r\n                    startIcon={<SearchIcon />}\r\n                    onClick={searchByTime}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <MaterialTable\r\n            title=\"Tracking List\"\r\n            columns={getColumn.columns}\r\n            data={getPhoneCallList}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"azure\",\r\n                color: \"#309c87\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n              },\r\n              rowStyle: {\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Calibri\",\r\n                lineHeight: \"none\",\r\n                fontSize: 12,\r\n              },\r\n            }}\r\n            // actions={[\r\n            //   {\r\n            //     icon: 'edit',\r\n            //     tooltip: 'Edit',\r\n            //     onClick: (event,rowData)=>handleDialogOpen(rowData)\r\n            //   }\r\n            // ]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HPNIS\\Downloads\\Track4uFrontEnd\\src\\components\\vendorlogin\\AutoCompleteTextField.js",[],{"ruleId":"1086","replacedBy":"1087"},{"ruleId":"1088","replacedBy":"1089"},{"ruleId":"1090","severity":1,"message":"1091","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1095","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1096","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1097","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1098","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1099","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1100","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1101","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1102","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1103","line":16,"column":10,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1104","line":16,"column":28,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1105","line":18,"column":10,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1106","line":65,"column":9,"nodeType":"1092","messageId":"1093","endLine":65,"endColumn":16},{"ruleId":"1107","severity":1,"message":"1108","line":74,"column":23,"nodeType":"1109","messageId":"1110","endLine":74,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1111","line":89,"column":12,"nodeType":"1092","messageId":"1093","endLine":89,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1113","line":110,"column":74,"nodeType":"1114","endLine":111,"endColumn":10},{"ruleId":"1115","severity":1,"message":"1116","line":118,"column":37,"nodeType":"1109","messageId":"1117","endLine":118,"endColumn":38},{"ruleId":"1115","severity":1,"message":"1116","line":118,"column":64,"nodeType":"1109","messageId":"1117","endLine":118,"endColumn":65},{"ruleId":"1118","severity":1,"message":"1119","line":126,"column":13,"nodeType":"1120","endLine":126,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":127,"column":15,"nodeType":"1120","endLine":127,"endColumn":73},{"ruleId":"1112","severity":1,"message":"1113","line":232,"column":18,"nodeType":"1114","endLine":233,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1091","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1095","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1096","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1097","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1098","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1099","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1100","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1101","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1102","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1103","line":16,"column":10,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1104","line":16,"column":28,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1105","line":18,"column":10,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1106","line":65,"column":9,"nodeType":"1092","messageId":"1093","endLine":65,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1111","line":91,"column":12,"nodeType":"1092","messageId":"1093","endLine":91,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1113","line":112,"column":74,"nodeType":"1114","endLine":113,"endColumn":10},{"ruleId":"1115","severity":1,"message":"1116","line":120,"column":37,"nodeType":"1109","messageId":"1117","endLine":120,"endColumn":38},{"ruleId":"1115","severity":1,"message":"1116","line":120,"column":73,"nodeType":"1109","messageId":"1117","endLine":120,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":162,"column":12,"nodeType":"1120","endLine":162,"endColumn":63},{"ruleId":"1121","severity":1,"message":"1122","line":166,"column":12,"nodeType":"1120","endLine":166,"endColumn":64},{"ruleId":"1121","severity":1,"message":"1122","line":170,"column":11,"nodeType":"1120","endLine":170,"endColumn":64},{"ruleId":"1121","severity":1,"message":"1122","line":175,"column":9,"nodeType":"1120","endLine":175,"endColumn":57},{"ruleId":"1090","severity":1,"message":"1123","line":2,"column":29,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1124","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1094","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1125","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1106","line":60,"column":9,"nodeType":"1092","messageId":"1093","endLine":60,"endColumn":16},{"ruleId":"1118","severity":1,"message":"1119","line":165,"column":17,"nodeType":"1120","endLine":169,"endColumn":18},{"ruleId":"1121","severity":1,"message":"1122","line":174,"column":25,"nodeType":"1120","endLine":174,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":195,"column":25,"nodeType":"1120","endLine":195,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":217,"column":25,"nodeType":"1120","endLine":221,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1104","line":9,"column":28,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1128","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1129","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1130","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1131","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1132","line":17,"column":3,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1133","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":39},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1134","line":97,"column":10,"nodeType":"1092","messageId":"1093","endLine":97,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1135","line":100,"column":10,"nodeType":"1092","messageId":"1093","endLine":100,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1136","line":103,"column":10,"nodeType":"1092","messageId":"1093","endLine":103,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1137","line":183,"column":9,"nodeType":"1092","messageId":"1093","endLine":183,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1138","line":187,"column":9,"nodeType":"1092","messageId":"1093","endLine":187,"endColumn":31},{"ruleId":"1118","severity":1,"message":"1119","line":250,"column":15,"nodeType":"1120","endLine":250,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":255,"column":23,"nodeType":"1120","endLine":255,"endColumn":72},{"ruleId":"1121","severity":1,"message":"1122","line":274,"column":23,"nodeType":"1120","endLine":274,"endColumn":76},{"ruleId":"1090","severity":1,"message":"1123","line":4,"column":18,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1103","line":4,"column":38,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":54},{"ruleId":"1090","severity":1,"message":"1139","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1131","line":23,"column":3,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1140","line":107,"column":17,"nodeType":"1092","messageId":"1093","endLine":107,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1141","line":178,"column":8,"nodeType":"1092","messageId":"1093","endLine":178,"endColumn":14},{"ruleId":"1121","severity":1,"message":"1122","line":275,"column":5,"nodeType":"1120","endLine":275,"endColumn":60},{"ruleId":"1121","severity":1,"message":"1122","line":279,"column":12,"nodeType":"1120","endLine":279,"endColumn":65},{"ruleId":"1121","severity":1,"message":"1122","line":283,"column":4,"nodeType":"1120","endLine":283,"endColumn":57},{"ruleId":"1121","severity":1,"message":"1122","line":297,"column":9,"nodeType":"1120","endLine":297,"endColumn":59},{"ruleId":"1121","severity":1,"message":"1122","line":310,"column":9,"nodeType":"1120","endLine":310,"endColumn":63},{"ruleId":"1121","severity":1,"message":"1122","line":314,"column":10,"nodeType":"1120","endLine":314,"endColumn":61},{"ruleId":"1121","severity":1,"message":"1122","line":327,"column":10,"nodeType":"1120","endLine":327,"endColumn":59},{"ruleId":"1121","severity":1,"message":"1122","line":341,"column":8,"nodeType":"1120","endLine":341,"endColumn":57},{"ruleId":"1090","severity":1,"message":"1127","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1142","line":83,"column":10,"nodeType":"1092","messageId":"1093","endLine":83,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1143","line":83,"column":22,"nodeType":"1092","messageId":"1093","endLine":83,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1144","line":93,"column":10,"nodeType":"1092","messageId":"1093","endLine":93,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1140","line":95,"column":17,"nodeType":"1092","messageId":"1093","endLine":95,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1141","line":129,"column":9,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":15},{"ruleId":"1121","severity":1,"message":"1122","line":224,"column":23,"nodeType":"1120","endLine":224,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":233,"column":23,"nodeType":"1120","endLine":233,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":243,"column":23,"nodeType":"1120","endLine":243,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":253,"column":23,"nodeType":"1120","endLine":253,"endColumn":76},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1145","line":71,"column":10,"nodeType":"1092","messageId":"1093","endLine":71,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1146","line":74,"column":10,"nodeType":"1092","messageId":"1093","endLine":74,"endColumn":20},{"ruleId":"1118","severity":1,"message":"1119","line":201,"column":17,"nodeType":"1120","endLine":205,"endColumn":18},{"ruleId":"1121","severity":1,"message":"1122","line":210,"column":25,"nodeType":"1120","endLine":210,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":232,"column":25,"nodeType":"1120","endLine":232,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":254,"column":25,"nodeType":"1120","endLine":254,"endColumn":73},{"ruleId":"1121","severity":1,"message":"1122","line":273,"column":25,"nodeType":"1120","endLine":273,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":296,"column":25,"nodeType":"1120","endLine":296,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":332,"column":25,"nodeType":"1120","endLine":332,"endColumn":77},{"ruleId":"1090","severity":1,"message":"1101","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1147","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1148","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1142","line":85,"column":10,"nodeType":"1092","messageId":"1093","endLine":85,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1143","line":85,"column":22,"nodeType":"1092","messageId":"1093","endLine":85,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1146","line":97,"column":10,"nodeType":"1092","messageId":"1093","endLine":97,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1149","line":97,"column":22,"nodeType":"1092","messageId":"1093","endLine":97,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1140","line":102,"column":17,"nodeType":"1092","messageId":"1093","endLine":102,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1141","line":139,"column":9,"nodeType":"1092","messageId":"1093","endLine":139,"endColumn":15},{"ruleId":"1118","severity":1,"message":"1119","line":268,"column":21,"nodeType":"1120","endLine":272,"endColumn":22},{"ruleId":"1121","severity":1,"message":"1122","line":277,"column":29,"nodeType":"1120","endLine":277,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":299,"column":29,"nodeType":"1120","endLine":299,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":321,"column":29,"nodeType":"1120","endLine":321,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":342,"column":29,"nodeType":"1120","endLine":346,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":369,"column":29,"nodeType":"1120","endLine":369,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":389,"column":29,"nodeType":"1120","endLine":389,"endColumn":81},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1140","line":83,"column":17,"nodeType":"1092","messageId":"1093","endLine":83,"endColumn":25},{"ruleId":"1118","severity":1,"message":"1119","line":238,"column":23,"nodeType":"1120","endLine":242,"endColumn":24},{"ruleId":"1121","severity":1,"message":"1122","line":268,"column":31,"nodeType":"1120","endLine":272,"endColumn":33},{"ruleId":"1121","severity":1,"message":"1122","line":293,"column":31,"nodeType":"1120","endLine":297,"endColumn":33},{"ruleId":"1121","severity":1,"message":"1122","line":320,"column":31,"nodeType":"1120","endLine":324,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1151","line":1,"column":27,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":36},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1104","line":9,"column":28,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1152","line":9,"column":37,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1153","line":13,"column":3,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1154","line":14,"column":3,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1155","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1125","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1156","line":99,"column":10,"nodeType":"1092","messageId":"1093","endLine":99,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1157","line":112,"column":9,"nodeType":"1092","messageId":"1093","endLine":112,"endColumn":27},{"ruleId":"1118","severity":1,"message":"1119","line":230,"column":15,"nodeType":"1120","endLine":230,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":235,"column":23,"nodeType":"1120","endLine":235,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":257,"column":23,"nodeType":"1120","endLine":257,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":278,"column":23,"nodeType":"1120","endLine":278,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":299,"column":23,"nodeType":"1120","endLine":299,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":321,"column":23,"nodeType":"1120","endLine":321,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":343,"column":23,"nodeType":"1120","endLine":343,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1123","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1103","line":8,"column":3,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1148","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1139","line":24,"column":8,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1158","line":99,"column":10,"nodeType":"1092","messageId":"1093","endLine":99,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1159","line":99,"column":26,"nodeType":"1092","messageId":"1093","endLine":99,"endColumn":40},{"ruleId":"1090","severity":1,"message":"1140","line":110,"column":17,"nodeType":"1092","messageId":"1093","endLine":110,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1160","line":163,"column":9,"nodeType":"1092","messageId":"1093","endLine":163,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1141","line":216,"column":9,"nodeType":"1092","messageId":"1093","endLine":216,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1161","line":292,"column":9,"nodeType":"1092","messageId":"1093","endLine":292,"endColumn":24},{"ruleId":"1121","severity":1,"message":"1122","line":346,"column":23,"nodeType":"1120","endLine":346,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":355,"column":23,"nodeType":"1120","endLine":355,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":364,"column":23,"nodeType":"1120","endLine":364,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":382,"column":23,"nodeType":"1120","endLine":382,"endColumn":73},{"ruleId":"1121","severity":1,"message":"1122","line":398,"column":23,"nodeType":"1120","endLine":398,"endColumn":73},{"ruleId":"1121","severity":1,"message":"1122","line":414,"column":23,"nodeType":"1120","endLine":414,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":429,"column":23,"nodeType":"1120","endLine":429,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":444,"column":23,"nodeType":"1120","endLine":444,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1104","line":5,"column":3,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1139","line":24,"column":8,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1140","line":114,"column":17,"nodeType":"1092","messageId":"1093","endLine":114,"endColumn":25},{"ruleId":"1107","severity":1,"message":"1108","line":149,"column":29,"nodeType":"1109","messageId":"1110","endLine":149,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1141","line":222,"column":9,"nodeType":"1092","messageId":"1093","endLine":222,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1161","line":320,"column":9,"nodeType":"1092","messageId":"1093","endLine":320,"endColumn":24},{"ruleId":"1121","severity":1,"message":"1122","line":368,"column":23,"nodeType":"1120","endLine":368,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":377,"column":23,"nodeType":"1120","endLine":377,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":386,"column":23,"nodeType":"1120","endLine":386,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":404,"column":23,"nodeType":"1120","endLine":404,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":414,"column":23,"nodeType":"1120","endLine":414,"endColumn":72},{"ruleId":"1121","severity":1,"message":"1122","line":424,"column":23,"nodeType":"1120","endLine":424,"endColumn":70},{"ruleId":"1121","severity":1,"message":"1122","line":438,"column":23,"nodeType":"1120","endLine":438,"endColumn":70},{"ruleId":"1121","severity":1,"message":"1122","line":452,"column":23,"nodeType":"1120","endLine":456,"endColumn":25},{"ruleId":"1121","severity":1,"message":"1122","line":468,"column":23,"nodeType":"1120","endLine":468,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":513,"column":23,"nodeType":"1120","endLine":513,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1104","line":9,"column":28,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1129","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1130","line":14,"column":3,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1131","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1132","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1125","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":22,"column":8,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":19},{"ruleId":"1162","severity":1,"message":"1163","line":111,"column":19,"nodeType":"1164","messageId":"1165","endLine":111,"endColumn":28},{"ruleId":"1162","severity":1,"message":"1163","line":135,"column":19,"nodeType":"1164","messageId":"1165","endLine":135,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":136,"column":22,"nodeType":"1109","messageId":"1110","endLine":136,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1163","line":137,"column":28,"nodeType":"1164","messageId":"1165","endLine":137,"endColumn":37},{"ruleId":"1118","severity":1,"message":"1119","line":281,"column":15,"nodeType":"1120","endLine":281,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":286,"column":23,"nodeType":"1120","endLine":286,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":308,"column":23,"nodeType":"1120","endLine":308,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":332,"column":23,"nodeType":"1120","endLine":332,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":354,"column":23,"nodeType":"1120","endLine":354,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":378,"column":23,"nodeType":"1120","endLine":378,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":397,"column":23,"nodeType":"1120","endLine":397,"endColumn":70},{"ruleId":"1121","severity":1,"message":"1122","line":418,"column":23,"nodeType":"1120","endLine":418,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":440,"column":23,"nodeType":"1120","endLine":440,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":464,"column":23,"nodeType":"1120","endLine":464,"endColumn":74},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1131","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1133","line":19,"column":10,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":39},{"ruleId":"1090","severity":1,"message":"1125","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":22,"column":8,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":19},{"ruleId":"1118","severity":1,"message":"1119","line":318,"column":15,"nodeType":"1120","endLine":318,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":323,"column":23,"nodeType":"1120","endLine":323,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":341,"column":23,"nodeType":"1120","endLine":341,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":362,"column":23,"nodeType":"1120","endLine":362,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":383,"column":23,"nodeType":"1120","endLine":383,"endColumn":73},{"ruleId":"1166","severity":1,"message":"1167","line":390,"column":27,"nodeType":"1168","endLine":390,"endColumn":43},{"ruleId":"1121","severity":1,"message":"1122","line":404,"column":23,"nodeType":"1120","endLine":404,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":426,"column":23,"nodeType":"1120","endLine":426,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":449,"column":23,"nodeType":"1120","endLine":449,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1104","line":5,"column":3,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1129","line":27,"column":8,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1130","line":29,"column":3,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1131","line":30,"column":3,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1132","line":31,"column":3,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1140","line":91,"column":17,"nodeType":"1092","messageId":"1093","endLine":91,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1169","line":111,"column":23,"nodeType":"1092","messageId":"1093","endLine":111,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1134","line":126,"column":10,"nodeType":"1092","messageId":"1093","endLine":126,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1135","line":129,"column":10,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1136","line":132,"column":10,"nodeType":"1092","messageId":"1093","endLine":132,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1137","line":283,"column":9,"nodeType":"1092","messageId":"1093","endLine":283,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1138","line":287,"column":9,"nodeType":"1092","messageId":"1093","endLine":287,"endColumn":31},{"ruleId":"1118","severity":1,"message":"1119","line":344,"column":19,"nodeType":"1120","endLine":348,"endColumn":20},{"ruleId":"1121","severity":1,"message":"1122","line":372,"column":27,"nodeType":"1120","endLine":372,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":391,"column":27,"nodeType":"1120","endLine":391,"endColumn":80},{"ruleId":"1090","severity":1,"message":"1151","line":1,"column":27,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":36},{"ruleId":"1090","severity":1,"message":"1147","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1096","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1127","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1170","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1124","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1153","line":26,"column":3,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1154","line":27,"column":3,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1155","line":28,"column":3,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1125","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":32,"column":8,"nodeType":"1092","messageId":"1093","endLine":32,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1140","line":101,"column":17,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1142","line":128,"column":10,"nodeType":"1092","messageId":"1093","endLine":128,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1143","line":128,"column":22,"nodeType":"1092","messageId":"1093","endLine":128,"endColumn":32},{"ruleId":"1090","severity":1,"message":"1156","line":146,"column":10,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1171","line":146,"column":29,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":46},{"ruleId":"1090","severity":1,"message":"1157","line":191,"column":9,"nodeType":"1092","messageId":"1093","endLine":191,"endColumn":27},{"ruleId":"1121","severity":1,"message":"1122","line":302,"column":27,"nodeType":"1120","endLine":302,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":320,"column":27,"nodeType":"1120","endLine":320,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":342,"column":27,"nodeType":"1120","endLine":342,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":363,"column":27,"nodeType":"1120","endLine":363,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":384,"column":27,"nodeType":"1120","endLine":384,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":406,"column":27,"nodeType":"1120","endLine":406,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":428,"column":27,"nodeType":"1120","endLine":428,"endColumn":76},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1125","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1104","line":16,"column":28,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1155","line":21,"column":3,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1131","line":26,"column":3,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":21},{"ruleId":"1172","severity":1,"message":"1173","line":70,"column":3,"nodeType":"1174","messageId":"1110","endLine":70,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1175","line":113,"column":10,"nodeType":"1092","messageId":"1093","endLine":113,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1176","line":118,"column":23,"nodeType":"1092","messageId":"1093","endLine":118,"endColumn":34},{"ruleId":"1162","severity":1,"message":"1163","line":126,"column":19,"nodeType":"1164","messageId":"1165","endLine":126,"endColumn":28},{"ruleId":"1177","severity":1,"message":"1178","line":137,"column":6,"nodeType":"1179","endLine":137,"endColumn":8,"suggestions":"1180"},{"ruleId":"1162","severity":1,"message":"1163","line":175,"column":19,"nodeType":"1164","messageId":"1165","endLine":175,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":176,"column":22,"nodeType":"1109","messageId":"1110","endLine":176,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1163","line":177,"column":28,"nodeType":"1164","messageId":"1165","endLine":177,"endColumn":37},{"ruleId":"1118","severity":1,"message":"1119","line":371,"column":17,"nodeType":"1120","endLine":376,"endColumn":18},{"ruleId":"1121","severity":1,"message":"1122","line":400,"column":25,"nodeType":"1120","endLine":400,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":423,"column":25,"nodeType":"1120","endLine":423,"endColumn":73},{"ruleId":"1121","severity":1,"message":"1122","line":442,"column":25,"nodeType":"1120","endLine":442,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":463,"column":25,"nodeType":"1120","endLine":463,"endColumn":73},{"ruleId":"1121","severity":1,"message":"1122","line":483,"column":25,"nodeType":"1120","endLine":483,"endColumn":72},{"ruleId":"1121","severity":1,"message":"1122","line":505,"column":25,"nodeType":"1120","endLine":505,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":524,"column":25,"nodeType":"1120","endLine":524,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":549,"column":25,"nodeType":"1120","endLine":549,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":569,"column":25,"nodeType":"1120","endLine":569,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":615,"column":23,"nodeType":"1120","endLine":615,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":626,"column":25,"nodeType":"1120","endLine":626,"endColumn":80},{"ruleId":"1090","severity":1,"message":"1104","line":5,"column":3,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":28,"column":8,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1140","line":102,"column":17,"nodeType":"1092","messageId":"1093","endLine":102,"endColumn":25},{"ruleId":"1118","severity":1,"message":"1119","line":390,"column":21,"nodeType":"1120","endLine":394,"endColumn":22},{"ruleId":"1121","severity":1,"message":"1122","line":420,"column":29,"nodeType":"1120","endLine":420,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":441,"column":29,"nodeType":"1120","endLine":441,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":463,"column":29,"nodeType":"1120","endLine":467,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":491,"column":29,"nodeType":"1120","endLine":495,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":517,"column":29,"nodeType":"1120","endLine":521,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":545,"column":29,"nodeType":"1120","endLine":549,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":571,"column":29,"nodeType":"1120","endLine":575,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":600,"column":29,"nodeType":"1120","endLine":600,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":621,"column":29,"nodeType":"1120","endLine":621,"endColumn":75},{"ruleId":"1121","severity":1,"message":"1122","line":645,"column":29,"nodeType":"1120","endLine":645,"endColumn":78},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":10,"column":3,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1104","line":11,"column":3,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1125","line":26,"column":8,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":28,"column":8,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":19},{"ruleId":"1121","severity":1,"message":"1122","line":94,"column":5,"nodeType":"1120","endLine":94,"endColumn":51},{"ruleId":"1090","severity":1,"message":"1181","line":118,"column":9,"nodeType":"1092","messageId":"1093","endLine":118,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1182","line":146,"column":10,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1183","line":146,"column":22,"nodeType":"1092","messageId":"1093","endLine":146,"endColumn":32},{"ruleId":"1118","severity":1,"message":"1119","line":451,"column":15,"nodeType":"1120","endLine":456,"endColumn":16},{"ruleId":"1121","severity":1,"message":"1122","line":461,"column":23,"nodeType":"1120","endLine":461,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":480,"column":23,"nodeType":"1120","endLine":480,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":502,"column":23,"nodeType":"1120","endLine":502,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":526,"column":23,"nodeType":"1120","endLine":526,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":548,"column":23,"nodeType":"1120","endLine":548,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":572,"column":23,"nodeType":"1120","endLine":572,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":594,"column":23,"nodeType":"1120","endLine":594,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":619,"column":23,"nodeType":"1120","endLine":619,"endColumn":69},{"ruleId":"1121","severity":1,"message":"1122","line":640,"column":23,"nodeType":"1120","endLine":640,"endColumn":69},{"ruleId":"1121","severity":1,"message":"1122","line":705,"column":23,"nodeType":"1120","endLine":705,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1104","line":5,"column":3,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1184","line":96,"column":18,"nodeType":"1092","messageId":"1093","endLine":96,"endColumn":27},{"ruleId":"1162","severity":1,"message":"1163","line":149,"column":19,"nodeType":"1164","messageId":"1165","endLine":149,"endColumn":28},{"ruleId":"1162","severity":1,"message":"1163","line":169,"column":19,"nodeType":"1164","messageId":"1165","endLine":169,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":170,"column":22,"nodeType":"1109","messageId":"1110","endLine":170,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1163","line":171,"column":28,"nodeType":"1164","messageId":"1165","endLine":171,"endColumn":37},{"ruleId":"1118","severity":1,"message":"1119","line":340,"column":21,"nodeType":"1120","endLine":344,"endColumn":22},{"ruleId":"1121","severity":1,"message":"1122","line":372,"column":29,"nodeType":"1120","endLine":376,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":398,"column":29,"nodeType":"1120","endLine":402,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":426,"column":29,"nodeType":"1120","endLine":426,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":448,"column":29,"nodeType":"1120","endLine":448,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":472,"column":29,"nodeType":"1120","endLine":472,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":491,"column":29,"nodeType":"1120","endLine":491,"endColumn":76},{"ruleId":"1121","severity":1,"message":"1122","line":514,"column":29,"nodeType":"1120","endLine":514,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":536,"column":29,"nodeType":"1120","endLine":540,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":564,"column":29,"nodeType":"1120","endLine":564,"endColumn":80},{"ruleId":"1090","severity":1,"message":"1095","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1185","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1100","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1186","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1187","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1188","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1190","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1191","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1099","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1192","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1193","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1194","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1104","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1123","line":22,"column":19,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1091","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1105","line":33,"column":10,"nodeType":"1092","messageId":"1093","endLine":33,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1195","line":133,"column":10,"nodeType":"1092","messageId":"1093","endLine":133,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1196","line":134,"column":10,"nodeType":"1092","messageId":"1093","endLine":134,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1197","line":136,"column":9,"nodeType":"1092","messageId":"1093","endLine":136,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1198","line":139,"column":9,"nodeType":"1092","messageId":"1093","endLine":139,"endColumn":26},{"ruleId":"1177","severity":1,"message":"1199","line":156,"column":6,"nodeType":"1179","endLine":156,"endColumn":8,"suggestions":"1200"},{"ruleId":"1090","severity":1,"message":"1201","line":199,"column":9,"nodeType":"1092","messageId":"1093","endLine":199,"endColumn":25},{"ruleId":"1121","severity":1,"message":"1122","line":208,"column":13,"nodeType":"1120","endLine":208,"endColumn":69},{"ruleId":"1202","severity":1,"message":"1203","line":357,"column":15,"nodeType":"1120","endLine":357,"endColumn":78},{"ruleId":"1202","severity":1,"message":"1203","line":364,"column":19,"nodeType":"1120","endLine":364,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":390,"column":17,"nodeType":"1120","endLine":395,"endColumn":18},{"ruleId":"1204","severity":1,"message":"1205","line":396,"column":19,"nodeType":"1120","endLine":396,"endColumn":67},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1104","line":9,"column":28,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1132","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1206","line":126,"column":10,"nodeType":"1092","messageId":"1093","endLine":126,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1207","line":126,"column":22,"nodeType":"1092","messageId":"1093","endLine":126,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":180,"column":26,"nodeType":"1109","messageId":"1110","endLine":180,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":181,"column":27,"nodeType":"1109","messageId":"1110","endLine":181,"endColumn":29},{"ruleId":"1107","severity":1,"message":"1108","line":182,"column":29,"nodeType":"1109","messageId":"1110","endLine":182,"endColumn":31},{"ruleId":"1107","severity":1,"message":"1108","line":183,"column":28,"nodeType":"1109","messageId":"1110","endLine":183,"endColumn":30},{"ruleId":"1107","severity":1,"message":"1108","line":184,"column":26,"nodeType":"1109","messageId":"1110","endLine":184,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":185,"column":28,"nodeType":"1109","messageId":"1110","endLine":185,"endColumn":30},{"ruleId":"1107","severity":1,"message":"1108","line":186,"column":26,"nodeType":"1109","messageId":"1110","endLine":186,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1208","line":196,"column":30,"nodeType":"1109","messageId":"1110","endLine":196,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1208","line":199,"column":31,"nodeType":"1109","messageId":"1110","endLine":199,"endColumn":33},{"ruleId":"1107","severity":1,"message":"1208","line":202,"column":33,"nodeType":"1109","messageId":"1110","endLine":202,"endColumn":35},{"ruleId":"1107","severity":1,"message":"1208","line":205,"column":32,"nodeType":"1109","messageId":"1110","endLine":205,"endColumn":34},{"ruleId":"1107","severity":1,"message":"1208","line":208,"column":30,"nodeType":"1109","messageId":"1110","endLine":208,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1208","line":211,"column":32,"nodeType":"1109","messageId":"1110","endLine":211,"endColumn":34},{"ruleId":"1107","severity":1,"message":"1208","line":214,"column":30,"nodeType":"1109","messageId":"1110","endLine":214,"endColumn":32},{"ruleId":"1118","severity":1,"message":"1119","line":359,"column":15,"nodeType":"1120","endLine":359,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":364,"column":23,"nodeType":"1120","endLine":364,"endColumn":74},{"ruleId":"1121","severity":1,"message":"1122","line":404,"column":23,"nodeType":"1120","endLine":408,"endColumn":25},{"ruleId":"1121","severity":1,"message":"1122","line":430,"column":23,"nodeType":"1120","endLine":434,"endColumn":25},{"ruleId":"1121","severity":1,"message":"1122","line":457,"column":23,"nodeType":"1120","endLine":457,"endColumn":72},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1131","line":29,"column":3,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1140","line":101,"column":17,"nodeType":"1092","messageId":"1093","endLine":101,"endColumn":25},{"ruleId":"1121","severity":1,"message":"1122","line":377,"column":27,"nodeType":"1120","endLine":377,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":395,"column":27,"nodeType":"1120","endLine":395,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":418,"column":27,"nodeType":"1120","endLine":418,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":439,"column":27,"nodeType":"1120","endLine":439,"endColumn":77},{"ruleId":"1166","severity":1,"message":"1167","line":446,"column":31,"nodeType":"1168","endLine":446,"endColumn":47},{"ruleId":"1121","severity":1,"message":"1122","line":460,"column":27,"nodeType":"1120","endLine":464,"endColumn":29},{"ruleId":"1121","severity":1,"message":"1122","line":486,"column":27,"nodeType":"1120","endLine":490,"endColumn":29},{"ruleId":"1121","severity":1,"message":"1122","line":513,"column":27,"nodeType":"1120","endLine":513,"endColumn":76},{"ruleId":"1090","severity":1,"message":"1104","line":5,"column":3,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1101","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1131","line":25,"column":3,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1187","line":28,"column":8,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1209","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1125","line":31,"column":8,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":33,"column":8,"nodeType":"1092","messageId":"1093","endLine":33,"endColumn":19},{"ruleId":"1172","severity":1,"message":"1173","line":75,"column":3,"nodeType":"1174","messageId":"1110","endLine":75,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1175","line":121,"column":10,"nodeType":"1092","messageId":"1093","endLine":121,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1210","line":126,"column":17,"nodeType":"1092","messageId":"1093","endLine":126,"endColumn":25},{"ruleId":"1162","severity":1,"message":"1163","line":195,"column":19,"nodeType":"1164","messageId":"1165","endLine":195,"endColumn":28},{"ruleId":"1162","severity":1,"message":"1163","line":219,"column":19,"nodeType":"1164","messageId":"1165","endLine":219,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":220,"column":22,"nodeType":"1109","messageId":"1110","endLine":220,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1163","line":221,"column":28,"nodeType":"1164","messageId":"1165","endLine":221,"endColumn":37},{"ruleId":"1090","severity":1,"message":"1141","line":237,"column":9,"nodeType":"1092","messageId":"1093","endLine":237,"endColumn":15},{"ruleId":"1166","severity":1,"message":"1167","line":400,"column":11,"nodeType":"1168","endLine":400,"endColumn":37},{"ruleId":"1118","severity":1,"message":"1119","line":426,"column":23,"nodeType":"1120","endLine":430,"endColumn":24},{"ruleId":"1121","severity":1,"message":"1122","line":480,"column":31,"nodeType":"1120","endLine":484,"endColumn":33},{"ruleId":"1121","severity":1,"message":"1122","line":507,"column":31,"nodeType":"1120","endLine":507,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":528,"column":31,"nodeType":"1120","endLine":528,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":551,"column":31,"nodeType":"1120","endLine":551,"endColumn":79},{"ruleId":"1121","severity":1,"message":"1122","line":571,"column":31,"nodeType":"1120","endLine":571,"endColumn":78},{"ruleId":"1121","severity":1,"message":"1122","line":595,"column":31,"nodeType":"1120","endLine":595,"endColumn":81},{"ruleId":"1121","severity":1,"message":"1122","line":616,"column":31,"nodeType":"1120","endLine":616,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":639,"column":31,"nodeType":"1120","endLine":643,"endColumn":33},{"ruleId":"1121","severity":1,"message":"1122","line":663,"column":31,"nodeType":"1120","endLine":663,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":711,"column":29,"nodeType":"1120","endLine":711,"endColumn":77},{"ruleId":"1121","severity":1,"message":"1122","line":722,"column":31,"nodeType":"1120","endLine":726,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1132","line":27,"column":3,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1140","line":144,"column":17,"nodeType":"1092","messageId":"1093","endLine":144,"endColumn":25},{"ruleId":"1107","severity":1,"message":"1108","line":216,"column":18,"nodeType":"1109","messageId":"1110","endLine":216,"endColumn":20},{"ruleId":"1107","severity":1,"message":"1108","line":219,"column":25,"nodeType":"1109","messageId":"1110","endLine":219,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":222,"column":25,"nodeType":"1109","messageId":"1110","endLine":222,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":225,"column":25,"nodeType":"1109","messageId":"1110","endLine":225,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":228,"column":25,"nodeType":"1109","messageId":"1110","endLine":228,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":231,"column":25,"nodeType":"1109","messageId":"1110","endLine":231,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":234,"column":25,"nodeType":"1109","messageId":"1110","endLine":234,"endColumn":27},{"ruleId":"1107","severity":1,"message":"1108","line":379,"column":26,"nodeType":"1109","messageId":"1110","endLine":379,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":380,"column":27,"nodeType":"1109","messageId":"1110","endLine":380,"endColumn":29},{"ruleId":"1107","severity":1,"message":"1108","line":381,"column":29,"nodeType":"1109","messageId":"1110","endLine":381,"endColumn":31},{"ruleId":"1107","severity":1,"message":"1108","line":382,"column":28,"nodeType":"1109","messageId":"1110","endLine":382,"endColumn":30},{"ruleId":"1107","severity":1,"message":"1108","line":383,"column":26,"nodeType":"1109","messageId":"1110","endLine":383,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":384,"column":28,"nodeType":"1109","messageId":"1110","endLine":384,"endColumn":30},{"ruleId":"1107","severity":1,"message":"1108","line":385,"column":26,"nodeType":"1109","messageId":"1110","endLine":385,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1208","line":396,"column":30,"nodeType":"1109","messageId":"1110","endLine":396,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1208","line":399,"column":31,"nodeType":"1109","messageId":"1110","endLine":399,"endColumn":33},{"ruleId":"1107","severity":1,"message":"1208","line":402,"column":33,"nodeType":"1109","messageId":"1110","endLine":402,"endColumn":35},{"ruleId":"1107","severity":1,"message":"1208","line":405,"column":32,"nodeType":"1109","messageId":"1110","endLine":405,"endColumn":34},{"ruleId":"1107","severity":1,"message":"1208","line":408,"column":30,"nodeType":"1109","messageId":"1110","endLine":408,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1208","line":411,"column":32,"nodeType":"1109","messageId":"1110","endLine":411,"endColumn":34},{"ruleId":"1107","severity":1,"message":"1208","line":414,"column":30,"nodeType":"1109","messageId":"1110","endLine":414,"endColumn":32},{"ruleId":"1118","severity":1,"message":"1119","line":461,"column":21,"nodeType":"1120","endLine":466,"endColumn":22},{"ruleId":"1121","severity":1,"message":"1122","line":491,"column":29,"nodeType":"1120","endLine":491,"endColumn":80},{"ruleId":"1121","severity":1,"message":"1122","line":534,"column":29,"nodeType":"1120","endLine":538,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":560,"column":29,"nodeType":"1120","endLine":564,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":587,"column":29,"nodeType":"1120","endLine":587,"endColumn":78},{"ruleId":"1090","severity":1,"message":"1101","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1099","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1094","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1211","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1127","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1125","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1212","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1104","line":16,"column":28,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":35},{"ruleId":"1090","severity":1,"message":"1152","line":16,"column":37,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":45},{"ruleId":"1090","severity":1,"message":"1155","line":21,"column":3,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1129","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1130","line":25,"column":3,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1131","line":26,"column":3,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1132","line":27,"column":3,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1213","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":12},{"ruleId":"1172","severity":1,"message":"1173","line":71,"column":3,"nodeType":"1174","messageId":"1110","endLine":71,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1145","line":104,"column":10,"nodeType":"1092","messageId":"1093","endLine":104,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1214","line":105,"column":10,"nodeType":"1092","messageId":"1093","endLine":105,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1215","line":106,"column":10,"nodeType":"1092","messageId":"1093","endLine":106,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1216","line":107,"column":10,"nodeType":"1092","messageId":"1093","endLine":107,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1217","line":108,"column":10,"nodeType":"1092","messageId":"1093","endLine":108,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1218","line":109,"column":10,"nodeType":"1092","messageId":"1093","endLine":109,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1219","line":110,"column":10,"nodeType":"1092","messageId":"1093","endLine":110,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1220","line":111,"column":10,"nodeType":"1092","messageId":"1093","endLine":111,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1221","line":112,"column":10,"nodeType":"1092","messageId":"1093","endLine":112,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1222","line":113,"column":10,"nodeType":"1092","messageId":"1093","endLine":113,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1175","line":114,"column":10,"nodeType":"1092","messageId":"1093","endLine":114,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1223","line":115,"column":10,"nodeType":"1092","messageId":"1093","endLine":115,"endColumn":21},{"ruleId":"1162","severity":1,"message":"1163","line":125,"column":19,"nodeType":"1164","messageId":"1165","endLine":125,"endColumn":28},{"ruleId":"1090","severity":1,"message":"1224","line":136,"column":9,"nodeType":"1092","messageId":"1093","endLine":136,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1225","line":142,"column":9,"nodeType":"1092","messageId":"1093","endLine":142,"endColumn":20},{"ruleId":"1162","severity":1,"message":"1163","line":150,"column":19,"nodeType":"1164","messageId":"1165","endLine":150,"endColumn":28},{"ruleId":"1107","severity":1,"message":"1108","line":151,"column":22,"nodeType":"1109","messageId":"1110","endLine":151,"endColumn":24},{"ruleId":"1162","severity":1,"message":"1163","line":152,"column":28,"nodeType":"1164","messageId":"1165","endLine":152,"endColumn":37},{"ruleId":"1090","severity":1,"message":"1226","line":160,"column":9,"nodeType":"1092","messageId":"1093","endLine":160,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1227","line":166,"column":9,"nodeType":"1092","messageId":"1093","endLine":166,"endColumn":21},{"ruleId":"1202","severity":1,"message":"1203","line":356,"column":25,"nodeType":"1120","endLine":356,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":380,"column":25,"nodeType":"1120","endLine":380,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":394,"column":29,"nodeType":"1120","endLine":394,"endColumn":69},{"ruleId":"1202","severity":1,"message":"1203","line":397,"column":29,"nodeType":"1120","endLine":397,"endColumn":69},{"ruleId":"1202","severity":1,"message":"1203","line":412,"column":25,"nodeType":"1120","endLine":412,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":436,"column":25,"nodeType":"1120","endLine":436,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":465,"column":23,"nodeType":"1120","endLine":465,"endColumn":63},{"ruleId":"1202","severity":1,"message":"1203","line":474,"column":25,"nodeType":"1120","endLine":474,"endColumn":58},{"ruleId":"1202","severity":1,"message":"1203","line":540,"column":27,"nodeType":"1120","endLine":540,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":564,"column":27,"nodeType":"1120","endLine":564,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":578,"column":31,"nodeType":"1120","endLine":578,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1203","line":581,"column":31,"nodeType":"1120","endLine":581,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1203","line":596,"column":27,"nodeType":"1120","endLine":596,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":620,"column":27,"nodeType":"1120","endLine":620,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":649,"column":25,"nodeType":"1120","endLine":649,"endColumn":65},{"ruleId":"1202","severity":1,"message":"1203","line":658,"column":27,"nodeType":"1120","endLine":658,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":726,"column":27,"nodeType":"1120","endLine":726,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":750,"column":27,"nodeType":"1120","endLine":750,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":764,"column":31,"nodeType":"1120","endLine":764,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1203","line":767,"column":31,"nodeType":"1120","endLine":767,"endColumn":71},{"ruleId":"1202","severity":1,"message":"1203","line":782,"column":27,"nodeType":"1120","endLine":782,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":806,"column":27,"nodeType":"1120","endLine":806,"endColumn":60},{"ruleId":"1202","severity":1,"message":"1203","line":835,"column":25,"nodeType":"1120","endLine":835,"endColumn":65},{"ruleId":"1202","severity":1,"message":"1203","line":844,"column":27,"nodeType":"1120","endLine":844,"endColumn":60},{"ruleId":"1228","severity":1,"message":"1229","line":461,"column":25,"nodeType":"1120","endLine":470,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1095","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1185","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1100","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1186","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1187","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1230","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1188","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1190","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1191","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1099","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1231","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1192","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1193","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1194","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1232","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1152","line":22,"column":19,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1233","line":24,"column":8,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1234","line":25,"column":8,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1235","line":26,"column":8,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1236","line":27,"column":8,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1237","line":28,"column":8,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1238","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1239","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1240","line":136,"column":10,"nodeType":"1092","messageId":"1093","endLine":136,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1241","line":147,"column":10,"nodeType":"1092","messageId":"1093","endLine":147,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1201","line":161,"column":9,"nodeType":"1092","messageId":"1093","endLine":161,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1242","line":178,"column":9,"nodeType":"1092","messageId":"1093","endLine":178,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1243","line":197,"column":23,"nodeType":"1092","messageId":"1093","endLine":197,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1244","line":198,"column":23,"nodeType":"1092","messageId":"1093","endLine":198,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1245","line":199,"column":26,"nodeType":"1092","messageId":"1093","endLine":199,"endColumn":40},{"ruleId":"1202","severity":1,"message":"1246","line":1082,"column":9,"nodeType":"1120","endLine":1082,"endColumn":35},{"ruleId":"1202","severity":1,"message":"1203","line":1087,"column":13,"nodeType":"1120","endLine":1087,"endColumn":73},{"ruleId":"1107","severity":1,"message":"1108","line":21,"column":16,"nodeType":"1109","messageId":"1110","endLine":21,"endColumn":18},{"ruleId":"1107","severity":1,"message":"1108","line":43,"column":16,"nodeType":"1109","messageId":"1110","endLine":43,"endColumn":18},{"ruleId":"1107","severity":1,"message":"1108","line":60,"column":23,"nodeType":"1109","messageId":"1110","endLine":60,"endColumn":25},{"ruleId":"1247","severity":1,"message":"1248","line":64,"column":19,"nodeType":"1092","messageId":"1249","endLine":64,"endColumn":25},{"ruleId":"1107","severity":1,"message":"1108","line":3,"column":18,"nodeType":"1109","messageId":"1110","endLine":3,"endColumn":20},{"ruleId":"1107","severity":1,"message":"1108","line":20,"column":21,"nodeType":"1109","messageId":"1110","endLine":20,"endColumn":23},{"ruleId":"1107","severity":1,"message":"1108","line":29,"column":21,"nodeType":"1109","messageId":"1110","endLine":29,"endColumn":23},{"ruleId":"1107","severity":1,"message":"1108","line":39,"column":24,"nodeType":"1109","messageId":"1110","endLine":39,"endColumn":26},{"ruleId":"1107","severity":1,"message":"1108","line":49,"column":30,"nodeType":"1109","messageId":"1110","endLine":49,"endColumn":32},{"ruleId":"1107","severity":1,"message":"1108","line":59,"column":30,"nodeType":"1109","messageId":"1110","endLine":59,"endColumn":32},{"ruleId":"1250","severity":1,"message":"1251","line":68,"column":27,"nodeType":"1114","messageId":"1252","endLine":68,"endColumn":28,"suggestions":"1253"},{"ruleId":"1250","severity":1,"message":"1254","line":68,"column":29,"nodeType":"1114","messageId":"1252","endLine":68,"endColumn":30,"suggestions":"1255"},{"ruleId":"1250","severity":1,"message":"1256","line":68,"column":34,"nodeType":"1114","messageId":"1252","endLine":68,"endColumn":35,"suggestions":"1257"},{"ruleId":"1250","severity":1,"message":"1254","line":68,"column":48,"nodeType":"1114","messageId":"1252","endLine":68,"endColumn":49,"suggestions":"1258"},{"ruleId":"1107","severity":1,"message":"1108","line":69,"column":21,"nodeType":"1109","messageId":"1110","endLine":69,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1123","line":2,"column":29,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1124","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1094","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1259","line":9,"column":10,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1125","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1260","line":14,"column":10,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1106","line":65,"column":9,"nodeType":"1092","messageId":"1093","endLine":65,"endColumn":16},{"ruleId":"1177","severity":1,"message":"1261","line":146,"column":6,"nodeType":"1179","endLine":146,"endColumn":8,"suggestions":"1262"},{"ruleId":"1118","severity":1,"message":"1119","line":192,"column":17,"nodeType":"1120","endLine":197,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1103","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1147","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1150","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1148","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1124","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1101","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1096","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1259","line":20,"column":10,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1125","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1140","line":83,"column":17,"nodeType":"1092","messageId":"1093","endLine":83,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1263","line":202,"column":9,"nodeType":"1092","messageId":"1093","endLine":202,"endColumn":13},{"ruleId":"1118","severity":1,"message":"1119","line":272,"column":23,"nodeType":"1120","endLine":277,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1264","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1094","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1099","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1127","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1103","line":13,"column":3,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1104","line":14,"column":3,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1265","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":7},{"ruleId":"1090","severity":1,"message":"1124","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1128","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1129","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1266","line":22,"column":8,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1130","line":24,"column":3,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1131","line":25,"column":3,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1132","line":26,"column":3,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1259","line":28,"column":10,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1125","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1126","line":31,"column":8,"nodeType":"1092","messageId":"1093","endLine":31,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1145","line":95,"column":10,"nodeType":"1092","messageId":"1093","endLine":95,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1267","line":95,"column":18,"nodeType":"1092","messageId":"1093","endLine":95,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1268","line":96,"column":10,"nodeType":"1092","messageId":"1093","endLine":96,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1269","line":102,"column":10,"nodeType":"1092","messageId":"1093","endLine":102,"endColumn":18},{"ruleId":"1177","severity":1,"message":"1270","line":107,"column":6,"nodeType":"1179","endLine":107,"endColumn":8,"suggestions":"1271"},{"ruleId":"1090","severity":1,"message":"1095","line":4,"column":8,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1185","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1100","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":11},{"ruleId":"1090","severity":1,"message":"1186","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1187","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1230","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1124","line":10,"column":8,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1188","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1189","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1190","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1191","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1099","line":16,"column":8,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1231","line":17,"column":8,"nodeType":"1092","messageId":"1093","endLine":17,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1192","line":18,"column":8,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1193","line":19,"column":8,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1194","line":20,"column":8,"nodeType":"1092","messageId":"1093","endLine":20,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1232","line":21,"column":8,"nodeType":"1092","messageId":"1093","endLine":21,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1104","line":22,"column":10,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1123","line":22,"column":29,"nodeType":"1092","messageId":"1093","endLine":22,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1091","line":23,"column":8,"nodeType":"1092","messageId":"1093","endLine":23,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1233","line":24,"column":8,"nodeType":"1092","messageId":"1093","endLine":24,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1234","line":25,"column":8,"nodeType":"1092","messageId":"1093","endLine":25,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1235","line":26,"column":8,"nodeType":"1092","messageId":"1093","endLine":26,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1236","line":27,"column":8,"nodeType":"1092","messageId":"1093","endLine":27,"endColumn":34},{"ruleId":"1090","severity":1,"message":"1237","line":28,"column":8,"nodeType":"1092","messageId":"1093","endLine":28,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1238","line":29,"column":8,"nodeType":"1092","messageId":"1093","endLine":29,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1239","line":30,"column":8,"nodeType":"1092","messageId":"1093","endLine":30,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1201","line":120,"column":9,"nodeType":"1092","messageId":"1093","endLine":120,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1242","line":122,"column":9,"nodeType":"1092","messageId":"1093","endLine":122,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1272","line":138,"column":10,"nodeType":"1092","messageId":"1093","endLine":138,"endColumn":19},{"ruleId":"1177","severity":1,"message":"1178","line":149,"column":6,"nodeType":"1179","endLine":149,"endColumn":8,"suggestions":"1273"},{"ruleId":"1202","severity":1,"message":"1246","line":983,"column":9,"nodeType":"1120","endLine":983,"endColumn":35},{"ruleId":"1202","severity":1,"message":"1203","line":988,"column":13,"nodeType":"1120","endLine":988,"endColumn":73},{"ruleId":"1086","replacedBy":"1274"},{"ruleId":"1088","replacedBy":"1275"},{"ruleId":"1090","severity":1,"message":"1123","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1104","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1094","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1096","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1276","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1277","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1278","line":15,"column":8,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":29},{"ruleId":"1121","severity":1,"message":"1122","line":24,"column":5,"nodeType":"1120","endLine":24,"endColumn":51},{"ruleId":"1172","severity":1,"message":"1279","line":36,"column":9,"nodeType":"1174","messageId":"1110","endLine":36,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1280","line":57,"column":9,"nodeType":"1092","messageId":"1093","endLine":57,"endColumn":15},{"ruleId":"1090","severity":1,"message":"1281","line":59,"column":10,"nodeType":"1092","messageId":"1093","endLine":59,"endColumn":21},{"ruleId":"1090","severity":1,"message":"1282","line":60,"column":19,"nodeType":"1092","messageId":"1093","endLine":60,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1283","line":62,"column":10,"nodeType":"1092","messageId":"1093","endLine":62,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1284","line":63,"column":7,"nodeType":"1092","messageId":"1093","endLine":63,"endColumn":9},{"ruleId":"1090","severity":1,"message":"1285","line":65,"column":9,"nodeType":"1092","messageId":"1093","endLine":65,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1286","line":75,"column":9,"nodeType":"1092","messageId":"1093","endLine":75,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1287","line":86,"column":9,"nodeType":"1092","messageId":"1093","endLine":86,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1288","line":88,"column":11,"nodeType":"1092","messageId":"1093","endLine":88,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1123","line":6,"column":3,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1104","line":7,"column":3,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1094","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1096","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1276","line":13,"column":8,"nodeType":"1092","messageId":"1093","endLine":13,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1277","line":14,"column":8,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":15},{"ruleId":"1121","severity":1,"message":"1122","line":24,"column":5,"nodeType":"1120","endLine":24,"endColumn":51},{"ruleId":"1172","severity":1,"message":"1279","line":36,"column":9,"nodeType":"1174","messageId":"1110","endLine":36,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1284","line":63,"column":7,"nodeType":"1092","messageId":"1093","endLine":63,"endColumn":9},{"ruleId":"1177","severity":1,"message":"1289","line":104,"column":6,"nodeType":"1179","endLine":104,"endColumn":8,"suggestions":"1290"},{"ruleId":"1107","severity":1,"message":"1108","line":137,"column":27,"nodeType":"1109","messageId":"1110","endLine":137,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1101","line":2,"column":10,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1291","line":12,"column":3,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1123","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1104","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1292","line":74,"column":9,"nodeType":"1092","messageId":"1093","endLine":74,"endColumn":17},{"ruleId":"1118","severity":1,"message":"1119","line":151,"column":19,"nodeType":"1120","endLine":156,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1104","line":4,"column":10,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1293","line":79,"column":21,"nodeType":"1092","messageId":"1093","endLine":79,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1096","line":5,"column":8,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1101","line":6,"column":8,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1094","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1264","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1104","line":11,"column":3,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1123","line":12,"column":3,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1103","line":14,"column":3,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1123","line":12,"column":3,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1103","line":14,"column":3,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1123","line":2,"column":29,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1106","line":52,"column":9,"nodeType":"1092","messageId":"1093","endLine":52,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1294","line":55,"column":10,"nodeType":"1092","messageId":"1093","endLine":55,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1295","line":55,"column":19,"nodeType":"1092","messageId":"1093","endLine":55,"endColumn":26},{"ruleId":"1118","severity":1,"message":"1119","line":170,"column":17,"nodeType":"1120","endLine":175,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":10,"nodeType":"1092","messageId":"1093","endLine":5,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1296","line":7,"column":8,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1297","line":8,"column":8,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":16},{"ruleId":"1090","severity":1,"message":"1298","line":9,"column":8,"nodeType":"1092","messageId":"1093","endLine":9,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1104","line":15,"column":3,"nodeType":"1092","messageId":"1093","endLine":15,"endColumn":10},{"ruleId":"1090","severity":1,"message":"1123","line":16,"column":3,"nodeType":"1092","messageId":"1093","endLine":16,"endColumn":12},{"ruleId":"1090","severity":1,"message":"1103","line":18,"column":3,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1293","line":86,"column":21,"nodeType":"1092","messageId":"1093","endLine":86,"endColumn":30},"no-native-reassign",["1299"],"no-negated-in-lhs",["1300"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'postDataAndImage' is defined but never used.","'getData' is defined but never used.","'Copyright' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AlertMsg' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ServerURL' is defined but never used.","'Typography' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Radio' is defined but never used.","'GoogleMapReact' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'SettingsBackupRestoreOutlined' is defined but never used.","'ErrselectedAssignDate' is assigned a value but never used.","'ErrselectedAssignTime' is assigned a value but never used.","'getErrTaskStatus' is assigned a value but never used.","'handleAssignDateChange' is assigned a value but never used.","'handleAssignTimeChange' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'setState' is assigned a value but never used.","'result' is assigned a value but never used.","'getRowData' is assigned a value but never used.","'setRowData' is assigned a value but never used.","'getErrImage' is assigned a value but never used.","'getMsg' is assigned a value but never used.","'getErrIcon' is assigned a value but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'setErrIcon' is assigned a value but never used.","'DialogContentText' is defined but never used.","'useEffect' is defined but never used.","'postData' is defined but never used.","'checkEmail' is defined but never used.","'checkMobile' is defined but never used.","'checkPassword' is defined but never used.","'getErrCompanyLogo' is assigned a value but never used.","'handleChangeStatus' is assigned a value but never used.","'getErrVendorId' is assigned a value but never used.","'setErrVendorId' is assigned a value but never used.","'body' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setTaskList' is assigned a value but never used.","'findByLabelText' is defined but never used.","'setErrCompanyLogo' is assigned a value but never used.","no-dupe-keys","Duplicate key 'avatortheme'.","ObjectExpression","'getErrStatus' is assigned a value but never used.","'setPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLicenceRecord'. Either include it or remove the dependency array.","ArrayExpression",["1301"],"'ldata' is assigned a value but never used.","'getAddress' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setStates' is assigned a value but never used.","'Drawer' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'open' is assigned a value but never used.","'admin' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CheckSession'. Either include it or remove the dependency array.",["1302"],"'fixedHeightPaper' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'getShiftId' is assigned a value but never used.","'setShiftId' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'CloseIcon' is defined but never used.","'setstate' is assigned a value but never used.","'CloudUploadIcon' is defined but never used.","'Select' is defined but never used.","'View' is defined but never used.","'getErrEmployeeName' is assigned a value but never used.","'getErrEmail' is assigned a value but never used.","'getErrJoinDate' is assigned a value but never used.","'getErrDOB' is assigned a value but never used.","'getErrMob' is assigned a value but never used.","'getErrDes' is assigned a value but never used.","'getErrAddress' is assigned a value but never used.","'getErrState' is assigned a value but never used.","'getErrCity' is assigned a value but never used.","'getErrPhoto' is assigned a value but never used.","'fillStates' is assigned a value but never used.","'handleState' is assigned a value but never used.","'fillCities' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'List' is defined but never used.","'Link' is defined but never used.","'ListItems' is defined but never used.","'PackageInterface' is defined but never used.","'DisplayAllPackages' is defined but never used.","'DisplayAllVendors' is defined but never used.","'DisplayAllFeaturesPackages' is defined but never used.","'Vendors' is defined but never used.","'FeaturesPackages' is defined but never used.","'AnalogueClock' is defined but never used.","'SampleNextArrow' is defined but never used.","'SamplePrevArrow' is defined but never used.","'clockOptions' is assigned a value but never used.","'setTotalEmp' is assigned a value but never used.","'setCountEmp' is assigned a value but never used.","'setPackageName' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-use-before-define","'result' was used before it was defined.","usedBeforeDefined","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["1303","1304"],"Unnecessary escape character: \\-.",["1305","1306"],"Unnecessary escape character: \\@.",["1307","1308"],["1309","1310"],"'checkRequire' is defined but never used.","'Day' is defined but never used.","React Hook useEffect has a missing dependency: 'getdate'. Either include it or remove the dependency array.",["1311"],"'list' is assigned a value but never used.","'SearchIcon' is defined but never used.","'GKey' is defined but never used.","'Geocode' is defined but never used.","'setMsg' is assigned a value but never used.","'getVendorId' is assigned a value but never used.","'getTrack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchEmp' and 'vendor.vendorid'. Either include them or remove the dependency array.",["1312"],"'getVendor' is assigned a value but never used.",["1313"],["1299"],["1300"],"'Autocomplete' is defined but never used.","'RoadMap' is defined but never used.","'AutocompleteTextField' is defined but never used.","Duplicate key 'width'.","'socket' is assigned a value but never used.","'getEmployee' is assigned a value but never used.","'setName' is assigned a value but never used.","'getEmployeeid' is assigned a value but never used.","'ac' is assigned a value but never used.","'fetchDataById' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'show' is assigned a value but never used.","'obj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setupEmitListener'. Either include it or remove the dependency array.",["1314"],"'SocketURL' is defined but never used.","'progress' is assigned a value but never used.","'setColumn' is assigned a value but never used.","'getdate' is assigned a value but never used.","'setdate' is assigned a value but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1315","fix":"1316"},{"desc":"1317","fix":"1318"},{"messageId":"1319","fix":"1320","desc":"1321"},{"messageId":"1322","fix":"1323","desc":"1324"},{"messageId":"1319","fix":"1325","desc":"1321"},{"messageId":"1322","fix":"1326","desc":"1324"},{"messageId":"1319","fix":"1327","desc":"1321"},{"messageId":"1322","fix":"1328","desc":"1324"},{"messageId":"1319","fix":"1329","desc":"1321"},{"messageId":"1322","fix":"1330","desc":"1324"},{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1315","fix":"1335"},{"desc":"1336","fix":"1337"},"Update the dependencies array to be: [fetchLicenceRecord]",{"range":"1338","text":"1339"},"Update the dependencies array to be: [CheckSession]",{"range":"1340","text":"1341"},"removeEscape",{"range":"1342","text":"1343"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1344","text":"1345"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1346","text":"1343"},{"range":"1347","text":"1345"},{"range":"1348","text":"1343"},{"range":"1349","text":"1345"},{"range":"1350","text":"1343"},{"range":"1351","text":"1345"},"Update the dependencies array to be: [getdate]",{"range":"1352","text":"1353"},"Update the dependencies array to be: [fetchEmp, vendor.vendorid]",{"range":"1354","text":"1355"},{"range":"1356","text":"1339"},"Update the dependencies array to be: [setupEmitListener]",{"range":"1357","text":"1358"},[4290,4292],"[fetchLicenceRecord]",[4843,4845],"[CheckSession]",[1427,1428],"",[1427,1427],"\\",[1429,1430],[1429,1429],[1434,1435],[1434,1434],[1448,1449],[1448,1448],[4077,4079],"[getdate]",[2869,2871],"[fetchEmp, vendor.vendorid]",[4630,4632],[2647,2649],"[setupEmitListener]"]